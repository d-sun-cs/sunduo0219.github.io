import{_ as n,V as t,W as e,a1 as l,X as s,Y as a}from"./framework-d934f75f.js";const i={},r=l('<h2 id="_1-数据库系统概述" tabindex="-1"><a class="header-anchor" href="#_1-数据库系统概述" aria-hidden="true">#</a> 1 数据库系统概述</h2><h3 id="_1-1-数据库系统的概念与功能" tabindex="-1"><a class="header-anchor" href="#_1-1-数据库系统的概念与功能" aria-hidden="true">#</a> 1.1 数据库系统的概念与功能</h3><h4 id="数据库系统的构成与功能" tabindex="-1"><a class="header-anchor" href="#数据库系统的构成与功能" aria-hidden="true">#</a> <em>数据库系统的构成与功能：</em></h4><blockquote><p>Everything Over DB</p></blockquote><ul><li><p><u>数据库系统的构成</u></p><ul><li>数据库(DB)：DataBase，相互之间有关联关系的表的集合</li><li>数据库管理系统(DBMS)：DataBase Management System，管理数据库的系统软件</li><li>数据库应用(DBAP)：DataBase APplication，完成某种数据库相关功能的应用程序</li><li>数据库管理员(DBA)：DataBase Administrator</li><li>计算机基本系统</li></ul></li><li><p><u>数据库系统的功能</u></p></li><li><p>数据库可以实现<strong>信息的积累与运用</strong></p><ul><li>积累：<strong>形成数据库</strong><ul><li>运用：将积累的信息转换为<strong>效益</strong></li><li>提供数据库的<strong>管理与控制</strong>功能</li></ul></li><li>数据库是<strong>大数据</strong>技术的基础 <ul><li>只求<strong>关系</strong>，不求因果</li></ul></li><li>从<strong>部分数据集</strong>上的分析，到<strong>全数据集</strong>上的分析</li></ul></li></ul><hr><h4 id="数据库与表的概念" tabindex="-1"><a class="header-anchor" href="#数据库与表的概念" aria-hidden="true">#</a> <em>数据库与表的概念：</em></h4><ul><li><p><u>数据库的概念</u>：</p><ul><li>数据库是<strong>电子化信息</strong>的集合</li><li>数据库是相互之间<strong>有关联关系的表</strong>的集合，存放若干表的大型<strong>文件</strong></li></ul></li><li><p><u>表的概念</u>：以<strong>按行按列</strong>形式组织及展现的数据</p><blockquote><p>表也可以称之为<strong>关系</strong></p></blockquote></li><li><p><u>表的构成</u>：</p><ul><li>表名</li><li>表标题（格式）</li><li>表内容（值）</li><li>表结构 <ul><li>行(row)/元组(tuple)/记录(record)</li><li>列(column)/字段(field)/属性(attribute)/数据项(data item)t</li></ul></li></ul></li><li><p><u>表的作用</u>：</p><ul><li>表中描述了一批相互有<strong>关联关系</strong>的数据</li><li>基于表提出了<strong>关系及关系模型</strong>，提出了<strong>关系数据库</strong></li></ul></li></ul><hr><h4 id="数据库管理系统的概念与功能" tabindex="-1"><a class="header-anchor" href="#数据库管理系统的概念与功能" aria-hidden="true">#</a> <em>数据库管理系统的概念与功能：</em></h4>',10),m=s("ul",null,[s("li",null,[s("p",null,[s("u",null,"概述"),a("：数据库管理系统一种系统软件，它通过"),s("strong",null,"结构化数据库语言"),a("提供基本的数据库操作功能，运行程序"),s("strong",null,"解析"),a("语言并"),s("strong",null,"执行"),a("对数据库的具体操作")])]),s("li",null,[s("p",null,[s("u",null,"提供数据库语言(SQL, Structured Query Language)")]),s("blockquote",null,[s("p",null,[a("主要从"),s("strong",null,"用户使用"),a("的角度讲解")])]),s("blockquote",null,[s("p",null,[a("数据库语言：DBMS提供的用于"),s("strong",null,"指示DBMS操作数据库"),a("的语言，相当于高级语言的一个或多个循环程序，可以嵌入高级语言（宿主语言）中使用")])]),s("ul",null,[s("li",null,[s("p",null,[a("数据"),s("strong",null,"定义"),a("语言(DDL, Data Definition Language)："),s("strong",null,"定义"),a("数据库中表的名称、标题（包括属性名及对属性值的要求）等"),s("strong",null,"格式"),a("，"),s("strong",null,"创建"),a("数据库和表")]),s("blockquote",null,[s("p",null,"也包括对数据库和表的删除、更改、查询")])]),s("li",null,[s("p",null,[a("数据"),s("strong",null,"操纵"),a("语言(DML, Data Manipulation Language)：对数据库中的表进行"),s("strong",null,"增加、删除、更改、检索"),a("等操作")])]),s("li",null,[s("p",null,[a("数据"),s("strong",null,"控制"),a("语言(DCL, Data Control Language)：规定"),s("strong",null,"用户"),a("操作"),s("strong",null,"数据"),a("的"),s("strong",null,"权限"),a("，实施对数据库的"),s("strong",null,"控制")])]),s("li",null,[s("p",null,[a("数据库"),s("strong",null,"维护"),a("程序：提供对数据库维护的功能，包括转储、恢复、重组、性能检测、分析等，一般由DBA使用")])])])]),s("li",null,[s("p",null,[s("u",null,"运行系统例行程序")]),s("blockquote",null,[s("p",null,[a("主要从"),s("strong",null,"系统实现"),a("的角度讲解")])]),s("blockquote",null,[s("p",null,[a("这些例行程序本质上是用"),s("u",null,[s("strong",null,[a("形式"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"→")]),s("annotation",{encoding:"application/x-tex"},"\\rarr")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"→")])])]),a("构造"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"→")]),s("annotation",{encoding:"application/x-tex"},"\\rarr")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"→")])])]),a("自动化")])]),a("的思想"),s("strong",null,"实现"),a("数据库管理系统")])]),s("ul",null,[s("li",null,[s("strong",null,"编译"),a("与执行控制程序 "),s("ul",null,[s("li",null,"将数据库语言翻译成DBMS可执行的命令（DDL编译器、DML编译器、DCL编译器等）")])]),s("li",null,[s("strong",null,"查询"),a("优化与查询实现程序 "),s("ul",null,[s("li",null,[a("提高数据库"),s("strong",null,"检索速度")]),s("li",null,[a("执行引擎"),s("strong",null,"实现查询")])])]),s("li",null,[s("strong",null,"存储与索引"),a("程序 "),s("ul",null,[s("li",null,[a("提供数据在"),s("strong",null,"外存"),a("上的"),s("strong",null,"高效存取"),a("手段")]),s("li",null,"实现存储管理器、缓冲区管理器、索引/文件和记录管理器等")])]),s("li",null,[s("strong",null,"事务"),a("处理程序 "),s("ul",null,[s("li",null,"提高可靠性，避免并发错误")])]),s("li",null,[a("各种"),s("strong",null,"控制"),a("程序 "),s("ul",null,[s("li",null,"通信控制：提供网络环境下数据操作与传输手段"),s("li",null,"故障恢复、安全性和完整性控制"),s("li",null,"数据库维护和数据字典管理"),s("li",null,"应用程序接口")])])]),s("blockquote",null,[s("p",null,"详见数据库系统笔记仓库")])])],-1),o=l('<h3 id="_1-2-数据库系统的抽象结构" tabindex="-1"><a class="header-anchor" href="#_1-2-数据库系统的抽象结构" aria-hidden="true">#</a> 1.2 数据库系统的抽象结构</h3><h4 id="三级模式两层映像" tabindex="-1"><a class="header-anchor" href="#三级模式两层映像" aria-hidden="true">#</a> <em>三级模式两层映像：</em></h4><ul><li><p>⭐️<u><strong>三级模式两层映像</strong>是数据库系统的标准结构</u></p></li><li><p><u>DBMS管理<strong>数据</strong>的三个层次</u>：</p><ul><li><p>外部层次/用户层次：某一<strong>用户</strong>能处理的数据，是全局数据的<strong>一部分</strong></p><blockquote><p>强调<strong>局部性</strong></p></blockquote></li><li><p>概念层次/逻辑层次：<strong>全局</strong>管理的数据，包含<strong>关联约束</strong></p><blockquote><p>强调<strong>全局性</strong></p></blockquote></li><li><p>内部层次/物理层次：<strong>存储</strong>在介质上的数据，包含存储路径、存储方式、存储索引等</p><blockquote><p><strong>强调物理存储</strong></p></blockquote></li></ul></li><li><p><u><strong>模式、视图、映像</strong>的概念</u>：</p><ul><li>模式(Schema)：对数据库中数据的<strong>结构性描述</strong>，表现数据的<strong>结构信息</strong></li><li>视图(View)/数据(Data)：某一种<strong>结构</strong>下数据库中的<strong>数据</strong></li><li>映像(Mapping)：一种结构到另一种结构的<strong>映射</strong></li></ul></li><li><p><strong><u>三级模式</u></strong>：</p><ul><li><p>局部/外部/外/用户/子 模式(External Schema)：某一<strong>用户</strong>能处理的<strong>数据的结构描述</strong></p><ul><li><p>局部/外部/外/用户/子 视图(External View)：某一用户能处理的<strong>数据</strong></p><blockquote><p>可以简称为<strong>视图</strong></p></blockquote></li></ul></li><li><p>全局/概念/逻辑 模式(Conceptual Schema)：<strong>全局</strong>管理的<strong>数据的结构描述</strong></p><blockquote><p>可以简称为<strong>模式</strong></p></blockquote><ul><li>全局/概念/逻辑 视图(Conceptual View)：<strong>全局</strong>管理的<strong>数据</strong></li></ul></li><li><p>内部/物理 模式(Internal Schema)：<strong>存储</strong>在介质上的<strong>数据的结构描述</strong></p><ul><li>内部/物理 视图(Internal View)：<strong>存储</strong>在介质上的<strong>数据</strong></li></ul></li></ul></li><li><p><strong><u>两层映像</u></strong>：</p><ul><li>E-C Mapping (External Schema-Conceptual Schema Mapping) <ul><li>概念：将<strong>外部模式</strong>映射为<strong>概念模式</strong>，从而实现<strong>概念视图</strong>向<strong>外部视图</strong>的转换</li><li>优点：便于<strong>用户</strong>观察和使用</li></ul></li><li>C-I Mapping (Conceptual Schem-Internal Schema Mapping) <ul><li>概念：将<strong>概念模式</strong>映射为<strong>内部模式</strong>，从而实现<strong>概念视图</strong>向<strong>内部视图</strong>的转换</li><li>优点：便于<strong>计算机</strong>进行存储和处理</li></ul></li></ul></li><li><p><u><strong>两个独立性</strong></u>：</p><blockquote><p>两个独立性是三级模式两层映像的重要优点</p></blockquote><ul><li>逻辑数据独立性：当<strong>概念模式</strong>变化时，只需改变<strong>E-C Mapping</strong>，无需改变<strong>外部模式</strong>，从而无需改变<strong>应用程序</strong></li><li>物理数据独立性：当<strong>内部模式</strong>变化时，只需改变<strong>C-I Mapping</strong>，无需改变<strong>概念模式</strong>，从而无需改变<strong>外部模式和应用程序</strong></li></ul><blockquote><p>三级模式两层映像本质上定义了一组<strong>接口规范</strong>，由用户按照接口定义三级模式，由DBMS程序自动实现两层映像，从而实现抽象、屏蔽变化</p></blockquote></li></ul><hr><h4 id="数据模型" tabindex="-1"><a class="header-anchor" href="#数据模型" aria-hidden="true">#</a> <em>数据模型：</em></h4><ul><li><p><u>数据模型的概念</u>：</p><ul><li>数据模型是<strong>对模式的抽象</strong></li><li>数据模型规定了<strong>模式统一描述方式</strong>，包括数据结构、操作和约束</li></ul></li><li><p><u>数据模型的常见种类</u>：</p><ul><li><p><strong><u>关系模型</u></strong>：</p><ul><li>以表的形式组织数据</li><li>规定所有模式都遵循<strong>表的数据结构</strong>，每个具体的模式都是拥有某些<strong>属性</strong>的表</li><li>规定对表形式<strong>数据的操作和约束</strong></li></ul></li><li><p><u>层次模型</u>：</p><ul><li><p>以树的形式组织数据</p></li><li><p>用<strong>实体型</strong>作为数据记录</p><blockquote><p>相当于树中的结点</p></blockquote></li><li><p>用<strong>系型</strong>表示数据之间的联系，由<strong>指针</strong>实现</p><blockquote><p>相当于树中的边</p></blockquote></li><li><p>规定所有模式都要描述<strong>实体型的含义</strong>并规定<strong>实体型之间的系型</strong></p></li></ul></li><li><p><u>网状模型</u>：</p><ul><li>以图的形式组织数据，同样有实体型和系型</li></ul></li></ul></li></ul><hr><h4 id="数据库系统的发展" tabindex="-1"><a class="header-anchor" href="#数据库系统的发展" aria-hidden="true">#</a> <em>数据库系统的发展：</em></h4><ul><li><p><u>四个阶段</u>：</p><ul><li><p>数据库技术探索</p></li><li><p>数据库技术确立</p></li><li><p>数据库技术成熟</p><blockquote><p>在该阶段提出了标准化数据库系统结构模型，也就是三级模式两层映像</p></blockquote></li><li><p>数据库技术深化发展</p></li></ul></li><li><p><u>从<strong>文件系统</strong>到<strong>数据库</strong></u>：</p><blockquote><p>详见数据库系统笔记仓库</p></blockquote><ul><li>文件系统 <ul><li>概述：文件系统是<strong>操作系统</strong>管理数据的方式，以<strong>记录</strong>为单位，提供各种存取方法</li><li>优点：用户不必考虑<strong>物理存储</strong>，不需要处理物理设备存取的复杂性</li><li>缺点： <ul><li><strong>数据与程序</strong>耦合度较高，数据的组织和语义依赖于程序的具体实现</li><li>共享差；不一致性高</li><li>文件、记录之间<strong>联系性</strong>较差</li><li>冗余大</li></ul></li></ul></li><li>数据库 <ul><li>概述：由DBMS统一存取，维护数据组织形式及语义，以<strong>记录</strong>为单位，也可以<strong>数据项</strong>和<strong>记录集合</strong>为单位</li><li>优点： <ul><li>DBMS 数据及数据结构的定义和描述，让<strong>数据与应用程序</strong>解耦合，具有<strong>两个独立性</strong>，查询和统计高效</li><li><strong>统一的数据控制</strong>，共享性高；自动检查安全性、完整性、并发正确性</li><li>文件（Table）、记录之间有关联</li><li>冗余小，易扩充</li></ul></li></ul></li></ul></li><li><p><u>从层次模型、网状模型数据库到<strong>关系模型数据库</strong></u>：</p><ul><li><p>第一代数据库系统：层次模型与网状模型数据库</p><blockquote><p>重要的特点：<strong>指针</strong></p></blockquote><ul><li>数据的<strong>结构</strong>：数据之间的关联关系由<strong>指针系统</strong>维护，结构描述复杂</li><li>数据的<strong>操作</strong>： <ul><li>数据检索操作依赖于<strong>指针系统</strong>指示的<strong>路径</strong></li><li>需要逐一记录操作，不能有效支持<strong>记录集合</strong>的操作</li></ul></li></ul></li><li><p>第二代数据库系统：关系模型数据库</p><blockquote><p><strong>消除</strong>了网状、层次模型的<strong>指针</strong></p></blockquote><ul><li>数据的<strong>结构</strong>：数据之间的关联关系由<strong>表</strong>的属性值来表征，结构描述简单</li><li>数据的操作： <ul><li>数据检索操作不依赖于路径或过程信息，支持<strong>非过程化的数据操作</strong></li><li>有效支持<strong>记录集合</strong>的操作</li></ul></li><li>理论：有较为完善的理论基础</li></ul></li></ul></li><li><p><u>从<strong>关系</strong>数据库到<strong>对象-关系</strong>数据库、<strong>面向对象</strong>数据库</u>：</p><ul><li>关系数据库 <ul><li>按<strong>行列</strong>组织数据，遵循<strong>关系第一范式</strong>，要求<strong>数据项不可再分</strong></li><li>支持各种<strong>关系运算</strong>，有较为完善的关系数据库设计理论</li></ul></li><li>对象-关系数据库（新一代数据库系统） <ul><li>通过<strong>行对象、列对象</strong>组织数据</li><li>可以不满足第一范式，支持<strong>复合属性</strong>（结构对象）和<strong>多值属性</strong>（聚集对象）</li></ul></li><li>面向对象数据库（新一代数据库系统） <ul><li>结合面向对象技术（O-O）和集合/聚集操作技术（SQL）</li><li>支持复杂数据类型，支持<strong>面向对象特性</strong></li></ul></li><li>XML数据库（新一代数据库系统） <ul><li>半结构化数据库</li><li>将<strong>数据</strong>与<strong>数据的语义</strong>合并在一起进行存储和管理</li><li>面向<strong>数据交换</strong></li></ul></li></ul></li><li><p><u>从单一数据库到多数据库互联</u>：</p><ul><li><strong>ODBC作为接口</strong>，规范程序书写，解开应用程序与数据库管理系统的耦合</li><li>实现多种多样数据库的<strong>开放式互联</strong></li></ul></li></ul><h2 id="_2-关系模型" tabindex="-1"><a class="header-anchor" href="#_2-关系模型" aria-hidden="true">#</a> 2 关系模型</h2><h3 id="_2-1-关系模型概述" tabindex="-1"><a class="header-anchor" href="#_2-1-关系模型概述" aria-hidden="true">#</a> 2.1 关系模型概述</h3><h4 id="关系模型三要素" tabindex="-1"><a class="header-anchor" href="#关系模型三要素" aria-hidden="true">#</a> <em>关系模型三要素：</em></h4><ul><li><u>基本结构</u>：Relation/Table <ul><li>描述数据库各种<strong>数据的基本结构</strong>形式</li></ul></li><li><u>基本操作</u>：Relation Operator <ul><li>描述数据库<strong>表之间</strong>可能发生的各种操作（<strong>关系运算</strong>）</li></ul></li><li><u>完整性约束</u>：Integrity Constraints <ul><li>描述<strong>基本结构与操作</strong>应当遵循的<strong>约束条件</strong></li></ul></li></ul><hr><h4 id="关系的数学定义" tabindex="-1"><a class="header-anchor" href="#关系的数学定义" aria-hidden="true">#</a> <em>关系的数学定义：</em></h4>',15),c=s("ul",null,[s("li",null,[s("p",null,[s("u",null,"关系/表的定义")]),s("ul",null,[s("li",null,[s("p",null,"域（Domain）："),s("ul",null,[s("li",null,[a("域的概念：一组"),s("strong",null,"相同数据类型值"),a("的集合")]),s("li",null,[a("基数（Cardinality）：集合中的"),s("strong",null,"元素个数")]),s("li",null,[a("域在关系中的作用：是关系中某"),s("strong",null,"列的取值范围")])])]),s("li",null,[s("p",null,"笛卡尔积（Cartesian Product）："),s("ul",null,[s("li",null,[s("strong",null,"元组"),a("和"),s("strong",null,"笛卡尔积"),a("：从"),s("strong",null,"一组域中各取一个元素"),a("构成的序对称为"),s("strong",null,"元组"),a("，所有这样可能的"),s("strong",null,"不重复的元组的集合"),a("称为这组域的"),s("strong",null,"笛卡尔积")]),s("li",null,[a("笛卡尔积的"),s("strong",null,"分量"),a("：一个元组中的某一元素")]),s("li",null,[a("笛卡尔积的"),s("strong",null,"基数"),a("：笛卡尔积中元组的总数")])])]),s("li",null,[s("p",null,"关系（Relation）"),s("ul",null,[s("li",null,[s("p",null,[a("关系的概念：一组域的"),s("strong",null,"笛卡尔积的子集"),a("，具有某方面意义的"),s("strong",null,"元组的集合")])]),s("li",null,[s("p",null,[s("strong",null,"属性名"),a("：关系中每一列的名字")]),s("blockquote",null,[s("p",null,"关系的不同列可能来自同一域，用属性名加以区分")])])])]),s("li",null,[s("p",null,"关系模式/表标题（Shcema/Head）"),s("ul",null,[s("li",null,[s("p",null,[a("关系模式的概念：关系的一种描述方式，即"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"A"),s("mn",null,"1")]),s("mo",null,":"),s("msub",null,[s("mi",null,"D"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mn",null,"2")]),s("mo",null,":"),s("msub",null,[s("mi",null,"D"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mi",null,"n")]),s("mo",null,":"),s("msub",null,[s("mi",null,"D"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R(A_1:D_1,A_2:D_2,...,A_n:D_n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])])]),s("ul",null,[s("li",null,"R：关系的名字"),s("li",null,"A：属性"),s("li",null,"D：域（有时可以省略D）"),s("li",null,"n：关系的度/目（degree）")])]),s("li",null,[s("p",null,[a("DBMS中的关系模式："),s("code",null,"关系模式(属性名 域名, ...)")]),s("ul",null,[s("li",null,[s("code",null,"域名"),a("的描述方式："),s("code",null,"属性类型(长度)")])]),s("blockquote",null,[s("p",null,[a("举例："),s("code",null,"Student(S# char(8), Sname char(10), Sage integer(9))")])])]),s("li",null,[s("p",null,"关系模式与关系："),s("ul",null,[s("li",null,[a("关系模式是"),s("strong",null,"关系的结构"),a("，关系是关系模式下的"),s("strong",null,"数据集合")]),s("li",null,"同一关系模式下可以有很多关系")])])])])])]),s("li",null,[s("p",null,[s("u",null,"关系/表的特性")]),s("ul",null,[s("li",null,[s("p",null,[s("strong",null,"列同质"),a("：每一列中的分量来自"),s("strong",null,"同一域")])]),s("li",null,[s("p",null,[s("strong",null,"属性名不冲突"),a("：关系模式中各"),s("strong",null,"属性名必须不同"),a("，对应的域可以相同")])]),s("li",null,[s("p",null,[s("strong",null,"行列位置互换性"),a("：用"),s("strong",null,"属性名"),a("区分列，用某"),s("strong",null,"属性值"),a("区分行，而不依靠位置区分")]),s("blockquote",null,[s("p",null,[a("仅仅是"),s("strong",null,"行列位置互换"),a("的两个关系是"),s("strong",null,"相同"),a("的关系")])])]),s("li",null,[s("p",null,[s("strong",null,"元组不重复"),a("：关系中的任意两个元组不能完全相同，即不能"),s("strong",null,"每个分量都相同")]),s("blockquote",null,[s("p",null,[a("现实应用中，"),s("strong",null,"表"),a("可能不完全遵守此特性")])])]),s("li",null,[s("p",null,[s("strong",null,"第一范式"),a("：属性不可再分")])])])]),s("li",null,[s("p",null,[s("u",null,"特殊的属性(组)")]),s("ul",null,[s("li",null,[s("p",null,[s("em",null,"候选码/候选键（Candidate / Alternative Key）"),a("：关系中的一个"),s("strong",null,"属性组"),a("，其值能"),s("strong",null,"唯一标识一个元组"),a("，若去掉其中任何一个属性则不能唯一标识元组")]),s("blockquote",null,[s("p",null,"具有“极小性”")])]),s("li",null,[s("p",null,[s("em",null,"主码/主键（Primary Key）"),a("：被选定为主要线索的候选码/候选键")])]),s("li",null,[s("p",null,[s("em",null,"主属性与非主属性"),a("：包含在任何一个"),s("strong",null,"候选码"),a("中的属性称为"),s("strong",null,"主属性"),a("，其他属性称为"),s("strong",null,"非主属性")])]),s("li",null,[s("p",null,[s("em",null,"外码/外键（Foreign Key）"),a("：与"),s("strong",null,"另一个关系的候选码"),a("相对应的"),s("strong",null,"属性组")]),s("blockquote",null,[s("p",null,[a("两个关系通常是靠"),s("strong",null,"外码连接"),a("起来的")])])])])])],-1),p=l('<hr><h4 id="关系模型中的完整性约束" tabindex="-1"><a class="header-anchor" href="#关系模型中的完整性约束" aria-hidden="true">#</a> <em>关系模型中的完整性约束：</em></h4><ul><li><strong>实体完整性</strong>：<strong>主键</strong>中的属性值不能为空</li><li><strong>参照完整性</strong>：若<strong>外键</strong>对应的候选键是<strong>主键</strong>，则其属性值要么与其对应<strong>主键的某一值</strong>相等，要么为<strong>空值</strong></li><li><strong>用户自定义</strong>的完整性：用户针对具体的应用环境定义的完整性约束条件 <ul><li>可以在域的基础上加约束</li><li>可以对属性或属性组联合约束</li></ul></li><li>DBMS对完整性的支持： <ul><li><strong>实体完整性和参照完整性</strong>由DBMS系统自动支持</li><li>用户可以<strong>自定义</strong>完整性约束</li><li>有<strong>更新</strong>操作发生时，<strong>DBMS自动检查</strong>是否符合完整性</li></ul></li></ul><h3 id="_2-2-关系代数" tabindex="-1"><a class="header-anchor" href="#_2-2-关系代数" aria-hidden="true">#</a> 2.2 关系代数</h3><h4 id="关系代数运算概述" tabindex="-1"><a class="header-anchor" href="#关系代数运算概述" aria-hidden="true">#</a> <em>关系代数运算概述：</em></h4><ul><li><p><strong>基本概念</strong>：基于关系代数的运算，就是<strong>基于集合的运算</strong></p></li><li><p><strong>输入输出</strong>：<strong>一个或多个关系</strong>为输入，输出<strong>一个新的关系</strong></p></li><li><p><strong>作用</strong>：一种<strong>抽象语言</strong>，是其他<strong>数据库语言</strong>如SQL的基础</p></li><li><p><strong>运算思想</strong>：先实现<strong>基本操作</strong>，再组合成<strong>扩展操作</strong></p><ul><li>下述扩展操作均可由5个基本操作组合完成</li></ul></li><li><p>关系代数运算的约束/<strong>并相容性</strong>：参与运算的关系<strong>属性数目（目数、度数）相同</strong>，对应<strong>属性的域相同</strong></p><ul><li>关系代数某些操作都要满足<strong>并相容性</strong></li></ul></li></ul><hr><h4 id="关系代数的基本操作" tabindex="-1"><a class="header-anchor" href="#关系代数的基本操作" aria-hidden="true">#</a> <em>关系代数的基本操作：</em></h4>',8),u=s("ul",null,[s("li",null,[s("p",null,"**并（Union）**操作"),s("ul",null,[s("li",null,[a("概念：出现在"),s("strong",null,"关系R或关系S"),a("中的所有"),s("strong",null,"不重复"),a("元组集合 "),s("ul",null,[s("li",null,"要满足并相容性")])]),s("li",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"∪"),s("mi",null,"S"),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("mi",null,"t"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"R"),s("mo",null,"∨"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"S"),s("mo",{stretchy:"false"},"}"),s("mo",{separator:"true"},","),s("mi",null,"t"),s("mtext",null,"是元组")]),s("annotation",{encoding:"application/x-tex"},"R\\cup S=\\{t|t\\in R\\vee t\\in S\\},t是元组")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∨"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6542em","vertical-align":"-0.0391em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},"}"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"是元组")])])])])])]),s("li",null,[s("p",null,"**差（Difference）**操作"),s("ul",null,[s("li",null,[a("概念：出现在关系R中但不出现在关系S中的所有元组集合 "),s("ul",null,[s("li",null,"要满足并相容性")])]),s("li",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S"),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("mi",null,"t"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"R"),s("mo",null,"∧"),s("mi",null,"t"),s("mo",{mathvariant:"normal"},"∉"),s("mi",null,"S"),s("mo",{stretchy:"false"},"}"),s("mo",{separator:"true"},","),s("mi",null,"t"),s("mtext",null,"是元组")]),s("annotation",{encoding:"application/x-tex"},"R-S=\\{t|t\\in R\\wedge t\\notin S\\},t是元组")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mord"},[s("span",{class:"mrel"},"∈")]),s("span",{class:"mord vbox"},[s("span",{class:"thinbox"},[s("span",{class:"llap"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"inner"},[s("span",{class:"mord"},[s("span",{class:"mord"},"/"),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}})])]),s("span",{class:"fix"})])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},"}"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"是元组")])])])])])]),s("li",null,[s("p",null,"**广义笛卡尔积（Cartesian Product）**操作"),s("ul",null,[s("li",null,[s("p",null,[a("概念：关系R与关系S中元组所有可能的"),s("strong",null,"拼接"),a("构成的元组集合")])]),s("li",null,[s("p",null,"数学描述："),s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",{class:"mtr-glue"}),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mi",null,"R"),s("mo",null,"×"),s("mi",null,"S"),s("mo",null,"=")])])]),s("mtd",{class:"mtr-glue"}),s("mtd",{class:"mml-eqn-num"})]),s("mtr",null,[s("mtd",{class:"mtr-glue"}),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",{stretchy:"false"},"{"),s("mo",null,"<"),s("msub",null,[s("mi",null,"a"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"a"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"a"),s("mi",null,"n")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"b"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"b"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"b"),s("mi",null,"n")]),s("mo",null,">"),s("mi",{mathvariant:"normal"},"∣")])])]),s("mtd",{class:"mtr-glue"}),s("mtd",{class:"mml-eqn-num"})]),s("mtr",null,[s("mtd",{class:"mtr-glue"}),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"<"),s("msub",null,[s("mi",null,"a"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"a"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"a"),s("mi",null,"n")]),s("mo",null,">"),s("mo",null,"∈"),s("mi",null,"R"),s("mtext",null,"  "),s("mo",null,"∧"),s("mo",null,"<"),s("msub",null,[s("mi",null,"b"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"b"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"b"),s("mi",null,"n")]),s("mo",null,">"),s("mo",null,"∈"),s("mi",null,"S"),s("mo",{stretchy:"false"},"}")])])]),s("mtd",{class:"mtr-glue"}),s("mtd",{class:"mml-eqn-num"})])]),s("annotation",{encoding:"application/x-tex"}," \\begin{align} &R\\times S=\\\\ &\\{<a_1,a_2,...,a_n,b_1,b_2,...,b_n>|\\\\ &<a_1,a_2,...,a_n>\\in R~~\\wedge<b_1,b_2,...,b_n>\\in S\\} \\end{align} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"4.5em","vertical-align":"-2em"}}),s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.5em"}},[s("span",{style:{top:"-4.5em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-1.5em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"mord"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2em"}},[s("span")])])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.5em"}},[s("span",{style:{top:"-4.66em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"=")])]),s("span",{style:{top:"-3.16em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mopen"},"{"),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},"∣")])]),s("span",{style:{top:"-1.66em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},"}")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2em"}},[s("span")])])])])])]),s("span",{class:"tag"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.5em"}},[s("span",{style:{top:"-4.5em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"eqn-num"})]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"eqn-num"})]),s("span",{style:{top:"-1.5em"}},[s("span",{class:"pstrut",style:{height:"2.84em"}}),s("span",{class:"eqn-num"})])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2em"}},[s("span")])])])])])])])])]),s("li",null,[s("p",null,"满足的性质："),s("ul",null,[s("li",null,"交换律"),s("li",null,"度数相加"),s("li",null,"基数相乘")])]),s("li",null,[s("p",null,[a("应用："),s("strong",null,"检索多个表")])])])]),s("li",null,[s("p",null,"**选择（Select）**操作"),s("ul",null,[s("li",null,[a("概念：从关系R中选择出满足给定条件condition的"),s("strong",null,"元组")]),s("li",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("mi",null,"t"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"R"),s("mo",null,"∧"),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"t"),s("mi",null,"r"),s("mi",null,"u"),s("mi",null,"e"),s("mo",{stretchy:"false"},"}")]),s("annotation",{encoding:"application/x-tex"},"\\sigma_{con}(R)=\\{t|t\\in R\\wedge con(t)=true\\}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"co"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mclose"},"}")])])]),s("ul",null,[s("li",null,[s("strong",null,[a("条件 "),s("code",null,"con(t)"),s("strong",null,"的描述：由"),a("逻辑运算符")]),a("连接"),s("strong",null,"比较表达式"),a("组成 "),s("ul",null,[s("li",null,[a("逻辑运算符："),s("code",null,"and or not")]),s("li",null,[a("比较表达式："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"X"),s("mtext",null," "),s("mi",null,"θ"),s("mtext",null," "),s("mi",null,"Y")]),s("annotation",{encoding:"application/x-tex"},"X~\\theta~Y")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"X"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal",style:{"margin-right":"0.22222em"}},"Y")])])]),a("，其中X和Y是"),s("strong",null,"分量、常量或简单函数"),a("，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"},"\\theta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),a("是比较运算符，"),s("code",null,"> >= < <= = !=")]),s("li",null,[s("strong",null,"分量"),a("的描述：设"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"A"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("msub",null,[s("mi",null,"A"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R(A_1,A_2,...A_n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),a("，"),s("code",null,"t"),a("是 "),s("code",null,"R"),a("的元组，"),s("code",null,"t"),a("的分量记为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"A"),s("mi",null,"i")]),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"t[A_i]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"]")])])]),a("或"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"A"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"A_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])])])])])]),s("blockquote",null,[s("p",null,[a("与SQL中常用的 "),s("code",null,"select"),a("不同，这里选择的是"),s("strong",null,"元组"),a("，是行")])])]),s("li",null,[s("p",null,"**投影（Project）**操作"),s("ul",null,[s("li",null,[a("概念：关系R中属性包含在A中的"),s("strong",null,"列"),a("构成的关系 "),s("ul",null,[s("li",null,"要去掉重复元组")])]),s("li",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mrow",null,[s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mi",null,"k")])])])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("mo",null,"<"),s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",{stretchy:"false"},"]"),s("mo",{separator:"true"},","),s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",{stretchy:"false"},"]"),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mi",null,"k")])]),s("mo",{stretchy:"false"},"]"),s("mo",null,">"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"R"),s("mo",{stretchy:"false"},"}")]),s("annotation",{encoding:"application/x-tex"},"\\Pi_{A_{i1},A_{i2},...,A_{ik}}(R)=\\{<t[A_{i1}],t[A_{i2}],...,t[A_{ik}]>|t\\in R\\}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0361em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3281em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])]),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3281em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])]),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mtight"},"..."),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.3488em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"ik")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1512em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"]"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"]"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"ik")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},"}")])])])]),s("li",null,[a("应用：用户可以通过"),s("strong",null,"投影、选择操作"),a("查询关心的数据信息")])]),s("blockquote",null,[s("p",null,[a("对应了SQL中常用的 "),s("code",null,"select"),a("，选择的是"),s("strong",null,"属性"),a("，是列")]),s("p",null,"当然关系会去重，表可以不去")])]),s("li",null,[s("p",null,[s("strong",null,"更名"),a("操作")]),s("ul",null,[s("li",null,[s("p",null,[a("概念：为关系代数式中的"),s("strong",null,"同一个关系取别名"),a("以区分")])]),s("li",null,[s("p",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"ρ"),s("msub",null,[s("mi",null,"R"),s("mn",null,"1")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\rho_{R_1}(R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0001em","vertical-align":"-0.2501em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"ρ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3173em"}},[s("span",{style:{top:"-2.357em","margin-left":"-0.0077em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2501em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])])]),s("blockquote",null,[s("p",null,[a("将关系R更名为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"R"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"R_1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])])])])])],-1),h=s("hr",null,null,-1),g=s("h4",{id:"关系代数的扩展操作",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#关系代数的扩展操作","aria-hidden":"true"},"#"),a(),s("em",null,"关系代数的扩展操作：")],-1),d=s("ul",null,[s("li",null,[s("p",null,"**交（Intersection）**操作"),s("ul",null,[s("li",null,[a("概念：同时出现在"),s("strong",null,"关系R和关系S"),a("中的所有元组集合 "),s("ul",null,[s("li",null,"要满足并相容性")])]),s("li",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"∩"),s("mi",null,"S"),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("mi",null,"t"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"R"),s("mo",null,"∧"),s("mi",null,"t"),s("mo",null,"∈"),s("mi",null,"S"),s("mo",{stretchy:"false"},"}"),s("mo",{separator:"true"},","),s("mi",null,"t"),s("mtext",null,"是元组")]),s("annotation",{encoding:"application/x-tex"},"R\\cap S=\\{t|t\\in R\\wedge t\\in S\\},t是元组")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∩"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6542em","vertical-align":"-0.0391em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},"}"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"是元组")])])])]),s("li",null,[a("与基本操作的关系："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"∩"),s("mi",null,"S"),s("mo",null,"="),s("mi",null,"R"),s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"S"),s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"S"),s("mo",null,"−"),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R\\cap S=R-(R-S)=S-(S-R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∩"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])])])])]),s("li",null,[s("p",null,[a("**"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"\\theta-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a("）**操作：")]),s("ul",null,[s("li",null,[s("p",null,[a("概念：关系R和关系S的笛卡尔积中，R中属性A与S中属性B满足"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"},"\\theta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),a("条件的元组集合")]),s("blockquote",null,[s("p",null,[a("也叫 "),s("em",null,"内连接（Inner Join）")])])]),s("li",null,[s("p",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,[s("munder",null,[s("mo",null,[s("mo",null,"⋈")]),s("mrow",null,[s("mi",null,"A"),s("mtext",null," "),s("mi",null,"θ"),s("mtext",null," "),s("mi",null,"B")])])]),s("mi",null,"S"),s("mo",null,"="),s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("mi",null,"A"),s("mo",{stretchy:"false"},"]"),s("mtext",null," "),s("mi",null,"θ"),s("mtext",null," "),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"B"),s("mo",{stretchy:"false"},"]")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",null,"×"),s("mi",null,"S"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R\\underset{A~\\theta~B}\\bowtie S=\\sigma_{t[A]~\\theta~s[B]}(R\\times S)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.4404em","vertical-align":"-0.7571em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.505em"}},[s("span",{style:{top:"-2.3429em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"mspace nobreak mtight"},[s("span",{class:"mtight"}," ")]),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mspace nobreak mtight"},[s("span",{class:"mtight"}," ")]),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B")])])]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",null,[s("span",{class:"mop"},"⋈")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7571em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1052em","vertical-align":"-0.3552em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.5198em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"mclose mtight"},"]"),s("span",{class:"mspace nobreak mtight"},[s("span",{class:"mtight"}," ")]),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mspace nobreak mtight"},[s("span",{class:"mtight"}," ")]),s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mclose mtight"},"]")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3552em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")")])])])]),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"A"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"A"),s("mo",null,"∈"),s("mo",{stretchy:"false"},"{"),s("msub",null,[s("mi",null,"A"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mi",null,"n")]),s("mo",{stretchy:"false"},"}")]),s("annotation",{encoding:"application/x-tex"},"R(A_1,A_2,...,A_n),~A\\in\\{A_1,A_2,...,A_n\\}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mpunct"},","),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"}")])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"B"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"B"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"B"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")"),s("mo",{separator:"true"},","),s("mtext",null," "),s("mi",null,"B"),s("mo",null,"∈"),s("mo",{stretchy:"false"},"{"),s("msub",null,[s("mi",null,"B"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"B"),s("mn",null,"2")]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"B"),s("mi",null,"n")]),s("mo",{stretchy:"false"},"}")]),s("annotation",{encoding:"application/x-tex"},"S(B_1,B_2,...,B_n),~B\\in\\{B_1,B_2,...,B_n\\}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mpunct"},","),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},"}")])])])]),s("li",null,"t是关系R中的元组，s是关系S中的元组"),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"},"\\theta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),a("是比较运算符，属性A和属性B具有可比性")])])]),s("li",null,[s("p",null,"应用：与投影、选择操作联用")]),s("li",null,[s("p",null,[a("DBMS的实现：DBMS可以"),s("strong",null,"直接进行连接操作"),a("，降低中间结果的保存量，而不必先形成笛卡尔积")])])])]),s("li",null,[s("p",null,"**等值连接（Equi-Join）**操作"),s("ul",null,[s("li",null,[s("p",null,[a("概念：关系R和关系S的笛卡尔积中，R中属性A与S中属性B"),s("strong",null,"相等"),a("的元组集合")]),s("ul",null,[s("li",null,[s("p",null,[a("一种特殊的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接")]),s("blockquote",null,[s("p",null,"是一种内连接")])]),s("li",null,[s("p",null,[s("strong",null,"合并"),a("参与等值连接的"),s("strong",null,"重复的属性列"),a("，因为值完全相同，保留一列即可")]),s("blockquote",null,[s("p",null,[a("普通的 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ")]),s("annotation",{encoding:"application/x-tex"},"\\theta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ")])])]),a(" 连接是不需要合并的")])])])])]),s("li",null,[s("p",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,[s("munder",null,[s("mo",null,[s("mo",null,"⋈")]),s("mrow",null,[s("mi",null,"A"),s("mo",null,"="),s("mtext",null," "),s("mi",null,"B")])])]),s("mi",null,"S"),s("mo",null,"="),s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("mi",null,"A"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"B"),s("mo",{stretchy:"false"},"]")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",null,"×"),s("mi",null,"S"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R\\underset{A=~B}\\bowtie S=\\sigma_{t[A]=s[B]}(R\\times S)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.4327em","vertical-align":"-0.7493em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.505em"}},[s("span",{style:{top:"-2.3507em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mspace nobreak mtight"},[s("span",{class:"mtight"}," ")]),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B")])])]),s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",null,[s("span",{class:"mop"},"⋈")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7493em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1052em","vertical-align":"-0.3552em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.5198em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"mclose mtight"},"]"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mclose mtight"},"]")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3552em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")")])])])])])])]),s("li",null,[s("p",null,[s("strong",null,"自然连接"),a("操作")]),s("ul",null,[s("li",null,[s("p",null,[a("概念：关系R和关系S的笛卡尔积中，"),s("strong",null,"相同属性组B"),a("上的值都"),s("strong",null,"相等"),a("的元组集合")]),s("ul",null,[s("li",null,[s("p",null,"一种特殊的等值连接"),s("blockquote",null,[s("p",null,"是一种内连接")])]),s("li",null,[s("p",null,"要求关系R和关系S有相同的属性组B")]),s("li",null,[s("p",null,[s("strong",null,"合并"),a("参与等值连接的"),s("strong",null,"重复的属性列"),a("，因为值完全相同，保留一列即可")])])])]),s("li",null,[s("p",null,[a("数学描述："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"⋈"),s("mi",null,"S"),s("mo",null,"="),s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("mi",null,"B"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"B"),s("mo",{stretchy:"false"},"]")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",null,"×"),s("mi",null,"S"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R\\bowtie S=\\sigma_{t[B]=s[B]}(R\\times S)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6883em","vertical-align":"-0.005em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"⋈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1052em","vertical-align":"-0.3552em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.5198em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mclose mtight"},"]"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mclose mtight"},"]")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3552em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")")])])])])])])]),s("li",null,[s("p",null,"**除（Divison）**操作"),s("ul",null,[s("li",null,[s("p",null,[a("前提条件：关系S的属性集是关系R的属性集的"),s("strong",null,"真子集")])]),s("li",null,[s("p",null,[a("概念：关系R除关系S，得到关系中，"),s("strong",null,"属性集"),a("是关系R属性集"),s("strong",null,"差"),a("关系S属性集，"),s("strong",null,"元组"),a("是与S中每一个元组"),s("strong",null,"连接"),a("后的新元组都在关系R中的元组")])]),s("li",null,[s("p",null,"数学描述："),s("ul",null,[s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"÷"),s("mi",null,"S"),s("mo",null,"="),s("mo",{stretchy:"false"},"{"),s("mi",null,"t"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"t"),s("mo",null,"∈"),s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",null,"∧"),s("mi",{mathvariant:"normal"},"∀"),s("mi",null,"u"),s("mo",null,"∈"),s("mi",null,"S"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mi",null,"u"),s("mo",null,"∈"),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"}")]),s("annotation",{encoding:"application/x-tex"},"R\\div S=\\{t|t\\in\\Pi_{R-S}(R)\\wedge\\forall u\\in S(tu\\in R)\\}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"÷"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05764em"}},"S")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7335em","vertical-align":"-0.0391em"}}),s("span",{class:"mord"},"∀"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")}")])])])])]),s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"÷"),s("mi",null,"S"),s("mo",null,"="),s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",null,"−"),s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S")])]),s("mo",{stretchy:"false"},"("),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mi",null,"S"),s("mo",{stretchy:"false"},")"),s("mo",null,"−"),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"R\\div S=\\Pi_{R-S}(R)-\\Pi_{R-S}((\\Pi_{R-S}(R)\\times S)-R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"÷"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05764em"}},"S")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05764em"}},"S")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mopen"},"(("),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05764em"}},"S")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])])]),s("blockquote",null,[s("p",null,"如何记忆？"),s("ul",null,[s("li",null,[a("差运算保证并相容性，所以投影的是 "),s("code",null,"R-S"),a("中的属性")]),s("li",null,[a("通过 "),s("code",null,"差R"),a("的操作找到连接后不在R中的元组")])])])])])]),s("li",null,[s("p",null,"应用：带有“全部”、“所有”字样的检索"),s("blockquote",null,[s("p",null,"“全部”体现在**“商”与S中元组连接全部都在R中**")])])])]),s("li",null,[s("p",null,"**外连接（Outer-Join）**操作"),s("ul",null,[s("li",null,[s("p",null,[a("概念：两个关系连接时，若无匹配元组，则与"),s("strong",null,"全为空值"),a("的次关系元组连接")]),s("blockquote",null,[s("p",null,[a("是对"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接（Inner-Join）的扩展")])])]),s("li",null,[s("p",null,[a("外连接的形式：外连接 = 自然连接（或"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接）+ 失配元组（与"),s("strong",null,"全空元组"),a("的连接）")]),s("ul",null,[s("li",null,[s("p",null,[a("左外连接 = 自然连接（或"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接）+ 左侧表失配元组（与右侧表全空元组的连接）")]),s("blockquote",null,[s("p",null,"Left Outer Join")])]),s("li",null,[s("p",null,[a("右外连接 = 自然连接（或"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接）+ 右侧表失配元组（与左侧表全空元组的连接）")]),s("blockquote",null,[s("p",null,"Right Outer Join")])]),s("li",null,[s("p",null,[a("全外连接 = 自然连接（或"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接）+ 两侧表失配元组（与对侧表全空元组的连接）")]),s("blockquote",null,[s("p",null,"Full Outer Join")])])])]),s("li",null,[s("p",null,"应用：避免连接时丢失元组信息")])])])],-1),y=s("hr",null,null,-1),v=s("h4",{id:"关系代数操作的应用经验",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#关系代数操作的应用经验","aria-hidden":"true"},"#"),a(),s("em",null,"关系代数操作的应用经验：")],-1),b=s("ul",null,[s("li",null,[a("基本操作的书写思路/集合思维 "),s("ol",null,[s("li",null,[a("先写出 "),s("code",null,"R"),a("，即找出要操作的关系")]),s("li",null,[a("写"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"n")])]),s("mo",{stretchy:"false"},"("),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\sigma_{con}()")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mclose"},")")])])]),a("，即进行"),s("strong",null,"选择"),a("运算保留所需的行/元组")]),s("li",null,[a("写"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mrow",null,[s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",{separator:"true"},","),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"A"),s("mrow",null,[s("mi",null,"i"),s("mi",null,"k")])])])]),s("mo",{stretchy:"false"},"("),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Pi_{A_{i1},A_{i2},...,A_{ik}}()")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0361em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3281em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])]),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3281em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])]),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mtight"},"..."),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.3488em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"ik")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1512em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mclose"},")")])])]),a("，即进行投影运算保留所需的的列/属性")]),s("li",null,[a("进行"),s("strong",null,"并差积交"),a("运算")])])]),s("li",null,[a("扩展操作相关思路 "),s("ul",null,[s("li",null,[a("涉及"),s("strong",null,"多表"),a("时才需要考虑扩展操作")]),s("li",null,[a("在"),s("strong",null,"连接"),a("步骤中，依次尝试下列操作，直到满足需求 "),s("ol",null,[s("li",null,"自然连接"),s("li",null,[a("等值连接与"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"\\theta-")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mord"},"−")])])]),a("连接")]),s("li",null,"广义笛卡尔积")])])])])],-1),k=l(`<h2 id="_3-database-language-sql" tabindex="-1"><a class="header-anchor" href="#_3-database-language-sql" aria-hidden="true">#</a> 3 Database Language - SQL</h2><h3 id="_3-1-basic-sql" tabindex="-1"><a class="header-anchor" href="#_3-1-basic-sql" aria-hidden="true">#</a> 3.1 Basic SQL</h3><h4 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> <em>Overview：</em></h4><ul><li><u>Proposal &amp; Development:</u><ol><li>1975 - 1979: SQL</li><li>1992: <strong>SQL-92 / SQL2</strong><ul><li><strong>Standard</strong> relation database language</li></ul></li><li>1999: SQL-99 / SQL3 <ul><li>Object-oriented: row object and column object ...</li></ul></li></ol></li><li><u>Functions:</u><ul><li><p><em>DDL</em>: <code>Create</code>, <code>Alter</code>, <code>Drop</code></p><ul><li>Definition and removal of schema, including <strong>DB, table, view, index, integrity constraint, ...</strong></li></ul></li><li><p><em>DML</em>: <code>Insert</code>, <code>Delete</code>, <code>Update</code>, <code>Select</code></p><ul><li><strong>Query, update, aggregate operation</strong></li></ul></li><li><p><em>DCL</em>: <code>Grant</code>, <code>Revoke</code></p><ul><li><strong>Security</strong> control</li></ul></li></ul></li></ul><hr><h4 id="sql-manipulating-database" tabindex="-1"><a class="header-anchor" href="#sql-manipulating-database" aria-hidden="true">#</a> <em>SQL Manipulating Database：</em></h4><ul><li><p><u>Set up database:</u></p><ol><li><p>Create database:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> databaseName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Specify database:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> databaseName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Many DBMS allows operating multiple databases</li></ul></li><li><p><strong>Create table</strong>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tableName<span class="token punctuation">(</span>
    columnName dataType <span class="token punctuation">[</span><span class="token keyword">Default</span> defaultValue<span class="token operator">|</span><span class="token boolean">NULL</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">Primary</span> <span class="token keyword">key</span><span class="token operator">|</span><span class="token keyword">Unique</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">Not</span> <span class="token boolean">null</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token punctuation">,</span> columnName dataType <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Primary key</code>: primary key constraint, <strong>only one</strong> per table</li><li><code>Unique</code>: uniqueness constraint, namely <strong>candidate / alternative key</strong>, multiple per table</li><li><code>Not null</code>: not null constraint, allow <strong>no null value</strong> in this column</li><li><code>dataType</code>: <code>char(n) varchar(n) int numeric(p, q) real date time ...</code></li></ul><blockquote><p><code>create data</code> can define <strong>schema, integrity constraints and physical storage</strong></p></blockquote></li><li><p>(Append records into table: explained below ...)</p></li><li><p>(Close database: <code>close databaseName</code>)</p></li></ol></li><li><p><u>Amend database:</u></p><ul><li><p>Amend table:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> tableName
<span class="token keyword">add</span> columnName dataType<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token operator">|</span>
<span class="token keyword">drop</span> integrityConstraintName<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token operator">|</span>
<span class="token keyword">modify</span> columnName dataType<span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Add new columns</li><li>Drop integrity constraints</li><li>Modify definition of columns</li></ul></li><li><p>Drop table:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> tableName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>drop</code> revoke the whole table, including <strong>schema, records and views</strong> from this table</p><blockquote><p>But <code>delete from</code> only deletes the records</p></blockquote></li></ul></li><li><p>Drop database:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> databaseName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><hr><h4 id="sql-manipulating-table" tabindex="-1"><a class="header-anchor" href="#sql-manipulating-table" aria-hidden="true">#</a> <em>SQL Manipulating Table：</em></h4>`,9),x=s("ul",null,[s("li",null,[s("p",null,[s("u",null,"Single table query:")]),s("ul",null,[s("li",null,[s("p",null,"Simple query:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(` tableName
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" queryCondition"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,"Math description:"),s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"n"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mo",{stretchy:"false"},"["),s("mo",{separator:"true"},","),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"n"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mo",{stretchy:"false"},"]")])]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"y"),s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"d"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," \\pi_{columnName[,columnName]}(\\sigma_{queryCondition}(tableName)) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1052em","vertical-align":"-0.3552em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.5198em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"mn"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal mtight"},"am"),s("span",{class:"mord mathnormal mtight"},"e"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"mn"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal mtight"},"am"),s("span",{class:"mord mathnormal mtight"},"e"),s("span",{class:"mclose mtight"},"]")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3552em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"ery"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"ab"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mclose"},"))")])])])])])]),s("li",null,[s("p",null,[a("Clause: "),s("code",null,"Select From Where"),a(" and components after are called as their "),s("strong",null,"clauses")]),s("blockquote",null,[s("p",null,[a("The whole query statement can be a "),s("strong",null,"subquery"),a(" in a larger statement’s clause")])])]),s("li",null,[s("p",null,[s("code",null,"queryCondition"),a(": Just like conditions below "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"σ")]),s("annotation",{encoding:"application/x-tex"},"\\sigma")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ")])])]),a(", use "),s("code",null,"and or not"),a(", notice "),s("strong",null,"operator precedence"),a(" and comprehension of natural "),s("strong",null,"semantic"),a(" meaning")])])])]),s("li",null,[s("p",null,"Duplicate removal query:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(),s("span",{class:"token keyword"},"DISTINCT"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(` tableName
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" queryCondition"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,[s("code",null,"DISTINCT"),a(": DBMS allow "),s("strong",null,"duplicate"),a(" records in "),s("strong",null,"query result"),a(", which can be removed by "),s("code",null,"DISTINCT")]),s("blockquote",null,[s("p",null,[s("strong",null,"Duplicate"),a(" records in "),s("strong",null,"table"),a(" can be removed by "),s("code",null,"Primary key"),a(" and "),s("code",null,"Unique")])])])])]),s("li",null,[s("p",null,"Sorting query:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(` tableName
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" queryCondition"),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"order"),a(),s("span",{class:"token keyword"},"by"),a(" columnName "),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"asc"),s("span",{class:"token operator"},"|"),s("span",{class:"token keyword"},"desc"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("code",null,"order by"),a(": Query result are sorted by "),s("code",null,"columnName"),a(" according to specified order, "),s("strong",null,"ascending"),a(" if omitted")])])]),s("li",null,[s("p",null,"Fuzzy query:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(` tableName
`),s("span",{class:"token keyword"},"Where"),a(" columnName "),s("span",{class:"token punctuation"},"["),s("span",{class:"token operator"},"not"),a(),s("span",{class:"token punctuation"},"]"),s("span",{class:"token operator"},"like"),a(),s("span",{class:"token string"},'"regex"'),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,[s("code",null,"%"),a(": Match zero to multiple characters")])]),s("li",null,[s("p",null,[s("code",null,"_"),a(": Match one character")]),s("blockquote",null,[s("p",null,[a("Sometimes we use two "),s("code",null,"_"),a(" to represent one Chinese character")])])]),s("li",null,[s("p",null,[s("code",null,"\\"),a(": escape character")])])])])])]),s("li",null,[s("p",null,[s("u",null,"Multi-table joint query:")]),s("ul",null,[s("li",null,[s("p",null,"Simple join:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(" tableName1"),s("span",{class:"token punctuation"},","),a(" tableName2"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" queryCondition"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,"Math description:"),s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"π"),s("mrow",null,[s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"n"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mo",{stretchy:"false"},"["),s("mo",{separator:"true"},","),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"n"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mo",{stretchy:"false"},"]")])]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"σ"),s("mrow",null,[s("mi",null,"q"),s("mi",null,"u"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"y"),s("mi",null,"C"),s("mi",null,"o"),s("mi",null,"n"),s("mi",null,"d"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mn",null,"1"),s("mo",null,"×"),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mn",null,"2"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," \\pi_{columnName[,columnName]}(\\sigma_{queryCondition}(tableName1\\times tableName2)) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1052em","vertical-align":"-0.3552em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3448em"}},[s("span",{style:{top:"-2.5198em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"mn"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal mtight"},"am"),s("span",{class:"mord mathnormal mtight"},"e"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight"},"co"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"mn"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal mtight"},"am"),s("span",{class:"mord mathnormal mtight"},"e"),s("span",{class:"mclose mtight"},"]")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3552em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"ery"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"ab"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"ab"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord"},"2"),s("span",{class:"mclose"},"))")])])])])])]),s("li",null,[s("p",null,[s("code",null,"columnName"),a(": "),s("code",null,"tableName.attributeName"),a(" can be used to specify an "),s("strong",null,"attribute"),a(" in "),s("code",null,"select")])]),s("li",null,[s("p",null,[s("code",null,"queryCondition"),a(": "),s("strong",null,"Join condition"),a(" should be contained")]),s("blockquote",null,[s("p",null,[a("But in this way, "),s("strong",null,"join condition screening"),a(" will be done after "),s("strong",null,"Cartesian product"),a(" in "),s("code",null,"from"),a(", which has lower efficiency than "),s("code",null,"join"),a(" keyword")])])])])]),s("li",null,[s("p",null,"Table alias:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(" tableName1 "),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"as"),s("span",{class:"token punctuation"},"]"),a(" alias1"),s("span",{class:"token punctuation"},","),a(" tableName2 "),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"as"),s("span",{class:"token punctuation"},"]"),a(" alias2"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" queryCondition"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[a("Alias can be used to "),s("strong",null,"specify attributes"),a(", simplify long table name")])])])])]),s("li",null,[s("p",null,[s("u",null,"Table update:")]),s("ul",null,[s("li",null,[s("p",null,"Append records into table:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"insert"),a(),s("span",{class:"token keyword"},"into"),a(" tableName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"("),a("columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token keyword"},"values"),s("span",{class:"token punctuation"},"("),a("columnValue"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnValue "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`
`),s("span",{class:"token keyword"},"insert"),a(),s("span",{class:"token keyword"},"into"),a(" tableName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"("),a("columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"]"),a(`
subquery`),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("code",null,"columnValue"),a("s should stay the same order as "),s("code",null,"columnName"),a("s "),s("ul",null,[s("li",null,[a("If "),s("code",null,"columnName"),a("s are omitted, "),s("code",null,"columnValue"),a("s should stay the same order as all the columns in table")])])]),s("li",null,[s("code",null,"subquery"),a(" is the query result of a query statement")]),s("li",null,[s("strong",null,"Integrity constraint"),a(": DBMS automatically check integrity constraints and prevent inserting operations against constraints")])])]),s("li",null,[s("p",null,"Delete records from table:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Delete"),a(),s("span",{class:"token keyword"},"from"),a(` tableName
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" deleteCondition"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("code",null,"deleteCondition"),a(": If omitted, all the records will be deleted")]),s("li",null,[s("strong",null,"Integrity constraint"),a(": DBMS automatically check integrity constraints and prevent deleting operations against constraints")])])]),s("li",null,[s("p",null,[a("Update "),s("strong",null,"attribute value"),a(" of records in table:")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Update"),a(` tableName
`),s("span",{class:"token keyword"},"Set"),a(" columnName "),s("span",{class:"token operator"},"="),a(" expression "),s("span",{class:"token operator"},"|"),a(),s("span",{class:"token punctuation"},"("),a("subquery"),s("span",{class:"token punctuation"},")"),a(`
	`),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token operator"},"="),a(" expression "),s("span",{class:"token operator"},"|"),a(),s("span",{class:"token punctuation"},"("),a("subquery"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" updateCondition"),s("span",{class:"token punctuation"},"]"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("code",null,"updateCondition"),a(": If omitted, all the records will be updated")]),s("li",null,[s("strong",null,"Integrity constraint"),a(": DBMS automatically check integrity constraints and prevent updating operations against constraints")])])])])])],-1),w=l(`<h3 id="_3-2-extended-sql-view" tabindex="-1"><a class="header-anchor" href="#_3-2-extended-sql-view" aria-hidden="true">#</a> 3.2 Extended SQL &amp; View</h3><h4 id="subquery-in-where" tabindex="-1"><a class="header-anchor" href="#subquery-in-where" aria-hidden="true">#</a> <em>Subquery in Where：</em></h4><ul><li><p><u>Overview:</u></p><ul><li><p>Definition: <strong><code>select</code> statement</strong> in <strong><code>where</code> clause</strong>, part of <strong>query condition</strong></p></li><li><p>Function: Return query result set , implement various <strong>set operations</strong></p><ul><li>Set member qualification</li><li>Set comparison</li><li>Set cardinality test</li></ul></li><li><p>Subquery <strong>correlation</strong>: <code>select</code> statement with subquery can be divided into the <strong>inner and outer layers</strong></p><ul><li><p>Non-related subquery: The inner query is independent</p><blockquote><p>In this case, the inner query executes only once, which is more efficient</p></blockquote></li><li><p>Related subquery: The inner query is dependent on <strong>values of the outer query</strong></p><blockquote><p>In this case, the inner query executes multiple times along with <strong>outer query loop</strong> for the <strong>dependent values</strong>.</p><p>It’s better to try <strong>transforming</strong> related subquery into non-related subquery by adjust <strong>query condition</strong> to outer</p></blockquote></li></ul></li></ul></li><li><p><code>[not] in</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Where</span> expression <span class="token punctuation">[</span><span class="token operator">not</span> <span class="token punctuation">]</span><span class="token operator">in</span> <span class="token punctuation">(</span>subquery<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>expression</code>: a <strong>column name</strong>, a <strong>constant</strong> or their arithmetic operations</p></li><li><p>Semantics: Judge whether the <code>expression</code>&#39;s value is in the <code>subquery</code>&#39;s result set</p><blockquote><p>Naturally it’s like multiple <code>or</code></p></blockquote></li></ul></li><li><p><code>θ-some/all</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Where</span> expression θ <span class="token keyword">some</span> <span class="token punctuation">(</span>subquery<span class="token punctuation">)</span>
<span class="token keyword">Where</span> expression θ <span class="token keyword">all</span> <span class="token punctuation">(</span>subquery<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>θ</code>: comparison operator like <code>&lt; &gt; &lt;= &gt;= = &lt;&gt;</code></p></li><li><p>Semantics: Judge whether the <code>expression</code>&#39;s value satisfy <code>θ</code> comparison with <strong>someone or everyone</strong> of subquery result set</p><blockquote><p>The <strong>existential</strong> quantifier or the <strong>universal</strong> quantifier.</p><p>Equivalency:</p><ul><li><code>= some</code> is equivalent to <code>in</code></li><li><code>&lt;&gt; all</code> is equivalent to <code>not in</code></li></ul></blockquote></li></ul></li><li><p><code>[not] exists</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Where</span> <span class="token punctuation">[</span><span class="token operator">not</span> <span class="token punctuation">]</span><span class="token keyword">exists</span> <span class="token punctuation">(</span>subquery<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>Semantics: Judge whether the <code>subquery</code>&#39;s result set is empty</p><blockquote><p>Always used in “all” condition, which can be explained by “It does <strong>not exist</strong> that there is <strong>something not</strong> doing or done”, <strong>double negation</strong></p></blockquote></li><li><p>Subquery train of thoughts：</p><ol><li>Find the projected <strong>attributes</strong> and related <strong>tables</strong> for the outer layer</li><li><strong>Divide query conditions</strong>. If subquery is required, find new projected attributes and related tables layer by layer, and then continue dividing query conditions</li></ol></li></ul></li></ul><hr><h4 id="grouping-aggregation" tabindex="-1"><a class="header-anchor" href="#grouping-aggregation" aria-hidden="true">#</a> <em>Grouping &amp; Aggregation：</em></h4><ul><li><p><u>Arithmetic operations &amp; Aggregation functions:</u></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Select</span> columnName<span class="token operator">|</span>expression<span class="token operator">|</span>agfunc<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> columnName<span class="token operator">|</span>expression<span class="token operator">|</span>agfunc<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token keyword">From</span> tableName1<span class="token punctuation">[</span><span class="token punctuation">,</span> tableName2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">Where</span> queryCondition<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>agfunc</code>: Aggregation function like <code>Count() Sum() AVG() Max() Min()</code></li><li><code>expression</code>: a <strong>column name</strong>, a <strong>constant</strong> or their <strong>arithmetic</strong> operations including <strong>aggregation</strong> functions</li></ul></li><li><p><u>Grouping query:</u></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Select</span> columnName<span class="token operator">|</span>expression<span class="token operator">|</span>agfunc<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> columnName<span class="token operator">|</span>expression<span class="token operator">|</span>agfunc<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token keyword">From</span> tableName1<span class="token punctuation">[</span><span class="token punctuation">,</span> tableName2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">Where</span> queryCondition<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">Group</span> <span class="token keyword">by</span> groupCondition<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>groupCondition</code>: one or multiple column name(s) divided by <code>,</code></li><li>Semantics: Classify query result sets by some attribute. Records having <strong>the same attribute value</strong> are grouped into the same group, so SQL can process multiple groups at the same time.</li></ul></li><li><p><u>Grouping filter:</u></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Select</span> columnName<span class="token operator">|</span>expression<span class="token operator">|</span>agfunc<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> columnName<span class="token operator">|</span>expression<span class="token operator">|</span>agfunc<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token keyword">From</span> tableName1<span class="token punctuation">[</span><span class="token punctuation">,</span> tableName2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">Where</span> queryCondition<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">Group</span> <span class="token keyword">by</span> groupCondition <span class="token punctuation">[</span><span class="token keyword">Having</span> groupFilterCondition<span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>Having</code> clause: Also called grouping filter clause, appear with <code>Group by</code>, filter out <strong>groups</strong> satisfying the <code>groupFilterCondition</code></p><blockquote><p>Only grouping related attribute(s), constants and their arithmetic operations are allowed in <code>groupFilterCondition</code></p></blockquote><blockquote><p>Aggregation operations are not allowed in <code>Where</code> clause, for <strong>groups are not formed</strong> when <code>Where</code> clause is executing</p></blockquote></li></ul></li></ul><hr><h4 id="relation-algebra-operations" tabindex="-1"><a class="header-anchor" href="#relation-algebra-operations" aria-hidden="true">#</a> <em>Relation Algebra Operations：</em></h4>`,8),f=s("ul",null,[s("li",null,[s("p",null,[s("u",null,[s("code",null,"union intersect except"),a(":")])]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[a("subquery "),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Union"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"All"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"|"),a(),s("span",{class:"token keyword"},"Intersect"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"All"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"|"),a(),s("span",{class:"token keyword"},"Except"),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"All"),s("span",{class:"token punctuation"},"]"),a(" subquery"),s("span",{class:"token punctuation"},"]"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,[s("code",null,"subquery"),a(": A "),s("code",null,"select"),a(" statement")])]),s("li",null,[s("p",null,[s("code",null,"All"),a(": If not set, “duplicate” records will be removed.")]),s("p",null,[a("Assume that a same record appears "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" times in "),s("code",null,"subquery1"),a(", appears "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" times in "),s("code",null,"subquery2"),a(", then:")]),s("ul",null,[s("li",null,[a("Appears "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mo",null,"+"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"m+n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" times in "),s("code",null,"subquery1 Union All subquery2")]),s("li",null,[a("Appears "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"n"),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mo",{separator:"true"},","),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"min(m,n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"min"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" times in "),s("code",null,"subquery1 Intersect All subquery2")]),s("li",null,[a("Appears "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"x"),s("mo",{stretchy:"false"},"("),s("mn",null,"0"),s("mo",{separator:"true"},","),s("mi",null,"m"),s("mo",null,"−"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"max(0, m-n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"ma"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"0"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" times in "),s("code",null,"subquery1 Except All subquery2")])])]),s("li",null,[s("p",null,"Semantics: Relation algebra operation between subquery results"),s("blockquote",null,[s("p",null,[a("Sometimes "),s("strong",null,"relation algebra operations"),a(" can be substituted by "),s("strong",null,"logic operations and subquery"),a(":")]),s("ul",null,[s("li",null,[s("code",null,"union"),a(" and "),s("code",null,"or"),a(": "),s("code",null,"union"),a(" have a "),s("strong",null,"better expression"),a(" ability than "),s("code",null,"or")]),s("li",null,[s("code",null,"intersect"),a(" and "),s("code",null,"and"),a(": "),s("code",null,"intersect"),a(" has the same expression ability with "),s("code",null,"and"),a(", but is "),s("strong",null,"more concise")]),s("li",null,[s("code",null,"except"),a(" and "),s("code",null,"not in | not exists"),a(": "),s("code",null,"except"),a(" has the same expression ability, but is "),s("strong",null,"more concise")])])])])])]),s("li",null,[s("p",null,[s("u",null,"Null value problem"),a(":")]),s("ul",null,[s("li",null,[s("p",null,"Null value detection:"),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Where"),a(" columnName "),s("span",{class:"token operator"},"is"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token operator"},"not"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token boolean"},"null"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,[s("code",null,"null"),a(": Judge whether the attribute value is null")]),s("blockquote",null,[s("p",null,[a("Notice that it can’t be written as "),s("code",null,"= null"),a(", for "),s("code",null,"null"),a(" can’t be operated simply")])])])])]),s("li",null,[s("p",null,"Null value operations:"),s("ul",null,[s("li",null,[s("code",null,"null"),a(" doesn’t satisfy any "),s("strong",null,"query condition"),a(" except "),s("code",null,"is [not] null")]),s("li",null,[a("The value of arithmetic expression is null if "),s("code",null,"null"),a(" is involved in operation")]),s("li",null,[a("The value of logic expression is "),s("code",null,"false"),a(" if "),s("code",null,"null"),a(" is involved in operation")]),s("li",null,[a("The aggregation function ignores "),s("code",null,"null"),a(" except "),s("code",null,"count(*)")])])])])]),s("li",null,[s("p",null,[s("u",null,[s("code",null,"Join"),a(" / Extension of "),s("code",null,"From"),a(":")])]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"Select"),a(" columnName"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" columnName "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token keyword"},"From"),a(" tableName1 "),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"natural"),s("span",{class:"token punctuation"},"]"),a(`
	`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Inner"),a(),s("span",{class:"token operator"},"|"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Left"),s("span",{class:"token operator"},"|"),s("span",{class:"token keyword"},"Right"),s("span",{class:"token operator"},"|"),s("span",{class:"token keyword"},"Full"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Outer"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token keyword"},"Join"),a(` tableName2
	`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"On"),a(" joinCondition "),s("span",{class:"token operator"},"|"),a(),s("span",{class:"token keyword"},"Using"),s("span",{class:"token punctuation"},"("),a("columnName1"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},","),a(" ColumnName2 "),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"."),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"]"),a(`
`),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"Where"),a(" queryCondition"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("ul",null,[s("li",null,[s("p",null,"Join semantics:"),s("ul",null,[s("li",null,[s("p",null,[s("code",null,"Inner Join"),a(": namely "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"θ"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"\\theta-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a(" in relation algebra.")]),s("blockquote",null,[s("p",null,[a("The default "),s("code",null,"Join"),a(" is "),s("code",null,"Inner Join")])])]),s("li",null,[s("p",null,[s("code",null,"Left Outer Join"),a(": namely "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"L"),s("mi",null,"e"),s("mi",null,"f"),s("mi",null,"t"),s("mtext",null," "),s("mi",null,"O"),s("mi",null,"u"),s("mi",null,"t"),s("mi",null,"e"),s("mi",null,"r"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"Left~Outer-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"L"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a(" in relation algebra.")])]),s("li",null,[s("p",null,[s("code",null,"Right Outer Join"),a(": namely "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mtext",null," "),s("mi",null,"O"),s("mi",null,"u"),s("mi",null,"t"),s("mi",null,"e"),s("mi",null,"r"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"Right~Outer-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a(" in relation algebra.")])]),s("li",null,[s("p",null,[s("code",null,"Full Outer Join"),a(": namely "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"F"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"l"),s("mtext",null," "),s("mi",null,"O"),s("mi",null,"u"),s("mi",null,"t"),s("mi",null,"e"),s("mi",null,"r"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"Full~Outer-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a(" in relation algebra.")])])])]),s("li",null,[s("p",null,"Join conditions:"),s("ul",null,[s("li",null,[s("code",null,"Natural"),a(": namely "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"u"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"l"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"Natural-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a(" in relation algebra.")]),s("li",null,[s("code",null,"On joinConidition"),a(": simple join conditions")]),s("li",null,[s("code",null,"Using(columnName1[, columnName2 ...])"),a(": partial "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"u"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"l"),s("mo",null,"−"),s("mi",null,"J"),s("mi",null,"o"),s("mi",null,"i"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"Natural-Join")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"in")])])]),a(" with only subset of common attributes specified by "),s("code",null,"columnName")])])])])])],-1),q=l(`<hr><h4 id="view" tabindex="-1"><a class="header-anchor" href="#view" aria-hidden="true">#</a> <em>View：</em></h4><ul><li><p>Concept &amp; Structure:</p><ul><li><p>Concept: <strong>View</strong> in SQL is the <strong>data</strong> of <em>external schema(external view)</em>, including <em>external schema</em> and <em>E-C mapping</em>, used to <strong>simplify query</strong></p><blockquote><p><strong>Table</strong> in SQL is <em>conceptual schema</em></p></blockquote></li><li><p>Structure: <strong>View</strong> in SQL actually just stores <em>E-C mapping</em> rather than including the data</p><blockquote><p><strong>Table</strong> in SQL stores the real data</p></blockquote></li></ul></li><li><p>Definition &amp; Dropping</p><ul><li><p>Definition:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Create</span> <span class="token keyword">View</span> viewName <span class="token punctuation">[</span>columnName<span class="token punctuation">[</span><span class="token punctuation">,</span> columnName <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
	<span class="token keyword">as</span> subquery <span class="token punctuation">[</span><span class="token keyword">with</span> <span class="token keyword">check</span> <span class="token keyword">option</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>columnName</code>: Default is attribute name in subquery result, or specify all the names explicitly</li><li><code>with check option</code>: Whether to check whether <strong>records satisfy conditions in subquery</strong> when <code>insert/update/delete</code> about view</li></ul></li><li><p>Drop:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Drop</span> <span class="token keyword">View</span> viewName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>Query &amp; Update</p><ul><li><p>Query: Use view just like table in SQL for query</p><ul><li>Query in view in ultimately transformed into query in table, combining statements of creating view and query</li></ul></li><li><p>Update: It’s complex, and should follow some rules. Cases where update is not allowed:</p><ul><li>View statement contains <code>agfunc</code>, <code>Group by</code> or arithmetic operations</li><li>View statement contains <code>Distinct</code></li><li>View statement about a single table doesn’t contain the primary key</li></ul><blockquote><p>Update in view in ultimately transformed into update in table</p></blockquote></li></ul></li></ul><h3 id="_3-3-database-integrity" tabindex="-1"><a class="header-anchor" href="#_3-3-database-integrity" aria-hidden="true">#</a> 3.3 Database Integrity</h3><h4 id="overview-1" tabindex="-1"><a class="header-anchor" href="#overview-1" aria-hidden="true">#</a> <em>Overview：</em></h4><ul><li><p><u><strong>Concept</strong> of Integrity &amp; <strong>Reasons</strong> of Integrity Problem:</u></p><ul><li><p>DB Integrity: A <strong>DB feature</strong> ensured by DBMS, that DB should maintain <strong>correctness, validity and consistency</strong> anytime</p><ul><li><p>Broad integrity: semantic integrity, concurrence control, security control, DB failure recovery</p></li><li><p>Narrow integrity: specifically <strong>semantic integrity</strong>, for which DBMS has special <strong>integrity management</strong> mechanism and programs</p><blockquote><p>For example, integrity constraints in relation model:</p><ul><li>Entity integrity</li><li>Referential integrity</li><li>User-Defined integrity</li></ul></blockquote></li></ul></li><li><p>DB Integrity problem <strong>reasons</strong>:</p><ul><li><strong>Wrong DB operations</strong>, like input error, operating error, program processing error</li></ul></li><li><p>Effect of DB <strong>Integrity management</strong>:</p><ul><li><p>Prevent and avoid <strong>unreasonable data</strong> in DB</p></li><li><p><strong>DBMS</strong> should prevent unreasonable semantics <strong>automatically</strong></p><blockquote><p>It is <strong>automation</strong> that DBMS should focus on, rather than user notice the integrity problems every time</p></blockquote></li></ul></li></ul></li><li><p><u>Implementation of Integrity:</u></p><ul><li><p><strong>Integrity constraint conditions/rules</strong>: <code>Integrity Constraint ::= (O, P, A, R)</code></p><ul><li>O: data set, <strong>constrained object</strong></li><li>P: predicate condition, <strong>what constraint</strong></li><li>A: trigger condition, <strong>when to check</strong></li><li>R: response action, <strong>how to do when unsatisfied</strong></li></ul><p>For <code>O</code>, after triggered in condition <code>A</code>, check <code>P</code>, do <code>R</code> if unsatisfied</p><blockquote><p>Defined by SQL-DDL</p></blockquote></li><li><p><strong>Integrity control programs</strong>: DBMS automatically check integrity constraints to ensure semantic integrity when <strong>updating DB</strong></p></li></ul></li><li><p><u>Classification of Integrity:</u></p><ul><li><p>Classified by constraint <strong>object</strong>:</p><ul><li><strong>Domain</strong> integrity constraint: Check <strong>one column</strong> when updating</li><li><strong>Relation</strong> integrity constraint: Check <strong>multiple columns</strong> or the whole <strong>records</strong> (maybe between tables)</li></ul></li><li><p>Classified by constraint <strong>source</strong>:</p><ul><li><p><strong>Structure</strong> constraint: from model constraint</p><blockquote><p>For example, <strong>functional dependency constraint</strong>, primary key constraint, foreign key constraint,</p></blockquote></li><li><p><strong>Content</strong> constraint: from user’s constraint, user-defined constraint</p><blockquote><p>For example, caring about <strong>value range</strong></p></blockquote></li></ul></li><li><p>Classified by constraint <strong>status</strong>:</p><ul><li><p><strong>Static</strong> constraint: satisfied by DB <strong>anytime</strong></p><blockquote><p>SQL support:</p><ul><li><strong>Column</strong> integrity (domain integrity constraint)</li><li><strong>Table</strong> integrity (relation integrity constraint)</li></ul></blockquote></li><li><p><strong>Dynamic</strong> constraint: satisfied by DB when <strong>transforming from one status to another</strong></p><blockquote><p>SQL support:</p><ul><li><strong>Trigger</strong></li></ul></blockquote></li></ul></li></ul></li></ul><hr><h4 id="static-integrity-in-sql" tabindex="-1"><a class="header-anchor" href="#static-integrity-in-sql" aria-hidden="true">#</a> <em>Static Integrity in SQL：</em></h4><ul><li><p>SQL <strong>static</strong> constraint model:</p></li><li><p><code>Create Table</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>columnConstraint</code>: <ul><li><code>Not Null</code>:</li><li><code>Check(searchCondition)</code>:</li><li><code>References</code>:</li></ul></li><li><code>tableConstraint</code><ul><li><code>,</code>:</li><li><code>Foreign Key</code></li></ul></li></ul></li><li><p><code>Alter Table</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>Add</code></li><li><code>Drop</code></li><li><code>Modify</code></li></ul></li><li><p><code>Create Assersion</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>Semantics:</li><li>Effects:</li></ul></li></ul><hr><h4 id="dynamic-integrity-in-sql" tabindex="-1"><a class="header-anchor" href="#dynamic-integrity-in-sql" aria-hidden="true">#</a> <em>Dynamic Integrity in SQL：</em></h4><ul><li><p>SQL <strong>dynamic</strong> constraint model:</p></li><li><p><strong>Trigger</strong> overview</p></li><li><p><code>create trigger</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>Event</li><li>Alias</li></ul></li></ul><h3 id="_3-4-database-security" tabindex="-1"><a class="header-anchor" href="#_3-4-database-security" aria-hidden="true">#</a> 3.4 Database Security</h3><h4 id="overview-2" tabindex="-1"><a class="header-anchor" href="#overview-2" aria-hidden="true">#</a> <em>Overview：</em></h4><ul><li><p><u>Concept of Security</u>:</p><ul><li>security grade</li></ul></li><li><p><u>Classification of Security:</u></p><ul><li><strong>Discretionary</strong> security mechanism:</li><li><strong>Enforcing</strong> security mechanism:</li><li>Inference control mechanism</li><li>Data encryption storage mechanism</li></ul></li><li><p><u>DBA responsibilities and obligations about DB security:</u></p></li></ul><hr><h4 id="database-discretionary-security-mechanism" tabindex="-1"><a class="header-anchor" href="#database-discretionary-security-mechanism" aria-hidden="true">#</a> <em>Database Discretionary Security Mechanism：</em></h4><ul><li><p><u>Concept:</u></p></li><li><p><u>DBMS <strong>Implementation</strong> of discretionary security:</u></p></li><li><p><u>Discretionary security access <strong>rule</strong> and implementation <strong>form</strong>:</u></p><ul><li>Rule: <code>AccessRule ::= (S, O, t, P)</code></li><li>Forms: <ul><li>Storage matrix</li><li>View</li></ul></li></ul></li><li><p><u><strong>Process</strong> and <strong>problems</strong> of discretionary security <strong>authorization</strong>:</u></p><ul><li>Process</li><li>Problems <ul><li>Range</li><li>Revoking</li></ul></li></ul></li></ul><hr><h4 id="sql-implementation-of-discretionary-security" tabindex="-1"><a class="header-anchor" href="#sql-implementation-of-discretionary-security" aria-hidden="true">#</a> <em>SQL Implementation of Discretionary Security：</em></h4><ul><li><p><strong>User</strong> and <strong>authority</strong> in SQL</p><ul><li>Three levels of user</li><li>Three levels of authority</li></ul></li><li><p><code>grant</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>View</li></ul></li><li><p><code>revoke</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><blockquote><p>Footnote: enforcing security mechanism</p></blockquote><h2 id="_4-data-modeling" tabindex="-1"><a class="header-anchor" href="#_4-data-modeling" aria-hidden="true">#</a> 4 Data Modeling</h2><h3 id="_4-1-three-worlds-with-levels-of-abstraction" tabindex="-1"><a class="header-anchor" href="#_4-1-three-worlds-with-levels-of-abstraction" aria-hidden="true">#</a> 4.1 Three Worlds With Levels of Abstraction</h3><h4 id="real-world" tabindex="-1"><a class="header-anchor" href="#real-world" aria-hidden="true">#</a> <em>Real world:</em></h4><ul><li><p><u>Abstraction level</u>: No Abstraction</p></li><li><p><u>Key</u> of this level: <strong>Demand</strong></p><ul><li><p><strong>Comprehension and Expression</strong> of demand</p></li><li><p>The kinds of demand:</p><ul><li><p><strong>Data</strong> demand</p><blockquote><p><strong>Data demand</strong> is even more essential</p></blockquote></li><li><p><strong>Processing Rules</strong> demand</p></li></ul></li></ul></li></ul><hr><h4 id="conceptual-information-world" tabindex="-1"><a class="header-anchor" href="#conceptual-information-world" aria-hidden="true">#</a> <em>Conceptual / Information world:</em></h4><ul><li><p><u>Ways abstracting</u> from <em>real world</em> to <em>conceptual world</em>: <strong>Data Modeling</strong></p></li><li><p><u>Abstraction level</u>: <strong>Conceptual</strong> Level</p></li><li><p><u>Key</u> of this level: <strong>Conceptual Data Model</strong></p><ul><li><p><strong>Concept</strong> of conceptual model: the model <strong>expressing information world</strong></p><blockquote><p>Conceptual model is short for conceptual data model</p></blockquote></li><li><p><strong>Independence</strong>: independent of <strong>computer system</strong></p></li><li><p>Representing the <strong>essential relationship of information</strong></p></li></ul></li></ul><hr><h4 id="data-computer-world" tabindex="-1"><a class="header-anchor" href="#data-computer-world" aria-hidden="true">#</a> <em>Data / Computer world:</em></h4><ul><li><u>Ways abstracting</u> from <em>conceptual world</em> to <em>computer world</em>: <strong>Database Design</strong></li><li><u>Abstraction level</u>: <strong>Implement</strong> Level</li><li><u>Key</u> of this level: <strong>Data Model</strong><ul><li><strong>Concept</strong> of data model: the model <strong>expressing computer world</strong></li><li><strong>Independence</strong>: independent of <strong>physical system</strong></li></ul></li><li>Two levels in computer world itself: <ul><li><strong>Logic level</strong>, which contains <strong>data model</strong></li><li><strong>Physical level</strong>, arrived from logic level</li></ul></li></ul><blockquote><p>Some thoughts about abstraction:</p><ul><li>Comprehend, Distinguish, Name, Express</li><li>Type &amp; Value <ul><li>Methodology and methodology application</li><li>Model and meta model</li></ul></li></ul></blockquote><h3 id="_4-2-entity-relationship-model" tabindex="-1"><a class="header-anchor" href="#_4-2-entity-relationship-model" aria-hidden="true">#</a> 4.2 Entity-Relationship Model</h3><h4 id="conceptual-framework" tabindex="-1"><a class="header-anchor" href="#conceptual-framework" aria-hidden="true">#</a> <em>Conceptual Framework:</em></h4><ul><li><u>Basic view:</u></li><li><u>Entity:</u></li><li><u>Attribute &amp; Keyword:</u></li><li><u>Relationship:</u><ul><li>Degree:</li><li>Cardinality &amp; Role: <ul><li>1:m, specially 1:0 of 1:1</li><li>m:n, specially 0:0 of 1:1</li></ul></li></ul></li></ul><hr><h4 id="chen-method" tabindex="-1"><a class="header-anchor" href="#chen-method" aria-hidden="true">#</a> <em>Chen Method:</em></h4><ul><li><u>Basic components:</u><ul><li>Entity:</li><li>Attribute: <ul><li>Multi-value</li><li>Exported</li><li>Composite</li></ul></li><li>Keyword: <ul><li>Composite</li><li>Multi</li></ul></li><li>Relationship: <ul><li>Cardinality</li></ul></li><li>Connectivity <ul><li>Connection between entity and attribute(keyword)</li><li>Connection between relationship and entity</li><li>Connection between relationship and attribute(keyword)</li></ul></li></ul></li><li><u>Cardinality &amp; Role:</u></li><li><u>Data modeling steps with E-R diagram:</u></li></ul><hr><h4 id="crow-s-foot-method" tabindex="-1"><a class="header-anchor" href="#crow-s-foot-method" aria-hidden="true">#</a> <em>Crow’s Foot Method:</em></h4><ul><li><u>Basic components:</u><ul><li>Entity</li><li>Attribute</li><li>Keyword</li><li>Relationship</li></ul></li><li><u>Cardinality &amp; Role:</u></li></ul><h3 id="_4-3-idef1x" tabindex="-1"><a class="header-anchor" href="#_4-3-idef1x" aria-hidden="true">#</a> 4.3 IDEF1x</h3><h4 id="conceptual-framework-1" tabindex="-1"><a class="header-anchor" href="#conceptual-framework-1" aria-hidden="true">#</a> <em>Conceptual Framework:</em></h4><ul><li><u>Concept:</u></li><li><u>IDEF1x vs E-R diagram:</u></li><li><u>Components:</u><ul><li>Relationship <ul><li>1:m attribute inheritance partial or full</li><li>m:n intersection entity</li></ul></li></ul></li></ul><hr><h4 id="entity-and-attribute" tabindex="-1"><a class="header-anchor" href="#entity-and-attribute" aria-hidden="true">#</a> <em>Entity and Attribute:</em></h4><ul><li><u>Entity:</u><ul><li>Identifier-Independent entity</li><li>Identifier-Dependent entity</li><li>Intersection entity</li></ul></li><li><u>Attribute:</u><ul><li>Primary key</li><li>Candidate / Alternate key</li><li>Foreign key</li><li>Non-prime attribute</li></ul></li></ul><hr><h4 id="connection-relationship" tabindex="-1"><a class="header-anchor" href="#connection-relationship" aria-hidden="true">#</a> <em>Connection Relationship:</em></h4><ul><li><u>Identifying connection relationship:</u></li><li><u>Non-identifying connection relationship:</u></li></ul><hr><h4 id="non-specific-relationship" tabindex="-1"><a class="header-anchor" href="#non-specific-relationship" aria-hidden="true">#</a> <em>Non-Specific Relationship:</em></h4><ul><li><u>Concept:</u></li><li><u>Intersection / Associative entity:</u><ul><li>Identifying or Non-identifying</li><li>Only one or multiple times / Whether to add sequence number in PK</li></ul></li></ul><hr><h4 id="categorization-relationship" tabindex="-1"><a class="header-anchor" href="#categorization-relationship" aria-hidden="true">#</a> <em>Categorization Relationship:</em></h4><ul><li><u>Concept:</u></li><li><u>Specialization &amp; Generalization:</u></li><li><u>Perfect &amp; Imperfect categorization:</u></li></ul><h2 id="_5-database-design" tabindex="-1"><a class="header-anchor" href="#_5-database-design" aria-hidden="true">#</a> 5 Database Design</h2><h3 id="_5-1-process-of-database-design" tabindex="-1"><a class="header-anchor" href="#_5-1-process-of-database-design" aria-hidden="true">#</a> 5.1 Process of Database Design</h3><blockquote><ol><li>Demand analysis</li><li>...</li></ol></blockquote><h4 id="demand-analysis" tabindex="-1"><a class="header-anchor" href="#demand-analysis" aria-hidden="true">#</a> <em>Demand Analysis：</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Steps:</u></li></ul><hr><h4 id="conceptual-database-design" tabindex="-1"><a class="header-anchor" href="#conceptual-database-design" aria-hidden="true">#</a> <em>Conceptual Database Design:</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Steps:</u><ul><li>Local and global thought:</li><li>Conflicts:</li></ul></li></ul><hr><h4 id="logical-database-design" tabindex="-1"><a class="header-anchor" href="#logical-database-design" aria-hidden="true">#</a> <em>Logical Database Design:</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Transform:</u><ul><li>E-R</li><li>IDEF1x</li></ul></li><li><u>Steps:</u><ul><li>Problems</li></ul></li></ul><hr><h4 id="physical-database-design" tabindex="-1"><a class="header-anchor" href="#physical-database-design" aria-hidden="true">#</a> <em>Physical Database Design:</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Steps:</u></li></ul><h3 id="_5-2-database-design-theories" tabindex="-1"><a class="header-anchor" href="#_5-2-database-design-theories" aria-hidden="true">#</a> 5.2 Database Design Theories</h3><blockquote><ul><li>Data dependency theory <ul><li>Functional dependency</li><li>Multi-value dependency</li><li>Join dependency</li></ul></li><li>Relation normal from theory <ul><li>1NF 2NF 3NF BCNF <code>&lt;=&gt;</code> Functional dependency</li><li>4NF <code>&lt;=&gt;</code> Multi-value dependency</li><li>5NF <code>&lt;=&gt;</code> Join dependency</li></ul></li><li>Schema decomposition theory <ul><li>Lossless join</li><li>Preserve dependency</li></ul></li></ul><p>According to <em><strong>Data Dependence</strong></em>, judge the <em><strong>Relation Normal Form</strong></em>, then apply the <em><strong>Schema Decomposition</strong></em> if necessary</p></blockquote><h4 id="functional-dependency-theory" tabindex="-1"><a class="header-anchor" href="#functional-dependency-theory" aria-hidden="true">#</a> <em>Functional Dependency Theory:</em></h4><ul><li><u>Concepts:</u><ul><li>Functional dependency</li><li>Full &amp; Partial functional dependency</li><li>Transitive functional dependency</li><li>Candidate /Alternative key <ul><li>Primary key</li><li>Prime &amp; Non-prime attribute</li><li>Super key</li></ul></li></ul></li><li><u>Deduction:</u><ul><li>Logical implication &amp; Closure</li><li>Armstrong axiom &amp; Lemma 1 <ul><li>valid &amp; complete</li></ul></li><li>Lemma 2 &amp; Lemma 3</li><li>Attribute (set) closure &amp; Lemma 4 <ul><li>Calculate attribute closure</li></ul></li></ul></li><li><u>Equivalence:</u><ul><li>Cover &amp; Lemma 5</li><li>Minimal cover &amp; Lemma 6</li></ul></li></ul><hr><h4 id="relation-normal-form-theory" tabindex="-1"><a class="header-anchor" href="#relation-normal-form-theory" aria-hidden="true">#</a> <em>Relation Normal Form Theory:</em></h4><ul><li><u>1NF:</u><ul><li>Definition:</li><li>Handle:</li></ul></li><li><u>2NF:</u><ul><li>Definition:</li><li>Redundancy:</li></ul></li><li><u>3NF:</u><ul><li>Definition:</li><li>Redundancy:</li></ul></li><li><u>BCNF:</u><ul><li>Definition:</li><li>Relationship with 3NF</li></ul></li><li><u>Multi-value dependency &amp; 4NF:</u><ul><li>Multi-value dependency overview:</li><li>4NF Definition:</li><li>Relationship with BCNF</li><li>W4NF Definition</li></ul></li><li><u>Join dependency &amp; 5NF:</u></li></ul><h4 id="schema-decomposition-theory" tabindex="-1"><a class="header-anchor" href="#schema-decomposition-theory" aria-hidden="true">#</a> <em>Schema Decomposition Theory:</em></h4><ul><li><u>Basic concepts:</u><ul><li>Schema decomposition</li><li>Data content equivalence &amp; Lemma 1</li><li>Data dependency equivalence</li></ul></li><li><u>Lossless join decomposition:</u><ul><li>Definition:</li><li>Testing algorithm:</li><li>A simple version:</li><li>Properties:</li></ul></li><li><u>Preserving dependency decomposition:</u><ul><li>Definition:</li><li>Testing algorithm:</li></ul></li><li><u>Schema decomposition strategies:</u><ul><li>Decompose schema into <strong>BCNF</strong> with <strong>lossless join</strong>:</li><li>Decompose schema into <strong>3NF</strong> with <strong>preserving dependency</strong>:</li><li>Decompose schema into <strong>3NF</strong> with both <strong>lossless join</strong> and <strong>preserving dependency</strong>:</li><li>Decompose schema into <strong>4NF</strong> with <strong>lossless join</strong>:</li></ul></li></ul><blockquote><p>Split the difference between redundancy and speed</p></blockquote><h2 id="_6-physical-storage-index" tabindex="-1"><a class="header-anchor" href="#_6-physical-storage-index" aria-hidden="true">#</a> 6 Physical Storage &amp; Index</h2><h3 id="_6-1-storage-architecture" tabindex="-1"><a class="header-anchor" href="#_6-1-storage-architecture" aria-hidden="true">#</a> 6.1 Storage Architecture</h3><h4 id="overview-3" tabindex="-1"><a class="header-anchor" href="#overview-3" aria-hidden="true">#</a> <em>Overview:</em></h4><ul><li>Concept:</li><li>Problems to be solved: <ul><li>Storage</li><li>Retrieve</li></ul></li></ul><hr><h4 id="data-storage-query-implementation-framework" tabindex="-1"><a class="header-anchor" href="#data-storage-query-implementation-framework" aria-hidden="true">#</a> <em>Data Storage &amp; Query Implementation Framework:</em></h4><blockquote><p>For levels, from bottom to top</p></blockquote><ul><li><u><strong>Storage</strong> manager:</u><ul><li>Management object: disk, <strong>database</strong> (itself)</li><li>Management task:</li></ul></li><li><u><strong>Buffer</strong> manager:</u><ul><li>Management object: memory, database <strong>buffer</strong></li><li>Management task:</li><li>Relationship with the lower level:</li></ul></li><li><u>Index, <strong>file</strong> and record manager:</u><ul><li>Management object: map</li><li>Management task:</li><li>Relationship with the lower level:</li></ul></li><li><u>SQL <strong>complier</strong> and execution <strong>engine</strong>:</u><ul><li>Management object: SQL command</li><li>Management task:</li><li>Relationship with the lower level:</li></ul></li></ul><hr><h4 id="map-from-tables-to-blocks" tabindex="-1"><a class="header-anchor" href="#map-from-tables-to-blocks" aria-hidden="true">#</a> <em>Map From Tables to Blocks:</em></h4><ul><li><u>Concept mapping:</u></li><li><u>Record mapping:</u></li><li><u>Table mapping:</u></li></ul><h4 id="file-organization" tabindex="-1"><a class="header-anchor" href="#file-organization" aria-hidden="true">#</a> <em>File Organization:</em></h4><ul><li><u>Concepts:</u><ul><li>File organization:</li><li>Access method:</li></ul></li><li><u>Heap file:</u><ul><li>Features:</li><li>Update:</li><li>Reorganization:</li></ul></li><li><u>Sequential file:</u><ul><li>Features:</li><li>Update: overflow</li><li>Reorganization:</li></ul></li><li><u>Hash file:</u><ul><li>Features:</li><li>Query:</li><li>Update: overflow</li><li>Reorganization:</li></ul></li><li><u>Cluster file:</u><ul><li>Cluster:</li><li>Multi-table cluster:</li></ul></li></ul><h3 id="_6-2-index-overview" tabindex="-1"><a class="header-anchor" href="#_6-2-index-overview" aria-hidden="true">#</a> 6.2 Index Overview</h3><h4 id="concept-features" tabindex="-1"><a class="header-anchor" href="#concept-features" aria-hidden="true">#</a> <em>Concept &amp; Features:</em></h4><ul><li><u>Concept:</u><ul><li>Index file: Secondary storage structure</li></ul></li><li><u>Constitution:</u><ul><li>Entry:</li><li>Organization:</li></ul></li><li><u>Evaluation:</u><ul><li>Perfomance</li></ul></li></ul><h4 id="index-in-sql" tabindex="-1"><a class="header-anchor" href="#index-in-sql" aria-hidden="true">#</a> <em>Index in SQL:</em></h4><ul><li><p><u>Create:</u></p><ul><li><p>Auto-create:</p></li><li><p>SQL create:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li><code>unique</code></li></ul></li></ul></li><li><p><u>Maintain &amp; Update:</u></p><ul><li>Auto-maintain:</li></ul></li><li><p><u>Drop:</u></p><ul><li><p>Auto-drop:</p></li><li><p>SQL drop:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></li></ul></li></ul><h3 id="_6-3-classification-patterns-of-index" tabindex="-1"><a class="header-anchor" href="#_6-3-classification-patterns-of-index" aria-hidden="true">#</a> 6.3 Classification Patterns of Index</h3><h4 id="dense-sparse-index" tabindex="-1"><a class="header-anchor" href="#dense-sparse-index" aria-hidden="true">#</a> <em>Dense &amp; Sparse Index:</em></h4><ul><li><u>Concepts:</u><ul><li>Sparse:</li><li>Dense:</li></ul></li><li><u>Storage &amp; Retrieve:</u><ul><li>Sparse: Sort</li><li>Dense: <ul><li>On candidate key</li><li>On non-candidate key <ul><li>Non-duplicate index field <ul><li>Sort</li><li>Pointer bucket</li></ul></li><li>Duplicate index field</li></ul></li></ul></li></ul></li><li><u>Evaluation:</u><ul><li>Sparse:</li><li>Dense:</li></ul></li></ul><h4 id="prime-secondary-index" tabindex="-1"><a class="header-anchor" href="#prime-secondary-index" aria-hidden="true">#</a> <em>Prime &amp; Secondary Index:</em></h4><ul><li><u>Concepts:</u><ul><li>Prime</li><li>Secondary</li></ul></li><li><u>Storage &amp; Retrieve:</u><ul><li>Prime: sorted primary key</li><li>Secondary: unsorted <ul><li>Pointer bucket</li></ul></li></ul></li><li><u>Evaluation:</u><ul><li>Prime: <ul><li>Only one, primary or sorted key</li><li>Sparse</li><li>Reorganize</li></ul></li><li>Secondary: <ul><li>Multiple, other keys</li><li>Dense</li></ul></li></ul></li></ul><h4 id="clustered-non-clustered-index" tabindex="-1"><a class="header-anchor" href="#clustered-non-clustered-index" aria-hidden="true">#</a> <em>Clustered &amp; Non-clustered Index:</em></h4><ul><li><u>Concepts:</u><ul><li>Clustered</li><li>Non-clustered</li></ul></li><li><u>Storage &amp; Retrieve:</u><ul><li>Clustered: <ul><li>Sort</li></ul></li><li>Non-clustered</li></ul></li><li><u>Evaluation:</u><ul><li>Clustered: <ul><li>Prime</li></ul></li><li>Non-clustered: <ul><li>Secondary</li></ul></li></ul></li></ul><h4 id="other-patterns" tabindex="-1"><a class="header-anchor" href="#other-patterns" aria-hidden="true">#</a> <em>Other Patterns:</em></h4><ul><li><u>Multi-level Index:</u><ul><li>B &amp; B+ Tree</li></ul></li><li><u>Hash Index:</u></li><li>Invert Index:</li><li>Multi-value index:</li><li>Grid index:</li></ul><h3 id="_6-4-b-tree" tabindex="-1"><a class="header-anchor" href="#_6-4-b-tree" aria-hidden="true">#</a> 6.4 B+ Tree</h3><h4 id="concept-rules" tabindex="-1"><a class="header-anchor" href="#concept-rules" aria-hidden="true">#</a> <em>Concept &amp; Rules:</em></h4><ul><li>Concept:</li><li>Nodes: <ul><li>Root:</li><li>Non-leaf:</li><li>Leaf:</li></ul></li></ul><h4 id="types-of-index-on-b-tree" tabindex="-1"><a class="header-anchor" href="#types-of-index-on-b-tree" aria-hidden="true">#</a> <em>Types of Index on B+ Tree:</em></h4><h4 id="insert-division" tabindex="-1"><a class="header-anchor" href="#insert-division" aria-hidden="true">#</a> <em>Insert &amp; Division:</em></h4><h4 id="delete-combination" tabindex="-1"><a class="header-anchor" href="#delete-combination" aria-hidden="true">#</a> <em>Delete &amp; Combination:</em></h4><h3 id="_6-5-hash-index" tabindex="-1"><a class="header-anchor" href="#_6-5-hash-index" aria-hidden="true">#</a> 6.5 Hash Index</h3><h4 id="simple-hash-index" tabindex="-1"><a class="header-anchor" href="#simple-hash-index" aria-hidden="true">#</a> <em>Simple Hash Index:</em></h4><h4 id="extensible-hash-index" tabindex="-1"><a class="header-anchor" href="#extensible-hash-index" aria-hidden="true">#</a> <em>Extensible Hash Index:</em></h4><h4 id="linear-hash-index" tabindex="-1"><a class="header-anchor" href="#linear-hash-index" aria-hidden="true">#</a> <em>Linear Hash Index:</em></h4><h2 id="_7-query-algorithm" tabindex="-1"><a class="header-anchor" href="#_7-query-algorithm" aria-hidden="true">#</a> 7 Query Algorithm</h2><h3 id="_7-1-logic-physical-query-implementation-overview" tabindex="-1"><a class="header-anchor" href="#_7-1-logic-physical-query-implementation-overview" aria-hidden="true">#</a> 7.1 Logic &amp; Physical Query Implementation Overview</h3><h4 id="contrast-of-logical-and-physical" tabindex="-1"><a class="header-anchor" href="#contrast-of-logical-and-physical" aria-hidden="true">#</a> <em>Contrast of Logical and Physical:</em></h4><ul><li>Basic thoughts of DB query implementation</li></ul><h4 id="three-types-of-operation-two-strategies-of-implementation" tabindex="-1"><a class="header-anchor" href="#three-types-of-operation-two-strategies-of-implementation" aria-hidden="true">#</a> <em>Three Types of Operation &amp; Two Strategies of Implementation:</em></h4><ul><li>Three <strong>types</strong> of operation in DB</li><li>Two <strong>calculating strategies</strong> of query implementation <ul><li>Pipeline: take <strong>iterator</strong> for example</li><li>Materialization: <ul><li>One-pass scanning <ul><li>Table space scanning</li><li>Based on sort</li><li>Based on hash</li><li>Based on index</li></ul></li><li>Two-pass scanning <ul><li>Based on sort</li><li>Based on hash</li><li>Based on index</li></ul></li></ul></li></ul></li></ul><h3 id="_7-2-one-pass-scanning-algorithm" tabindex="-1"><a class="header-anchor" href="#_7-2-one-pass-scanning-algorithm" aria-hidden="true">#</a> 7.2 One-pass Scanning Algorithm</h3><h4 id="read-a-relation-in-disk" tabindex="-1"><a class="header-anchor" href="#read-a-relation-in-disk" aria-hidden="true">#</a> <em>Read a Relation in Disk:</em></h4><h4 id="one-pass-scanning-based-on-sort-hash" tabindex="-1"><a class="header-anchor" href="#one-pass-scanning-based-on-sort-hash" aria-hidden="true">#</a> <em>One-pass Scanning Based on Sort &amp; Hash:</em></h4><h4 id="one-pass-scanning-based-on-index" tabindex="-1"><a class="header-anchor" href="#one-pass-scanning-based-on-index" aria-hidden="true">#</a> <em>One-pass Scanning Based on Index:</em></h4><h3 id="_7-3-two-pass-scanning-algorithm" tabindex="-1"><a class="header-anchor" href="#_7-3-two-pass-scanning-algorithm" aria-hidden="true">#</a> 7.3 Two-pass Scanning Algorithm</h3><h4 id="two-pass-scanning-algorithms-based-on-sort" tabindex="-1"><a class="header-anchor" href="#two-pass-scanning-algorithms-based-on-sort" aria-hidden="true">#</a> <em>Two-pass Scanning Algorithms Based on Sort:</em></h4><ul><li>Basic thoughts</li><li>TPMMS</li></ul><h4 id="two-pass-scanning-algorithms-based-on-hash" tabindex="-1"><a class="header-anchor" href="#two-pass-scanning-algorithms-based-on-hash" aria-hidden="true">#</a> <em>Two-pass Scanning Algorithms Based on Hash:</em></h4><ul><li>Basic thoughts</li></ul><h3 id="_7-4-query-optimization" tabindex="-1"><a class="header-anchor" href="#_7-4-query-optimization" aria-hidden="true">#</a> 7.4 Query Optimization</h3><h4 id="overview-4" tabindex="-1"><a class="header-anchor" href="#overview-4" aria-hidden="true">#</a> <em>Overview:</em></h4><h4 id="query-optimization-in-logical-level" tabindex="-1"><a class="header-anchor" href="#query-optimization-in-logical-level" aria-hidden="true">#</a> <em>Query Optimization in Logical Level:</em></h4><h4 id="query-optimization-in-physical-level" tabindex="-1"><a class="header-anchor" href="#query-optimization-in-physical-level" aria-hidden="true">#</a> <em>Query Optimization in Physical Level:</em></h4><h2 id="_8-transaction-processing" tabindex="-1"><a class="header-anchor" href="#_8-transaction-processing" aria-hidden="true">#</a> 8 Transaction Processing</h2>`,138),S=[r,m,o,c,p,u,h,g,d,y,v,b,k,x,w,f,q];function M(z,R){return t(),e("div",null,S)}const _=n(i,[["render",M],["__file","DatabaseSystem.html.vue"]]);export{_ as default};
