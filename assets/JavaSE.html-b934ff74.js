import{_ as a,W as e,X as r,a2 as i}from"./framework-6199cc12.js";const h={},t=i('<h1 id="java-se" tabindex="-1"><a class="header-anchor" href="#java-se" aria-hidden="true">#</a> Java SE</h1><h2 id="_1-class-object" tabindex="-1"><a class="header-anchor" href="#_1-class-object" aria-hidden="true">#</a> 1 Class &amp; Object</h2><h3 id="_1-1-concept-of-oop" tabindex="-1"><a class="header-anchor" href="#_1-1-concept-of-oop" aria-hidden="true">#</a> 1.1 Concept of OOP</h3><h3 id="_1-2-data-type-array" tabindex="-1"><a class="header-anchor" href="#_1-2-data-type-array" aria-hidden="true">#</a> 1.2 Data Type &amp; Array</h3><h4 id="primary-types" tabindex="-1"><a class="header-anchor" href="#primary-types" aria-hidden="true">#</a> <em>Primary Types:</em></h4><h4 id="reference-types" tabindex="-1"><a class="header-anchor" href="#reference-types" aria-hidden="true">#</a> <em>Reference Types:</em></h4><ul><li><code>enum</code></li></ul><h3 id="_1-3-memory-in-jvm" tabindex="-1"><a class="header-anchor" href="#_1-3-memory-in-jvm" aria-hidden="true">#</a> 1.3 Memory in JVM</h3><h2 id="_2-inheritance-polymorphism" tabindex="-1"><a class="header-anchor" href="#_2-inheritance-polymorphism" aria-hidden="true">#</a> 2 Inheritance &amp; Polymorphism</h2><h3 id="_2-1-encapsulation" tabindex="-1"><a class="header-anchor" href="#_2-1-encapsulation" aria-hidden="true">#</a> 2.1 Encapsulation</h3><ul><li><code>static</code></li><li><code>this</code></li></ul><h3 id="_2-2-inheritance" tabindex="-1"><a class="header-anchor" href="#_2-2-inheritance" aria-hidden="true">#</a> 2.2 Inheritance</h3><ul><li><code>super</code></li></ul><h3 id="_2-3-overwrite-polymorphism" tabindex="-1"><a class="header-anchor" href="#_2-3-overwrite-polymorphism" aria-hidden="true">#</a> 2.3 Overwrite &amp; Polymorphism</h3><ul><li><code>final</code></li></ul><h3 id="_2-4-abstract-class-interface" tabindex="-1"><a class="header-anchor" href="#_2-4-abstract-class-interface" aria-hidden="true">#</a> 2.4 Abstract Class &amp; Interface</h3><ul><li>Anonymous inner classes</li></ul><h2 id="_3-package-access-control" tabindex="-1"><a class="header-anchor" href="#_3-package-access-control" aria-hidden="true">#</a> 3 Package &amp; Access Control</h2><h3 id="_3-1-package" tabindex="-1"><a class="header-anchor" href="#_3-1-package" aria-hidden="true">#</a> 3.1 Package</h3><h3 id="_3-2-access-control" tabindex="-1"><a class="header-anchor" href="#_3-2-access-control" aria-hidden="true">#</a> 3.2 Access Control</h3><h2 id="_4-exception" tabindex="-1"><a class="header-anchor" href="#_4-exception" aria-hidden="true">#</a> 4 Exception</h2><h3 id="_4-1-conceptual-framework" tabindex="-1"><a class="header-anchor" href="#_4-1-conceptual-framework" aria-hidden="true">#</a> 4.1 Conceptual Framework</h3><ul><li>Common methods</li></ul><h3 id="_4-2-inheritance-structure" tabindex="-1"><a class="header-anchor" href="#_4-2-inheritance-structure" aria-hidden="true">#</a> 4.2 Inheritance Structure</h3><ul><li>Custom exception</li></ul><h3 id="_4-3-throw-catch" tabindex="-1"><a class="header-anchor" href="#_4-3-throw-catch" aria-hidden="true">#</a> 4.3 Throw &amp; Catch</h3><h2 id="_5-common-utility-classes" tabindex="-1"><a class="header-anchor" href="#_5-common-utility-classes" aria-hidden="true">#</a> 5 Common Utility Classes</h2><h3 id="_5-1-object-class" tabindex="-1"><a class="header-anchor" href="#_5-1-object-class" aria-hidden="true">#</a> 5.1 Object Class</h3><h3 id="_5-2-arrays" tabindex="-1"><a class="header-anchor" href="#_5-2-arrays" aria-hidden="true">#</a> 5.2 Arrays</h3><h3 id="_5-3-string" tabindex="-1"><a class="header-anchor" href="#_5-3-string" aria-hidden="true">#</a> 5.3 String</h3><h3 id="_5-4-wrapper-class" tabindex="-1"><a class="header-anchor" href="#_5-4-wrapper-class" aria-hidden="true">#</a> 5.4 Wrapper Class</h3><h3 id="_5-5-date-decimal" tabindex="-1"><a class="header-anchor" href="#_5-5-date-decimal" aria-hidden="true">#</a> 5.5 Date &amp; Decimal</h3><h2 id="_6-i-o-stream" tabindex="-1"><a class="header-anchor" href="#_6-i-o-stream" aria-hidden="true">#</a> 6 I/O Stream</h2><h3 id="_6-1-inheritance-structure" tabindex="-1"><a class="header-anchor" href="#_6-1-inheritance-structure" aria-hidden="true">#</a> 6.1 Inheritance Structure</h3><h3 id="_6-2-file-stream" tabindex="-1"><a class="header-anchor" href="#_6-2-file-stream" aria-hidden="true">#</a> 6.2 File Stream</h3><ul><li><code>RandomAccessFile</code></li></ul><h3 id="_6-3-buffered-stream" tabindex="-1"><a class="header-anchor" href="#_6-3-buffered-stream" aria-hidden="true">#</a> 6.3 Buffered Stream</h3><h3 id="_6-4-print-stream" tabindex="-1"><a class="header-anchor" href="#_6-4-print-stream" aria-hidden="true">#</a> 6.4 Print Stream</h3><ul><li>Standard in / out</li></ul><h3 id="_6-5-object-stream-serialize" tabindex="-1"><a class="header-anchor" href="#_6-5-object-stream-serialize" aria-hidden="true">#</a> 6.5 Object Stream &amp; Serialize</h3><h3 id="_6-6-file-utility-class" tabindex="-1"><a class="header-anchor" href="#_6-6-file-utility-class" aria-hidden="true">#</a> 6.6 File Utility Class</h3><ul><li><code>Path File</code></li><li><code>Paths Files</code></li></ul><h2 id="_7-collection-generics" tabindex="-1"><a class="header-anchor" href="#_7-collection-generics" aria-hidden="true">#</a> 7 Collection &amp; Generics</h2><h3 id="_7-1-conceptual-framework" tabindex="-1"><a class="header-anchor" href="#_7-1-conceptual-framework" aria-hidden="true">#</a> 7.1 Conceptual Framework</h3><h3 id="_7-2-inheritance-structure" tabindex="-1"><a class="header-anchor" href="#_7-2-inheritance-structure" aria-hidden="true">#</a> 7.2 Inheritance Structure</h3><h3 id="_7-3-generics" tabindex="-1"><a class="header-anchor" href="#_7-3-generics" aria-hidden="true">#</a> 7.3 Generics</h3><h3 id="_7-4-collection-class" tabindex="-1"><a class="header-anchor" href="#_7-4-collection-class" aria-hidden="true">#</a> 7.4 Collection Class</h3><h3 id="_7-5-map-class" tabindex="-1"><a class="header-anchor" href="#_7-5-map-class" aria-hidden="true">#</a> 7.5 Map Class</h3><ul><li><code>Properties</code></li></ul><h3 id="_7-6-collection-utility-class" tabindex="-1"><a class="header-anchor" href="#_7-6-collection-utility-class" aria-hidden="true">#</a> 7.6 Collection Utility Class</h3><h2 id="_8-thread-basis" tabindex="-1"><a class="header-anchor" href="#_8-thread-basis" aria-hidden="true">#</a> 8 Thread Basis</h2><h3 id="_8-1-conceptual-framework" tabindex="-1"><a class="header-anchor" href="#_8-1-conceptual-framework" aria-hidden="true">#</a> 8.1 Conceptual Framework</h3><ul><li>How Java implement thread</li></ul><h3 id="_8-2-thread-state-scheduling" tabindex="-1"><a class="header-anchor" href="#_8-2-thread-state-scheduling" aria-hidden="true">#</a> 8.2 Thread State &amp; Scheduling</h3><ul><li>Create</li><li>Methods</li><li>Lifecycle / State switch</li><li>Remember to take something from JUC</li></ul><h3 id="_8-3-thread-synchronization" tabindex="-1"><a class="header-anchor" href="#_8-3-thread-synchronization" aria-hidden="true">#</a> 8.3 Thread Synchronization</h3><ul><li><code>synchronized</code></li><li><code>wait() notify()</code></li></ul><h3 id="_8-4-daemon-timer" tabindex="-1"><a class="header-anchor" href="#_8-4-daemon-timer" aria-hidden="true">#</a> 8.4 Daemon &amp; Timer</h3><h2 id="_9-reflection" tabindex="-1"><a class="header-anchor" href="#_9-reflection" aria-hidden="true">#</a> 9 Reflection</h2><h3 id="_9-1-conceptual-framework" tabindex="-1"><a class="header-anchor" href="#_9-1-conceptual-framework" aria-hidden="true">#</a> 9.1 Conceptual Framework</h3><h3 id="_9-2-class-constructor-reflection" tabindex="-1"><a class="header-anchor" href="#_9-2-class-constructor-reflection" aria-hidden="true">#</a> 9.2 Class &amp; Constructor Reflection</h3><h3 id="_9-3-field-method-reflection" tabindex="-1"><a class="header-anchor" href="#_9-3-field-method-reflection" aria-hidden="true">#</a> 9.3 Field &amp; Method Reflection</h3><h2 id="_10-annotation" tabindex="-1"><a class="header-anchor" href="#_10-annotation" aria-hidden="true">#</a> 10 Annotation</h2><h3 id="_10-1-basic-use-common-annotation" tabindex="-1"><a class="header-anchor" href="#_10-1-basic-use-common-annotation" aria-hidden="true">#</a> 10.1 Basic Use &amp; Common Annotation</h3><ul><li>Meta-annotation</li></ul><h3 id="_10-2-attribute-reflection-of-annotation" tabindex="-1"><a class="header-anchor" href="#_10-2-attribute-reflection-of-annotation" aria-hidden="true">#</a> 10.2 Attribute &amp; Reflection of Annotation</h3><h2 id="_11-network-programming" tabindex="-1"><a class="header-anchor" href="#_11-network-programming" aria-hidden="true">#</a> 11 Network Programming</h2><h3 id="_11-1-conceptual-framework" tabindex="-1"><a class="header-anchor" href="#_11-1-conceptual-framework" aria-hidden="true">#</a> 11.1 Conceptual Framework</h3><h3 id="_11-2-tcp-udp-programming" tabindex="-1"><a class="header-anchor" href="#_11-2-tcp-udp-programming" aria-hidden="true">#</a> 11.2 TCP &amp; UDP Programming</h3><h3 id="_11-3-http-programming" tabindex="-1"><a class="header-anchor" href="#_11-3-http-programming" aria-hidden="true">#</a> 11.3 HTTP Programming</h3><h2 id="_12-functional-programming" tabindex="-1"><a class="header-anchor" href="#_12-functional-programming" aria-hidden="true">#</a> 12 Functional Programming</h2><h3 id="_12-1-conceptual-framework" tabindex="-1"><a class="header-anchor" href="#_12-1-conceptual-framework" aria-hidden="true">#</a> 12.1 Conceptual Framework</h3><h3 id="_12-2-lambda-expression-method-reference" tabindex="-1"><a class="header-anchor" href="#_12-2-lambda-expression-method-reference" aria-hidden="true">#</a> 12.2 Lambda Expression &amp; Method Reference</h3><h3 id="_12-3-stream-functional-interface" tabindex="-1"><a class="header-anchor" href="#_12-3-stream-functional-interface" aria-hidden="true">#</a> 12.3 Stream &amp; Functional Interface</h3>',74),n=[t];function d(c,o){return e(),r("div",null,n)}const l=a(h,[["render",d],["__file","JavaSE.html.vue"]]);export{l as default};
