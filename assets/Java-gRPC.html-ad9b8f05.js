import{_ as e,W as a,X as r,a2 as c}from"./framework-3800c176.js";const i={},h=c('<h1 id="java-grpc" tabindex="-1"><a class="header-anchor" href="#java-grpc" aria-hidden="true">#</a> Java gRPC</h1><h2 id="_1-grpc-overview-principle" tabindex="-1"><a class="header-anchor" href="#_1-grpc-overview-principle" aria-hidden="true">#</a> 1 gRPC Overview &amp; Principle</h2><h3 id="_1-2-overview-of-restful-rpc" tabindex="-1"><a class="header-anchor" href="#_1-2-overview-of-restful-rpc" aria-hidden="true">#</a> 1.2 Overview of RESTful &amp; RPC</h3><h3 id="_1-3-grpc-classes-protocol-buffers" tabindex="-1"><a class="header-anchor" href="#_1-3-grpc-classes-protocol-buffers" aria-hidden="true">#</a> 1.3 gRPC Classes &amp; Protocol Buffers</h3><h2 id="_2-grpc-communication-mode" tabindex="-1"><a class="header-anchor" href="#_2-grpc-communication-mode" aria-hidden="true">#</a> 2 gRPC Communication Mode</h2><h3 id="_2-1-unary-rpc" tabindex="-1"><a class="header-anchor" href="#_2-1-unary-rpc" aria-hidden="true">#</a> 2.1 Unary RPC</h3><h3 id="_2-2-server-stream-rpc" tabindex="-1"><a class="header-anchor" href="#_2-2-server-stream-rpc" aria-hidden="true">#</a> 2.2 Server Stream RPC</h3><h3 id="_2-3-client-stream-rpc" tabindex="-1"><a class="header-anchor" href="#_2-3-client-stream-rpc" aria-hidden="true">#</a> 2.3 Client Stream RPC</h3><h3 id="_2-4-two-way-stream-rpc" tabindex="-1"><a class="header-anchor" href="#_2-4-two-way-stream-rpc" aria-hidden="true">#</a> 2.4 Two-way Stream RPC</h3><h2 id="_3-grpc-microservice" tabindex="-1"><a class="header-anchor" href="#_3-grpc-microservice" aria-hidden="true">#</a> 3 gRPC Microservice</h2>',10),t=[h];function d(s,n){return a(),r("div",null,t)}const l=e(i,[["render",d],["__file","Java-gRPC.html.vue"]]);export{l as default};
