import{_ as e,W as a,X as o,a1 as i}from"./framework-b5ea9e64.js";const n={},c=i('<h1 id="juc" tabindex="-1"><a class="header-anchor" href="#juc" aria-hidden="true">#</a> JUC</h1><h2 id="_1-monitor-synchronization" tabindex="-1"><a class="header-anchor" href="#_1-monitor-synchronization" aria-hidden="true">#</a> 1 Monitor &amp; Synchronization</h2><h3 id="_1-1-principle-of-monitor-object-lock" tabindex="-1"><a class="header-anchor" href="#_1-1-principle-of-monitor-object-lock" aria-hidden="true">#</a> 1.1 Principle of Monitor &amp; Object Lock</h3><h3 id="_1-2-common-synchronization-api" tabindex="-1"><a class="header-anchor" href="#_1-2-common-synchronization-api" aria-hidden="true">#</a> 1.2 Common Synchronization API</h3><h2 id="_2-concurrency-utilities" tabindex="-1"><a class="header-anchor" href="#_2-concurrency-utilities" aria-hidden="true">#</a> 2 Concurrency Utilities</h2><h3 id="atomic-object" tabindex="-1"><a class="header-anchor" href="#atomic-object" aria-hidden="true">#</a> Atomic Object</h3><h4 id="atomicinteger" tabindex="-1"><a class="header-anchor" href="#atomicinteger" aria-hidden="true">#</a> <em><code>AtomicInteger</code>:</em></h4><h4 id="longadder" tabindex="-1"><a class="header-anchor" href="#longadder" aria-hidden="true">#</a> <em><code>LongAdder</code>:</em></h4><h3 id="thread-safe-collection" tabindex="-1"><a class="header-anchor" href="#thread-safe-collection" aria-hidden="true">#</a> Thread-Safe Collection</h3><h4 id="concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap" aria-hidden="true">#</a> <em><code>ConcurrentHashMap</code>:</em></h4><div class="hint-container info"><p class="hint-container-title">Questions</p><ul><li>What’s <code>concurrentHashMap</code>?</li><li>Why we need <code>concurrentHashMap</code>?</li><li>How to use <code>concurrentHashMap</code>?</li></ul></div><ul><li><p><u>What’s <code>concurrentHashMap</code>:</u></p><ul><li><p>Every <strong>single method itself</strong> is thread-safe</p><blockquote><p>But the <strong>combination</strong> of methods may not be thread-safe</p></blockquote></li><li></li></ul></li><li><p><u>Why we need <code>concurrentHashMap</code>:</u></p></li><li><p><u>How to use <code>concurrentHashMap</code>:</u></p></li></ul>',12),r=[c];function t(h,d){return a(),o("div",null,r)}const l=e(n,[["render",t],["__file","JUC.html.vue"]]);export{l as default};
