import{_ as a,V as e,W as i,a1 as t}from"./framework-1f74d948.js";const l={},n=t('<h2 id="_1-quick-start" tabindex="-1"><a class="header-anchor" href="#_1-quick-start" aria-hidden="true">#</a> 1 Quick Start</h2><h3 id="_1-1-overview" tabindex="-1"><a class="header-anchor" href="#_1-1-overview" aria-hidden="true">#</a> 1.1 Overview</h3><p>Full stack development language</p><h3 id="_1-2-build-development-environment" tabindex="-1"><a class="header-anchor" href="#_1-2-build-development-environment" aria-hidden="true">#</a> 1.2 Build Development Environment</h3><ul><li>JDK</li><li>Gradle</li><li>IDEA</li></ul><h2 id="_2-plain-essential-syntax" tabindex="-1"><a class="header-anchor" href="#_2-plain-essential-syntax" aria-hidden="true">#</a> 2 Plain Essential Syntax</h2><h3 id="_1-1-data-type" tabindex="-1"><a class="header-anchor" href="#_1-1-data-type" aria-hidden="true">#</a> 1.1 Data Type</h3><h4 id="basic-rules" tabindex="-1"><a class="header-anchor" href="#basic-rules" aria-hidden="true">#</a> <em>Basic Rules:</em></h4><ul><li><p>Kotlin doesn’t have so-called “basic data types”</p><blockquote><p>No <code>int float</code> etc.</p></blockquote></li><li><p>Kotlin have some <strong>built-in data types</strong></p><ul><li>Built-in data types can be transformed into basic data types in Java by the complier</li></ul></li></ul><hr><h4 id="built-in-data-types" tabindex="-1"><a class="header-anchor" href="#built-in-data-types" aria-hidden="true">#</a> <em>Built-In Data Types:</em></h4><ul><li><code>Int Double String Char Boolean List Map Set</code></li></ul><h3 id="_1-2-variable-definition" tabindex="-1"><a class="header-anchor" href="#_1-2-variable-definition" aria-hidden="true">#</a> 1.2 Variable Definition</h3><ul><li>Readable and writeable variables: <code>var variableName: dataType = dataValue</code></li><li>Read-only variables: <code>val variableName: dataType = dataValue</code></li></ul>',14),d=[n];function r(o,s){return e(),i("div",null,d)}const c=a(l,[["render",r],["__file","Kotlin.html.vue"]]);export{c as default};
