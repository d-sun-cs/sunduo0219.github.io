import{_ as e,W as a,X as i,a2 as r}from"./framework-3800c176.js";const n={},t=r('<h1 id="computer-network" tabindex="-1"><a class="header-anchor" href="#computer-network" aria-hidden="true">#</a> Computer Network</h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><h3 id="conceptual-framework" tabindex="-1"><a class="header-anchor" href="#conceptual-framework" aria-hidden="true">#</a> Conceptual Framework</h3><ul><li><p><u>Concept:</u></p><ul><li><p>Concise concept: a set of <strong>interconnected and autonomous</strong> computers</p><ul><li>Interconnected: communication link</li><li>Autonomous: no master-slave relation</li></ul></li><li><p>Complete concept: a system connecting distributed and independent <strong>computer systems</strong> by <strong>communicative devices and links</strong>, and implement the function of <strong>resource sharing</strong> and <strong>information transfer</strong> by software</p><ul><li>Computer systems / Terminal systems: mobile, PC, ...</li><li>Communicative devices: <strong>switch</strong>, <strong>router</strong>, ...</li><li>Communicative links: <strong>mediums</strong> connecting terminal systems and communicative devices</li><li>Topological structure &amp; Software: The <strong>topological formed</strong> by terminal systems, communicative devices and links can implement functions only by <strong>software</strong></li></ul></li></ul></li><li><h2 id="composition" tabindex="-1"><a class="header-anchor" href="#composition" aria-hidden="true">#</a> <u>Composition:</u></h2></li><li><p>Classification</p></li></ul><h3 id="functions-metrics" tabindex="-1"><a class="header-anchor" href="#functions-metrics" aria-hidden="true">#</a> Functions &amp; Metrics</h3><ul><li><p><u>Functions</u></p><ul><li><p><mark><strong>Information transfer / Data communication</strong></mark>: data can be transferred in channels with <strong>connectivity</strong></p></li><li><p><mark><strong>Resource sharing</strong></mark></p><ul><li>Data sharing</li><li>Hardware sharing</li><li>Software sharing</li></ul></li><li><p>Distribution process: Multiple computers undertake different parts of a same task</p></li><li><p>Reliability enhancement:</p></li><li><p>Load balancing:</p></li></ul></li><li><p>Metrics</p></li></ul><h3 id="standardization-layered-models" tabindex="-1"><a class="header-anchor" href="#standardization-layered-models" aria-hidden="true">#</a> Standardization &amp; Layered Models</h3><div class="hint-container info"><p class="hint-container-title">Standardization &amp; Layered Models</p><ul><li>Standardization</li><li>Layering Principles</li><li>ISO/OSI</li><li>TCP/IP</li></ul></div><h2 id="physical-layer" tabindex="-1"><a class="header-anchor" href="#physical-layer" aria-hidden="true">#</a> Physical Layer</h2><h2 id="data-link-layer" tabindex="-1"><a class="header-anchor" href="#data-link-layer" aria-hidden="true">#</a> Data Link Layer</h2><h2 id="network-layer" tabindex="-1"><a class="header-anchor" href="#network-layer" aria-hidden="true">#</a> Network Layer</h2><h2 id="transport-layer" tabindex="-1"><a class="header-anchor" href="#transport-layer" aria-hidden="true">#</a> Transport Layer</h2><h2 id="application-layer" tabindex="-1"><a class="header-anchor" href="#application-layer" aria-hidden="true">#</a> Application Layer</h2>',13),o=[t];function s(l,c){return a(),i("div",null,o)}const h=e(n,[["render",s],["__file","ComputerNetwork.html.vue"]]);export{h as default};
