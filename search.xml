<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flutter</title>
      <link href="/posts/e5974716.html"/>
      <url>/posts/e5974716.html</url>
      
        <content type="html"><![CDATA[<h2 id="Component">Component</h2><h2 id="Layout">Layout</h2><h2 id="Event-Lifecycle">Event &amp; Lifecycle</h2><h2 id="Route">Route</h2><h2 id="Getx">Getx</h2><h2 id="HTTP-Request">HTTP Request</h2><h2 id="Animation">Animation</h2><h2 id="Project-Management">Project Management</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dart</title>
      <link href="/posts/36461f30.html"/>
      <url>/posts/36461f30.html</url>
      
        <content type="html"><![CDATA[<h2 id="Basic-Grammar">Basic Grammar</h2><h2 id="List-Set-Map">List &amp; Set &amp; Map</h2><h2 id="Function-Class">Function &amp; Class</h2><h2 id="Inheritance-Polymorphic-Interface-Genericity">Inheritance &amp; Polymorphic &amp; Interface &amp; Genericity</h2><h2 id="Library">Library</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Install List</title>
      <link href="/posts/23135839.html"/>
      <url>/posts/23135839.html</url>
      
        <content type="html"><![CDATA[<h2 id="Windows-Microsoft">Windows &amp; Microsoft</h2><blockquote><p>All software here should be synced by Microsoft personal account</p></blockquote><h3 id="Edge">Edge</h3><h3 id="Visual-Studio-Code">Visual Studio Code</h3><h3 id="Mail">Mail</h3><h3 id="Microsoft-Store">Microsoft Store</h3><h3 id="Microsoft-To-Do">Microsoft To Do</h3><h3 id="Twinkle-Tray-Brightness-Slider">Twinkle Tray: Brightness Slider</h3><h3 id="Auto-Dark-Mode">Auto Dark Mode</h3><h2 id="Work-Efficiency">Work Efficiency</h2><h3 id="Typora">Typora</h3><h3 id="AutoHotKey-KeyMouse">AutoHotKey &amp; KeyMouse</h3><ul><li><p>AutoHotKey: <a href="https://www.autohotkey.com/">official website</a></p><ul><li>Start up with administrator authority: <a href="https://jingyan.baidu.com/article/a681b0de6a322c3b18434630.html">图解Win10 下以管理员身份设置开机自启程序-百度经验 (baidu.com)</a></li></ul></li><li><p>KeyMouse: <a href="https://github.com/iscooool/KeyMouse">github repo</a></p></li></ul><h3 id="Nircmd">Nircmd</h3><ul><li><a href="https://www.nirsoft.net/utils/nircmd.html">NirCmd - Windows command line tool (nirsoft.net)</a></li><li>Config environment variable for <code>nircmd.exe</code></li></ul><h3 id="ContextMenuManager">ContextMenuManager</h3><h3 id="Bandizip">Bandizip</h3><h3 id="Quicker">Quicker</h3><p><a href="https://getquicker.net/">Quicker软件 您的指尖工具箱 - Quicker (getquicker.net)</a></p><h2 id="Runtime-Development-Tools">Runtime &amp; Development Tools</h2><h3 id="Git">Git</h3><h3 id="Notepad">Notepad++</h3><h3 id="IDEA-Java">IDEA &amp; Java</h3><h3 id="MinGW">MinGW</h3><h3 id="Node">Node</h3>]]></content>
      
      
      <categories>
          
          <category> Li </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SoftwareTips</title>
      <link href="/posts/fb9c7086.html"/>
      <url>/posts/fb9c7086.html</url>
      
        <content type="html"><![CDATA[<h2 id="Edge">Edge</h2><h3 id="Read-Mode">Read Mode</h3><ol><li><code>Ctrl L</code> to edit the URL in the <strong>address bar</strong></li><li>Add <code>read:</code> in front of the URL</li><li><code>Enter</code> to read the webpage in read mode</li><li>Use the <strong>tool bar</strong> on the top of webpage</li></ol><h3 id="Vertical-Tabs">Vertical Tabs</h3><p><code>Ctrl Shift ,</code></p><p>or</p><ol><li>Click the button on the top right corner of browser</li><li>Click <code>Turn on verticl tabs</code></li></ol><h3 id="Collections">Collections</h3><p><code>Ctrl Shift y</code></p><p>Collect <strong>a group of webpages</strong></p><h3 id="AdGuard-AdBlocker">AdGuard AdBlocker</h3><p>An extension to <strong>remove ads</strong></p><h3 id="Tampermonkey-Greasy-Fork">Tampermonkey + Greasy Fork</h3><ul><li>Tampermonkey is an extension to manage <strong>webpage scripts</strong></li><li>Greasy Fork is a web where there are various webpage scripts</li></ul><h3 id="Global-Speed">Global Speed</h3><p>An extension to play videos times faster in webpage</p><h3 id="Listen-1">Listen 1</h3><p>An extension containing various music libraries in major music platforms like QQ music, Netease Cloud Music and so on</p><h2 id="Windows">Windows</h2><h3 id="Booting-Items">Booting Items</h3><ol><li><code>win X</code> <code>T</code></li><li>Find booting programs</li></ol><h3 id="Storage-Managing">Storage Managing</h3><ol><li><code>Win I</code></li><li>Search <code>storage</code></li></ol><h3 id="Windows-Key">Windows Key</h3><ul><li><p>Start Menu Programs:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\&#123;UserName&#125;\AppData\Roaming\Microsoft\Windows\Start Menu\Programs</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XV6LabSummary</title>
      <link href="/posts/8ecd89a3.html"/>
      <url>/posts/8ecd89a3.html</url>
      
        <content type="html"><![CDATA[<h2 id="Lab-4-traps">Lab 4: traps</h2><h3 id="Basic-Theory">Basic Theory</h3><ul><li><p>Why to trap: Conversion between user mode and kernel mode</p><ul><li><p>What can supervisor actually do:</p><ul><li>Read or write <strong>control registers</strong></li><li>Use PTEs with 0 in <code>PTE_U</code></li></ul><blockquote><p>Still limited in <strong>virtual address</strong> set by page table</p></blockquote></li></ul></li><li><p>When to trap or What leads to trap:</p><ul><li>Syscall</li><li>Fault or Abort</li><li>Device</li></ul><blockquote><p>We also call Syscall and Fault as <strong><em>Software Interrupt</em>, Internal Interrupt or Exception</strong></p></blockquote></li><li><p>Key point of traps: <strong>Isolation &amp; Security</strong></p></li><li><p>Some relevant hardware registers / <strong>Control registers</strong>:</p><ul><li>pc: program counter</li><li>mode: mark supervisor mode or user mode</li><li>satp: supervisor <strong>address translation</strong> and protection, points to physical memory of page table</li><li>stvec: supervisor <strong>trap vector</strong> base address, points to base memory of instructions handling traps</li><li>sepc: supervisor exception program counter, <strong>keep value of pc</strong> when handling traps</li><li>sscratch: supervisor scratch, keep virtual address of <strong>trapframe page</strong> to exchange with a0</li><li>scause: supervisor cause, keep the trap <strong>reason</strong></li></ul></li><li><p>How to trap / Procedure of trap (take syscall as an example):</p><ol><li><p>Syscall function jump to <strong>usys.S</strong> and execute two instructions:</p><ol><li>Store <strong>syscall number</strong> into a7</li><li>Call <strong><code>ecall</code> instruction</strong></li></ol></li><li><p><code>ecall</code> do three things by <strong>hardware</strong>:</p><ol start="0"><li><p>Disable interrupts</p></li><li><p>Mark the <strong>mode</strong> to supervisor mode</p></li><li><p>Keep <strong>pc</strong> in sepc</p></li><li><p>Set pc to <strong>stvec</strong> and jump to <code>uservec</code> in trampoline.S</p></li></ol><blockquote><p><code>ecall</code> do only these things for <strong>more flexibility to software</strong></p></blockquote></li><li><p>Kernel executes <code>uservec</code> in trampoline.S</p><ol><li><p>Exchange a0 and sscratch</p><blockquote><p>So now a0 keeps trapframe page, sscratch keeps a0’s old value</p></blockquote></li><li><p>Keep <strong>32 user’s register</strong> in trapframe</p></li><li><p>Set stack pointer to <strong>kernel stack</strong> (getting from trapframe)</p></li><li><p>Set t0 to <strong>pointer of <code>usertrap()</code></strong> (getting from trapframe)</p></li><li><p>Set t1 to <strong>kernel page table</strong> and exchange satp and t1 (getting from trapframe)</p><blockquote><p>Now program keeps normal for <strong>trampoline page having same map</strong> in both user page table and kernel page table</p></blockquote></li><li><p><code>uservec</code> jumps to <code>usertrap()</code> in trap.c</p></li></ol></li><li><p><code>usertrap()</code> handles this trap</p><ol><li><p>Set <strong>stvec</strong> to <code>kernelvec</code></p><blockquote><p>Traps can be triggered in kernel space, different from user space</p></blockquote></li><li><p>Keep <strong>sepc</strong> in trapframe</p><blockquote><p>May it change to another process and also trigger traps to overwrite sepc</p></blockquote></li><li><p>Check <strong>cause</strong> for this trap and handle it (If syscall, enable interrupts)</p></li><li><p>Call <code>usertrapret()</code></p></li></ol></li><li><p><code>usertrapret()</code> finish some works to return to user space</p><ol><li>Disable interrupts</li><li>Set <strong>stvec</strong> to <code>uservec </code>in trampoline.S</li><li>Store <strong>kernel page table</strong> into trapframe</li><li>Store <strong>kernel stack pointer</strong> into trapframe</li><li>Store <code>usertrap</code> into trapframe</li><li>Modify <strong>sstatus</strong> to ensure returning to user mode and interrupt on</li><li>Set <strong>sepc</strong> to previous kept pc</li><li>Jump to <code>userret</code> in trampoline.S</li></ol></li><li><p>Kernel executes <code>uservec</code> in trampoline.S</p><ol><li><p>Set satp to <strong>user page table</strong> (getting from <code>usertrapret()</code>)</p></li><li><p>Restore 32 user’s resgisters</p></li><li><p>Exchange a0 and sscratch</p><blockquote><p>So now sscratch keeps trapframe page, a0 keeps syscall return value</p></blockquote></li><li><p><code>sret</code></p></li></ol></li><li><p><code>sret</code></p><ol><li>Mark the <strong>mode</strong> to user mode</li><li>Set <strong>pc</strong> to sepc</li><li>Enable interrupts</li></ol></li><li><p>Return to user space</p></li></ol></li></ul><h3 id="Task-Analysis">Task Analysis</h3><h4 id="Task-1-RISC-V-assembly">Task 1: RISC-V assembly</h4><ul><li><code>jalr</code> omit first parameter for it is the same as register in second parameter</li></ul><h4 id="Task-2-Backtrace">Task 2: Backtrace</h4><ul><li>Comprehend function call stack’s structure, especially <code>fp</code> and <code>pre fp</code>, to correctly <strong>back track</strong> function call stack</li><li>Through <strong><code>fp</code> and PAGE-align</strong> to find the top of function call stack, for XV6 allocates <strong>one page for each stack</strong></li></ul><h4 id="Task-3-Alarm">Task 3: Alarm</h4><ul><li><p>Where to call <code>fn</code>: where it handles <strong>timer interrupt</strong></p></li><li><p>When to call <code>fn</code>:</p><ul><li><strong>n ticks</strong>, so we need a new filed in process structrue<ul><li>Prevent <strong>re-entrant</strong> calls to the handler by adding a new field in process structure to sign if a handler is running</li></ul></li></ul></li><li><p>How to call <code>fn</code>:</p><ul><li><p>A new field in process structure to store <code>fn</code> address</p><blockquote><p>But in kernel mode, we can’t directly use <strong>user space address</strong> to call <code>fn</code></p></blockquote></li><li><p>Modify user process <strong>execution stream</strong> to run <code>fn</code> by:</p><ul><li>Modifying <code>sepc</code> in <strong>trap handling</strong></li><li><strong>Store</strong> user process previous <strong>context</strong> in <code>trapframe</code></li><li><strong>Restore</strong> user process previous context in <code>sigreturn</code></li></ul></li></ul></li></ul><h2 id="Lab-5-xv6-lazy-page-allocation">Lab 5: xv6 lazy page allocation</h2><h3 id="Basic-Theory-2">Basic Theory</h3><ul><li><p><strong>Information required</strong> to properly handle <strong>page faults</strong>:</p><ul><li>The error <strong>virtual address</strong> in <strong>stval</strong></li><li>The error <strong>reason</strong> in <strong>scause</strong></li><li>The instruction address triggering page fault in <strong>sepc or <code>trapframe-&gt;eps</code></strong></li></ul></li><li><p><strong>Thoughts</strong> about <strong>lazy page allocation</strong>:</p><ul><li><p><strong>Just modify the value <code>p-&gt;sz</code></strong> but do not allocate pages in <strong><code>sbrk()</code> syscall</strong></p><blockquote><p><code>sbrk()</code> <strong>expands heap</strong> to get new memory for process</p></blockquote></li><li><p>Lazily allocate pages when <strong>page faults with virtual address between</strong> <code>p-&gt;sz</code> before and after <code>sbrk()</code> occurs, and execute page fault instructions again</p><blockquote><p>To execute page fault again, we just keep the value in <strong>sepc</strong>, because it keeps <strong>the instruction address cause page fault</strong>. (For syscall, value in sepc will be <strong>increased</strong> to execute next instruction instead of <code>ecall</code> after syscal)</p></blockquote></li></ul></li><li><p>Simple <strong>implementation</strong> of <strong>lazy page allocation</strong>:</p><ul><li><p><em><strong>Lazy</strong></em>: Modify <code>sbrk()</code> by plan</p></li><li><p><em><strong>Allocate</strong></em>: Handle a more trap case <strong>page fault</strong> in <code>usertrap()</code>, to <code>kalloc()</code> a <strong>new page</strong> and <code>mappages()</code> a <strong>new map</strong> in lazy allocation</p></li><li><p><em><strong>Release</strong></em>: Delete <code>panic()</code>  in <code>uvmunmap()</code> when <strong>unmapping lazy allocation page</strong> not actually used</p><blockquote><p>XV6 <code>panic()</code> when this case happens, but actually this case <strong>never happens</strong> in unmodified XV6, and we require no <code>panic()</code> on this case in lazy allocation</p></blockquote></li></ul></li></ul><h3 id="Task-Analysis-2">Task Analysis</h3><blockquote><p>Just follow thought and implementation in basic theory</p></blockquote><h4 id="Task-1-Eliminate-allocation-from-sbrk">Task 1: Eliminate allocation from sbrk()</h4><ol><li><em><strong>Lazy</strong></em></li></ol><h4 id="Task-2-Lazy-allocation">Task 2: Lazy allocation</h4><ol start="2"><li><em><strong>Allocate</strong></em></li></ol><h4 id="Task-3-Lazytests-and-Usertests">Task 3: Lazytests and Usertests</h4><blockquote><p>Just follow key points listed in guide book</p></blockquote><ol start="3"><li><em><strong>Release</strong></em></li><li><em><strong>Kernel</strong></em>: When user process use lazy allocated virtual address, page fault causes trap. But when <strong>syscall use user space’s lazy allocated virtual address</strong> (already in trap but not caused by page fault) , we need to handle it in <code>argaddr()</code> or <code>walkaddr()</code></li></ol><h2 id="Lab-6-Copy-on-Write-Fork-for-xv6">Lab 6: Copy-on-Write Fork for xv6</h2><h3 id="Basic-Theory-3">Basic Theory</h3><ul><li><p><strong>Thoughts</strong> about <strong>COW fork</strong>:</p><ul><li><p><em><strong>Lazy:</strong></em> <strong>Just copy page table maps</strong> of parent process but do not copy pages when creating child process, and set these maps <strong>read-only</strong></p></li><li><p><em><strong>Allocate:</strong></em> Lazily copy pages when parent or child process <strong>write these pages causing page faults</strong>, and execute page fault instructions again</p><blockquote><p>For recognizing this case, we need use <strong>a new sign bit in PTE</strong>, or we may not distinguish this case from writing <strong>an originally read-only page</strong></p></blockquote></li><li><p><em><strong>Release:</strong></em> Be careful to decide whether to <strong>release a page</strong> when parent process exits, for child process maybe using it</p><blockquote><p>We can set <strong>a reference counter</strong> for these pages</p></blockquote></li></ul></li></ul><h3 id="Task-Analysis-3">Task Analysis</h3><h4 id="Task-1-Implement-copy-on-write">Task 1: Implement copy-on write</h4><blockquote><p>Just follow thought in basic theory with the help of hints in guide book</p></blockquote><ol><li><em><strong>Lazy</strong></em></li><li><em><strong>Allocate</strong></em></li><li><em><strong>Release</strong></em></li><li><em><strong>Kernel</strong></em>: When user process <em>write</em> lazy allocated virtual address, page fault causes trap. But when <strong>kernel process <em><u>write</u></em> user space’s lazy allocated virtual address</strong> (already in trap but not caused by page fault) , we need to handle it in <code>copyout()</code></li></ol><h2 id="Lab-7-Multithreading">Lab 7: Multithreading</h2><h3 id="Basic-Theory-4">Basic Theory</h3><h4 id="Interrupt">Interrupt</h4><blockquote><p>Here we mainly talk about <strong>the narrow interrupt</strong>, not software interrupt</p></blockquote><ul><li><p>Differences between <strong>interrupt</strong> and other trap causes (software interrupt):</p><ul><li><em><strong>Asynchronous</strong></em>: <strong>Interrupt handler</strong> has no relationship with current CPU running process</li><li><em><strong>Concurrency</strong></em>: <strong>Devices generating interrupt</strong> <em>concurrently run</em> with CPU</li><li><em><strong>Program device</strong></em>: Devices like network card also require programming</li></ul></li><li><p><strong>Related registers</strong> about interrupt:</p><ul><li>SIE: Supervisor Interrupt Enable, has one bit for <strong>device interrupt</strong>, one bit for <strong>software interrupt</strong> and one bit for <strong>timer interrupt</strong></li><li>SSTATUS: Supervisor STATUS, has one bit to <strong>open or close interrupt</strong></li><li>SIP: Supervisor Interrupt Pending, keep <strong>the type of interrupt</strong></li></ul></li><li><p>Basic setting of interrupt (in <code>main()</code>):</p><ol><li>Program devices</li><li>Program PLIC (<code>plicinit()</code>)</li><li>Every CPU core call <code>plicinithart()</code> to show interest to device interrupts</li><li><code>scheduler()</code> to <code>intr_on()</code> opening interrupt and run process</li></ol></li><li><p>Hardware about interrupt:</p><ul><li>PLIC <strong>route interrupts</strong> from devices to <strong>CPU claiming</strong> to receive interrupt</li><li>CPU handle interrupt with trap mechanism</li><li>CPU will <strong>notice PLIC</strong> after handling interrupt</li></ul><blockquote><p>Kernel need to <strong>program PLIC</strong> to tell it how to route interrupts</p></blockquote></li><li><p>Software about interrupt / <strong>Driver</strong>:</p><ul><li>Bottom part: <strong>interrupt handler</strong></li><li>Top part: <strong>interfaces</strong> for user or kernel process</li></ul></li></ul><h4 id="Multithreading-Timer-Interrupt">Multithreading &amp; Timer Interrupt</h4><ul><li><p>Three parts of thread’s status to keep when switching</p><ul><li><strong>Program counter</strong></li><li><strong>Registers</strong> storing variables</li><li>Program <strong>stack</strong></li></ul></li><li><p>XV6’s multithread mechanism</p><ul><li><strong>One kernel thread</strong> per user process, which <strong>handling traps</strong> for user process</li><li><strong>Only one user thread</strong> per user process, which <strong>controlling instructions</strong> of user process</li></ul><blockquote><p>So we may conclude that in XV6, one user process has two threads, but they never run together</p></blockquote></li><li><p>Implementation of multithread switch / Timer interrupt:</p><ol><li><p><strong>Hardware</strong> produce interrupt periodically, convert user space into <em><strong><u>kernel</u>’s</strong></em> timer interrupt handler</p><blockquote><p>With <strong>trap</strong> mechanism</p></blockquote></li><li><p>Timer interrupt handler <strong>yields</strong> CPU to <strong>thread scheduler</strong></p><ol><li><p>Call <code>yield()</code> to acquire process’s <strong>lock</strong>, change process’s <strong>state</strong> to <code>RUNNABLE</code> and call <code>sched()</code></p></li><li><p><code>sched()</code> do some checks and call <code>swtch</code></p></li><li><p><code>swtch</code>:</p><ol><li><p>Store kernel process’s <strong>registers</strong> into a <code>context</code></p><blockquote><p><code>context</code> is stored in corresponding <strong>user process structure</strong>;</p></blockquote></li><li><p>Convert to this <strong>CPU’s scheduler process</strong> by restoring its <code>context</code> thus jumping to <code>swtch()</code> called before</p><blockquote><p>Every CPU has a <strong>scheduler process</strong> also in <strong>kernel</strong>;</p><p>Scheduler process’s <code>context</code> is stored in its <strong>CPU structure</strong></p></blockquote></li><li><p>Continue executing <code>scheduler()</code></p></li></ol><blockquote><p><code>swtch</code> needs to save/restore only the <strong>callee-save registers</strong> because it is called as a <strong>C function</strong> thus <strong>caller-save registers</strong> saved automatically</p></blockquote></li><li><p><code>scheduler()</code> switch another <code>RUNNABLE</code> process to <code>RUNNING</code></p><ol><li>Release process’s <strong>lock</strong></li><li>Find another <code>RUNNABLE</code> process</li><li>Call <code>swtch</code></li></ol></li><li><p><code>swtch</code></p><ol><li>Store this <strong>CPU’s scheduler process</strong> <code>context</code></li><li><strong>Restore</strong> another kernel process’s <code>context</code> thus jumping to <code>swtch()</code> called before</li><li>Another kernel finish <strong>timer interrupt</strong> and return to <strong>user space</strong></li></ol></li></ol></li></ol><blockquote><p>Other interrupts causing <strong>thread waiting</strong> are similar to timer interrupt</p></blockquote></li></ul><h3 id="Task-Analysis-4">Task Analysis</h3><h4 id="Task-1-Uthread-switching-between-threads">Task 1: Uthread: switching between threads</h4><ul><li><p>Complete <strong>thread structure</strong>: add <code>context</code></p></li><li><p>Complete <code>thread_create()</code>:</p><ul><li>Set <code>context.ra</code> to execute the function passed</li><li>Set <code>contest.sp</code> to execute on its own stack</li></ul><p>when <code>thread_schedule()</code> runs a given thread for the first time</p></li><li><p>Complete <code>thread_schedule()</code>: add calling <code>thread_swtich</code></p></li><li><p>Complete <code>thread_switch</code>: simulate <code>swtch</code></p></li></ul><h4 id="Task-2-Using-threads">Task 2: Using threads</h4><ul><li>Definition and Initialization of lock</li><li>Use of lock</li></ul><h4 id="Task-3-Barrier">Task 3: Barrier</h4><ul><li>Definition and Initialization of lock</li><li>Use of lock</li></ul><h2 id="Lab-8-locks">Lab 8: locks</h2><h3 id="Basic-Theory-5">Basic Theory</h3><h3 id="Task-Analysis-5">Task Analysis</h3><h4 id="Task1-Memory-allocator">Task1: Memory allocator</h4><h4 id="Task2-Buffer-cache">Task2: Buffer cache</h4><h2 id="Lab-9-file-system">Lab 9: file system</h2><h3 id="Basic-Theory-6">Basic Theory</h3><blockquote><p>The file system we talk about below is in XV6’s pattern</p></blockquote><h4 id="1-Disk-Level">1 Disk Level</h4><p><em>Disk layout:</em></p><ul><li>Block0: <strong>boot</strong> block, launch operation system</li><li>Block1: super <strong>block</strong>, describe file system</li><li>Block2 - Block46: <strong>metadata</strong> block<ul><li>Block2 - Block31: <strong>log</strong></li><li>Block32 - Block45: <strong>inode</strong></li><li>Block46: <strong>bitmap</strong> block</li></ul></li><li>Block47 - Block n (954 in total): <strong>data</strong> block</li></ul><h4 id="2-Buffer-Cache-Level">2 Buffer Cache Level</h4><blockquote><p>We use <em><u>buffer cache</u></em> to represent all the cache, use <em><u>block cache</u></em> to represent a certain block in buffer cache</p></blockquote><p><em>Allocate an inode / <code>ialloc()</code>:</em></p><ul><li><p>Visit all inode blocks by <code>bread()</code>, check if it is free then use it, and <code>brelse()</code></p></li><li><p><code>bread()</code>:</p><ol><li><p>Call <code>bget()</code> to get this block’s cache / <code>bget()</code>:</p><ol><li><p><code>acquire()</code> **buffer cache’**s <code>spinlock</code></p></li><li><p>Visit <strong>all block caches</strong> to find if this block is already cached, if yes:</p><ol><li><p>Increase this block cache’s <code>refcnt</code></p></li><li><p><code>release()</code> **buffer cache’**s <code>spinlock</code></p></li><li><p><code>acquiresleep()</code> <strong>block cache</strong>’s <code>sleeplock</code></p><blockquote><p>Anytime only one process can use a block cache, and it may cause much time to handle it. So there must be a <code>sleeplock</code></p></blockquote></li></ol></li><li><p>If not cached, recycle the <strong>LRU free block cache</strong> (<code>panic()</code> if no free block cache)</p><ol><li>If <code>refcnt</code> equals zero, then it is free. Set some fields of this block cache</li><li><code>release()</code> **buffer cache’**s <code>spinlock</code></li><li><code>acquiresleep()</code> <strong>block cache</strong>’s <code>sleeplock</code></li></ol></li></ol><blockquote><p>One disk block can only have one block cache, or error may occur. So there must be a <code>spinlock</code> to protect buffer cache</p></blockquote></li><li><p>Read from <strong>disk</strong> if it is <strong>not valid</strong></p></li><li><p>Return the block cache</p></li></ol></li><li><p><code>brelse()</code>:</p><ol><li><code>releasesleep()</code> block cache’s <code>sleeplock</code></li><li><code>acquire()</code> buffer cache’s <code>spinlock</code></li><li>Decrease this block cache’s <code>refcnt</code></li><li>If no process is waiting for this block cache (<code>refcnt==0</code>), then follow <strong>LRU</strong> to locate this block cache in buffer</li><li><code>release()</code> buffer cache’s <code>spinlock</code></li></ol></li></ul><h4 id="3-Logging-Level">3 Logging Level</h4><p><em><strong>Crash</strong> includes:</em></p><ul><li>Power fault</li><li>Core <code>panic()</code></li></ul><blockquote><p>Exclude disk fault like data missing</p></blockquote><hr><p><em><strong>Key</strong> point:</em></p><ul><li>The <strong>atomicity</strong> of multiple operation of <strong>writing block</strong>, not the <strong>order</strong></li><li><strong>Fast recovery</strong></li></ul><hr><p><em><strong>Thoughts</strong> about logging:</em></p><ol><li><p><em>Write log</em>: <strong>write data to log</strong> when requiring to write file system</p></li><li><p><em>Commit op</em>: <strong>Record numbers</strong> representing a groups of file system <strong>writing</strong> when they totally finish and <strong>store data in log</strong></p><blockquote><p>Follow “<strong>write ahead rule</strong>”: before committing, all the written data must be in the log</p></blockquote></li><li><p><em>Install log</em>: <strong>Move</strong> log’s blocks’ data to file system’s blocks when really ready to execute these writing</p></li><li><p><em>Clean log</em>: <strong>Clean records</strong> after installing log</p></li></ol><hr><p><em><strong>A Log’s Structure</strong></em>:</p><ul><li><strong>Header block</strong>: valid <strong>log block amount</strong> and <strong>disk block number</strong> each log block corresponding</li><li><strong>Log’s data block</strong>: actual blocks’ data to store in disk</li></ul><hr><p><em><strong>Implementation of Logging:</strong></em></p><ul><li><p><code>begin_op()</code></p><ol><li><code>acquire()</code> log’s lock</li><li>If log is <strong>committing</strong>, sleep</li><li>If <strong>concurrent operation amount</strong> (<code>outstanding</code>) is over upper limit, sleep</li><li>If not the above two cases, increase <code>outstanding</code>, <code>release()</code> lock and continue</li></ol></li><li><p><code>log_write()</code>: update <strong>log header in memory</strong> including block number and block amount</p></li><li><p><code>end_op()</code></p><ol><li><p><code>acquire()</code> log’s lock</p></li><li><p>Decrease <code>outstanding</code></p></li><li><p>If this is the last outstanding operation (<code>outsanding == 0</code>), mark it, else <code>wakeup()</code> sleeping process in <code>begin_op()</code></p></li><li><p><code>release()</code> log’s lock</p></li><li><p><code>commit()</code> if marked above</p><ol><li><p><code>write_log()</code>(write log): <strong>write</strong> block’s data from <strong>buffer cache</strong> to disk <strong>log</strong> according to log header in memory</p><blockquote><p><code>bwrite()</code> will be used in <code>write_log()</code>, but should not be directly used without logging</p></blockquote></li><li><p><code>write_head()</code>(commit op): write <strong>log header</strong> into disk log’s header block</p><blockquote><p>Inside <code>write_head()</code> is a <code>bwrite()</code> call which is the actual “<strong>commit point</strong>”</p></blockquote></li><li><p><code>install_trans()</code>(install)</p></li><li><p>Set log header <code>n</code>(amount) to 0 and <code>write_head()</code>(clean log)</p></li></ol></li></ol></li></ul><hr><p><em>File System <strong>Recovering</strong>:</em></p><blockquote><p><code>initlog() -&gt; recover_from_log()</code></p></blockquote><ol><li><code>read_head()</code> to read <strong>log header</strong> from disk into memory</li><li><code>install_trans()</code></li></ol><h4 id="4-Inode-Level">4 Inode Level</h4><p><em>Inode Structure’s Fields:</em></p><ul><li><code>type</code>: file or directory, or this inode is free</li><li><code>nlink</code>: count how many file names link to this inode</li><li><code>size</code>: file or directory data bytes</li><li>12 Direct block numbers: direct index to data block</li><li>1 Indirect block number: one level indirect indiex to data block</li></ul><hr><p><em>Find nth byte in a file:</em></p><ol><li><code>n / block_size</code> leads to the <strong>block number</strong></li><li><code>n % block_size</code> leads to the <strong>byte offset</strong> in a block</li></ol><h4 id="5-Directory-Level">5 Directory Level</h4><blockquote><p>Directory index block also follows index structrue above</p></blockquote><p><em>Directory Data Block Structure / <strong>Directory entries</strong>:</em></p><ul><li>16 bytes per entry<ul><li>First 2 bytes: subdirectory’s or file’s <strong>inode number</strong></li><li>Next 14 bytes: subdirectory’s or file’s <strong>name</strong></li></ul></li></ul><hr><p><em>Find a pathname:</em></p><ol><li>Begin with <strong><code>root </code> inode</strong> having index number 1 in XV6</li><li>Scan <strong><code>root</code>’s data blocks</strong> find the first level pathname’s corresponding <strong>index number</strong></li><li>Follow <strong>index number</strong> to find deeper level pathname in the data blocks</li><li>Repeat above steps until find the correct file or meet error</li></ol><hr><p><em>Create a file and firstly write data into it:</em></p><ol><li><strong>Allocate an inode</strong> and write <code>type</code>, <code>nlink</code> and other infomation in it</li><li>Find parent directory and <strong>create a new entry</strong> in its data block</li><li>Modify <strong>parent directory’s inode</strong>: <em>size</em> and so on</li><li>Scan <code>bitmap</code> to find an unused <strong>data block</strong> for new file to write and update <code>bitmap</code></li><li>Modify <strong>new file’s inode</strong>: <em>size</em>, <em>direct block number</em> and so on</li></ol><h4 id="6-Pathname-Level">6 Pathname Level</h4><h4 id="7-File-Descriptor-Level">7 File Descriptor Level</h4><h3 id="Task-Analysis-6">Task Analysis</h3><h4 id="Task1-Large-files">Task1: Large files</h4><ul><li>Modify the <strong>index address layout</strong> and inode structure in fs.h and file.h</li><li>Modify the <strong>index address map method</strong> in <code>bmap()</code><ul><li>Simulate singly-indirect block map in <code>bmap()</code></li><li><code>bread()</code> and <code>brelse()</code> an index block</li><li>Call <code>balloc()</code> if index or data block is not allocated</li><li>Call <code>log_write()</code> if index block is modified</li><li>Comprehend the arithmetical operation of <code>bn</code></li></ul></li><li>Modify the <strong>data and index block releasing method</strong> in <code>itrunc()</code><ul><li>Simulate singly-indirect block free in <code>itrunc()</code></li></ul></li></ul><h4 id="Task2-Symbolic-links">Task2: Symbolic links</h4><ul><li><strong>Create</strong> symbolic link in <code>sys_symlink()</code><ul><li><code>create()</code> with type <code>T_SYMLINK</code> and name <code>path</code></li><li><code>writei()</code> <code>target</code> to inode’s data block</li></ul></li><li><strong>Use</strong> symbolic link in <code>sys_open()</code><ul><li>Add codes <strong>after getting inode</strong></li><li>Follow the symbolic link to update inode, if the type is <code>T_SYMLINK</code> and <code>O_NOFOLLOW</code> is not flagged</li></ul></li></ul><h2 id="Lab10-mmap">Lab10: mmap</h2><h3 id="Basic-Theory-7">Basic Theory</h3><ul><li>Goals of memory mapped files: handle files with <strong>memory related instructions</strong> like <code>load</code> and <code>store</code></li><li>Thoughts about <strong>eager mmap</strong>:<ul><li>Copy the whole file to memory by <strong>offset and length</strong>, allocating pages</li><li><strong>Unmap and write back dirty block</strong> after finishing handling the file</li></ul></li><li>Thoughts about <strong>lazy mmap</strong>:<ul><li><em><strong>Lazy:</strong></em> Just <strong>store VMA</strong> (Virtual Memory Area) which contains information about file in process structure but do not allocate pages</li><li><em><strong>Allocate:</strong></em> Lazily allocate pages when actually reading or writing mmap file causing <strong>page fault</strong></li></ul></li></ul><h3 id="Task-Analysis-7">Task Analysis</h3><h4 id="Task1-mmap">Task1: mmap</h4><blockquote><p>Just follow thought in basic theory with the help of hints in guide book</p></blockquote><ol><li><em><strong>Lazy</strong></em> (in <code>sys_mmap()</code>)</li><li><em><strong>Allocate</strong></em>: Besides basic theory above: (in <code>mmap_alloc()</code>)<ul><li>It is also required to handle <strong>permissions</strong> about file</li><li>Use <strong>inode</strong> to read file (<code>readi()</code>)</li></ul></li><li><em><strong>Release</strong></em>: (in <code>sys_munmap()</code>)<ul><li>Call <code>filewrite()</code> if <code>MAP_SHADED</code></li><li>Call <code>uvmunmap()</code> to unmap the file’s part in memory</li><li>Call <code>fileclose()</code> if unmap all the file in memory</li><li>Also delete unnecessary <code>panic()</code> in <code>uvmcopy()</code> and <code>uvmunmap()</code></li></ul></li><li><em><strong>Kernel</strong></em>:<ul><li><code>exit()</code></li><li><code>fork() </code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Operation System </tag>
            
            <tag> XV6 </tag>
            
            <tag> MIT </tag>
            
            <tag> Lab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Life Sharing Tree</title>
      <link href="/posts/d33aa198.html"/>
      <url>/posts/d33aa198.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Life Sharing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life Sharing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quickly Learn About This Blog</title>
      <link href="/posts/ed318fdc.html"/>
      <url>/posts/ed318fdc.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Life Sharing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life Sharing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Machine Learning</title>
      <link href="/posts/cc8189c7.html"/>
      <url>/posts/cc8189c7.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Analysis</title>
      <link href="/posts/f137c912.html"/>
      <url>/posts/f137c912.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Data Analysis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle</title>
      <link href="/posts/18596a3e.html"/>
      <url>/posts/18596a3e.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install-Simple-Use">Install &amp; Simple Use</h3><ul><li>Project structure</li></ul><h2 id="Command-Lifecycle">Command &amp; Lifecycle</h2><ul><li>groovy</li><li>Hook</li></ul><h2 id="Task">Task</h2><h2 id="Dependency-Plugin">Dependency &amp; Plugin</h2><ul><li>build.gradle</li></ul>]]></content>
      
      
      <categories>
          
          <category> Project Management </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/7273cdc.html"/>
      <url>/posts/7273cdc.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install-Simple-Use">Install &amp; Simple Use</h3><h2 id="Repository-Coordinate">Repository &amp; Coordinate</h2><h2 id="Command-Lifecycle">Command &amp; Lifecycle</h2><h2 id="Dependency-Module">Dependency &amp; Module</h2>]]></content>
      
      
      <categories>
          
          <category> Project Management </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/posts/69c3279c.html"/>
      <url>/posts/69c3279c.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install-Simple-Use">Install &amp; Simple Use</h3><h2 id="File">File</h2><ul><li>.gitignore</li></ul><h2 id="Branch">Branch</h2><ul><li>rebase</li><li>label</li></ul><h2 id="Remote">Remote</h2>]]></content>
      
      
      <categories>
          
          <category> Project Management </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Mining</title>
      <link href="/posts/a9ab4cb3.html"/>
      <url>/posts/a9ab4cb3.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Data Mining </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop</title>
      <link href="/posts/b3349d42.html"/>
      <url>/posts/b3349d42.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Big Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++</title>
      <link href="/posts/caeaa4a1.html"/>
      <url>/posts/caeaa4a1.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Basic-C">1 Basic C++</h2><h3 id="1-1-Variable-Data-Type">1.1 Variable &amp; Data Type</h3><ul><li>Array</li></ul><h3 id="1-2-Program-Control">1.2 Program Control</h3><h3 id="1-3-Function">1.3 Function</h3><ul><li>advanced</li></ul><h3 id="1-4-Pointer">1.4 Pointer</h3><h3 id="1-5-Structure">1.5 Structure</h3><h2 id="2-Object-oriented-C">2 Object-oriented C++</h2><h3 id="2-1-Memory-Partition">2.1 Memory Partition</h3><h3 id="2-2-Reference">2.2 Reference</h3><h3 id="2-3-Class-Object">2.3 Class &amp; Object</h3><h3 id="2-4-File">2.4 File</h3><h2 id="3-Template-C">3 Template C++</h2><h3 id="3-1-Conceptual-Framework">3.1 Conceptual Framework</h3><h3 id="3-2-Function-Template">3.2 Function Template</h3><h3 id="3-3-Class-Template">3.3 Class Template</h3><h2 id="4-C-STL">4 C++ STL</h2><h3 id="4-1-Conceptual-Framework">4.1 Conceptual Framework</h3><h3 id="4-2-Container">4.2 Container</h3><h3 id="4-3-Function-Object">4.3 Function Object</h3><h3 id="4-3-Algorithm">4.3 Algorithm</h3>]]></content>
      
      
      <categories>
          
          <category> C &amp; C++i </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes</title>
      <link href="/posts/9acacb00.html"/>
      <url>/posts/9acacb00.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Cluster-Constructing">Cluster Constructing</h3><h2 id="Namespace-Label">Namespace &amp; Label</h2><h2 id="Pod-Deployment">Pod &amp; Deployment</h2><h2 id="Service">Service</h2><h2 id="Data-Storage-Safe-Authentication-DashBoard">Data Storage &amp; Safe Authentication &amp; DashBoard</h2>]]></content>
      
      
      <categories>
          
          <category> Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/posts/f5f9fa9b.html"/>
      <url>/posts/f5f9fa9b.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install-Simple-Use">Install &amp; Simple Use</h3><h2 id="Data-Volume-Deploy">Data Volume &amp; Deploy</h2><h2 id="Dockerfile">Dockerfile</h2>]]></content>
      
      
      <categories>
          
          <category> Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/posts/53d0684b.html"/>
      <url>/posts/53d0684b.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install">Install</h3><h3 id="Man-Page">Man Page</h3><p>Network</p><h2 id="File-Directory-Disk">File &amp; Directory &amp; Disk</h2><h3 id="Conceptual-Framework-2">Conceptual Framework</h3><ul><li>Compress</li><li>Search</li><li>Software package</li></ul><h2 id="User-Permission">User Permission</h2><h2 id="System-Process-Management">System &amp; Process Management</h2><ul><li>Time &amp; Date</li></ul><h2 id="Shell">Shell</h2>]]></content>
      
      
      <categories>
          
          <category> Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app</title>
      <link href="/posts/e19785da.html"/>
      <url>/posts/e19785da.html</url>
      
        <content type="html"><![CDATA[<h2 id="Component">Component</h2><h2 id="Layout">Layout</h2><h2 id="Configuration">Configuration</h2><h2 id="Event-Lifecycle">Event &amp; Lifecycle</h2><h2 id="Route">Route</h2><h2 id="MobX">MobX</h2><h2 id="HTTP-Request">HTTP Request</h2><h2 id="Project-Management">Project Management</h2>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="/posts/f8e09374.html"/>
      <url>/posts/f8e09374.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-Install-Simple-Use">1.2 Install &amp;&amp; Simple Use</h3><h2 id="2-MVVM-Declarative-Programming">2 MVVM &amp; Declarative Programming</h2><h3 id="2-1-Data-Agency-Listen">2.1 Data Agency &amp; Listen</h3><h3 id="2-2-Instruction-Data-Binding">2.2 Instruction Data Binding</h3><ul><li>Collect form data</li><li>Further instructions</li></ul><h3 id="2-3-Computed-Watch-Attribute">2.3 Computed &amp; Watch Attribute</h3><h3 id="2-4-Event-Processing-Lifecycle">2.4 Event Processing &amp; Lifecycle</h3><h3 id="2-5-Condition-List-Rendering">2.5 Condition &amp; List Rendering</h3><h2 id="3-Component-based-Programming">3 Component-based Programming</h2><h3 id="3-1-Conceptual-Framework">3.1 Conceptual Framework</h3><h3 id="3-2-Vue-Component-Framework">3.2 Vue Component Framework</h3><ul><li>CLI framework</li><li>Non-single file component</li><li>Single file component structure</li></ul><h3 id="3-3-Component-Attribute">3.3 Component Attribute</h3><ul><li>render</li><li>scope</li><li>ref</li><li>props</li></ul><h3 id="3-4-Component-Event">3.4 Component Event</h3><ul><li>custom event</li><li>global event bus</li><li>$nextTick</li><li>WEB &amp; AJAX</li></ul><h3 id="3-5-Mix-In-Plugin-Slot">3.5 Mix In &amp; Plugin &amp; Slot</h3><h3 id="3-6-Transition-Animation">3.6 Transition &amp; Animation</h3><h3 id="3-7-Component-Library">3.7 Component Library</h3><h2 id="4-Vuex">4 Vuex</h2><h3 id="4-1-Conceptual-Framework">4.1 Conceptual Framework</h3><h3 id="4-2-Install-Simple-Use">4.2 Install &amp; Simple Use</h3><h3 id="4-3-Map">4.3 Map</h3><h3 id="4-4-Namespace">4.4 Namespace</h3><h2 id="5-Vue-router">5  Vue-router</h2><h3 id="5-1-Conceptual-Framework">5.1 Conceptual  Framework</h3><ul><li>Tow working mode of route</li></ul><h3 id="5-2-Install-Basic-Use">5.2 Install &amp; Basic Use</h3><ul><li>Basic route</li><li>Nested route</li><li>Cached route</li><li>Programming route</li></ul><h3 id="5-3-Parameter">5.3 Parameter</h3><h3 id="5-4-Hook-Guard">5.4 Hook &amp; Guard</h3>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js</title>
      <link href="/posts/f3334fd0.html"/>
      <url>/posts/f3334fd0.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-Install-Basic-Use">1.2 Install &amp; Basic Use</h3><h2 id="2-Promise">2 Promise</h2><h2 id="3-Modularization-NPM">3 Modularization &amp; NPM</h2><h2 id="4-Express">4 Express</h2><h3 id="…">[…]</h3><h3 id="Router">Router</h3><h3 id="Cookie">Cookie</h3><h3 id="Session">Session</h3><h2 id="5-REST">5 REST</h2><h3 id="5-1-Conceptual-Framework">5.1 Conceptual Framework</h3><h3 id="5-2-AJAX">5.2 AJAX</h3><h3 id="5-3-Fetch">5.3 Fetch</h3><h3 id="5-4-Token">5.4 Token</h3><h3 id="5-5-Axios">5.5 Axios</h3>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Node.js </tag>
            
            <tag> AJAX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS</title>
      <link href="/posts/ee69e452.html"/>
      <url>/posts/ee69e452.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-CSS-Framework">1.2 CSS Framework</h3><h2 id="2-Selector-Inheritance">2 Selector &amp; Inheritance</h2><h3 id="2-1-Basic-Selectors">2.1 Basic Selectors</h3><h3 id="2-2-Multiple-Relation-Selectors">2.2 Multiple &amp; Relation Selectors</h3><ul><li>Attribute Selectors</li></ul><h3 id="2-3-Pseudo-Class-Element">2.3 Pseudo Class &amp; Element</h3><h3 id="2-4-Inheritance-Selector-Weight">2.4 Inheritance &amp; Selector Weight</h3><h2 id="3-Layout">3 Layout</h2><h3 id="3-1-Box-Model">3.1 Box Model</h3><h4 id="Normal-Flow"><em>Normal Flow:</em></h4><h4 id="Others"><em>[Others]:</em></h4><h4 id="Table-Form"><em>Table &amp; Form:</em></h4><h3 id="3-2-Float">3.2 Float</h3><h3 id="3-3-Position">3.3 Position</h3><h3 id="3-4-Flex">3.4 Flex</h3><h2 id="4-Style">4 Style</h2><h3 id="4-1-Unit">4.1 Unit</h3><h4 id="Length-Unit"><em>Length Unit:</em></h4><h4 id="Color-Unit"><em>Color Unit:</em></h4><h3 id="4-2-Font">4.2 Font</h3><h3 id="4-3-Background">4.3 Background</h3><h3 id="4-4-Animation">4.4 Animation</h3><h3 id="4-5-Less">4.5 Less</h3>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/posts/cc1b9611.html"/>
      <url>/posts/cc1b9611.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview-Basic-Grammar">1 Overview &amp; Basic Grammar</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-Variable-Data-Type">1.2 Variable &amp; Data Type</h3><h3 id="1-3-Operator">1.3 Operator</h3><h3 id="1-4-Process-Control">1.4 Process Control</h3><h2 id="2-Object-Orientation">2 Object Orientation</h2><h3 id="2-1-Custom-Object">2.1 Custom Object</h3><h3 id="2-2-Function">2.2 Function</h3><h3 id="2-3-Theory-of-Object-Orientation">2.3 Theory of Object Orientation</h3><h3 id="2-4-Array">2.4 Array</h3><h2 id="3-Built-in-Object">3 Built-in Object</h2><h2 id="4-DOM-BOM">4 DOM &amp; BOM</h2><h2 id="5-JQuery">5 JQuery</h2>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/posts/2eec1551.html"/>
      <url>/posts/2eec1551.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><ul><li>Structure</li><li>Presentation</li><li>Behavior</li></ul><h3 id="1-2-Webpage-Framework">1.2 Webpage Framework</h3><h2 id="2-Concept-of-Entity-Tag">2 Concept of Entity &amp; Tag</h2><h3 id="2-1-Entity">2.1 Entity</h3><h3 id="2-2-Meta-Tag">2.2 Meta Tag</h3><h3 id="2-3-Semantic-Tag">2.3 Semantic Tag</h3><ul><li>Inline</li><li>Block</li></ul><h2 id="3-Simple-Semantic-Tags">3 Simple Semantic Tags</h2><h3 id="3-1-Inline-Elements">3.1 Inline Elements</h3><h3 id="3-2-Block-Elements">3.2 Block Elements</h3><h2 id="4-Table-Tags-Form-Tags">4 Table Tags &amp; Form Tags</h2>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/posts/bae4ff13.html"/>
      <url>/posts/bae4ff13.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install-Simple-Use">Install &amp; Simple Use</h3><h2 id="Configuration-Command-Persistence">Configuration &amp; Command &amp; Persistence</h2><h2 id="Cluster-Distributed">Cluster &amp; Distributed</h2><h3 id="Master-Slave-Cluster">Master &amp; Slave Cluster</h3><h3 id="Distributed-System">Distributed System</h3><h3 id="Lua">Lua</h3><h3 id="Distributed-Lock">Distributed Lock</h3>]]></content>
      
      
      <categories>
          
          <category> Data Persistence </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL</title>
      <link href="/posts/c24675b4.html"/>
      <url>/posts/c24675b4.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Installation-Use">1 Installation &amp; Use</h2><h3 id="1-1-Installation">1.1 Installation</h3><h3 id="1-2-MySQL-Service-Commands">1.2 MySQL Service &amp; Commands</h3><h2 id="2-SQL">2 SQL</h2><h3 id="2-1-DQL">2.1 DQL</h3><h3 id="2-2-DDL">2.2 DDL</h3><h3 id="2-3-DML">2.3 DML</h3><h3 id="2-4-DCL">2.4 DCL</h3><h2 id="3-Database-Objects">3 Database Objects</h2><h3 id="3-1-View">3.1 View</h3><h3 id="3-2-Procedure">3.2 Procedure</h3><h3 id="3-3-Function">3.3 Function</h3><h3 id="3-4-Trigger">3.4 Trigger</h3><h2 id="4-Index-Query-Optimization">4 Index &amp; Query Optimization</h2><h3 id="4-1-Index-Structure">4.1 Index Structure</h3><h3 id="4-2-Index-Use">4.2 Index Use</h3><h3 id="4-3-Query-Optimization">4.3 Query Optimization</h3><h2 id="5-Transaction-Lock">5 Transaction &amp; Lock</h2><h2 id="6-InnoDB-Storage-Engine">6 InnoDB Storage Engine</h2>]]></content>
      
      
      <categories>
          
          <category> Data Persistence </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DecorationNotes</title>
      <link href="/posts/c5ad38d2.html"/>
      <url>/posts/c5ad38d2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Note down all the modification based on <em>butterfly theme</em></p></blockquote><h3 id="Site-Basic-Info">Site Basic Info</h3><p>_config.yml:</p><ul><li><code>title</code></li><li><code>subtitle</code></li><li><code>description</code></li><li><code>keywords</code></li><li><code>author</code></li><li><code>language</code></li><li><code>timezone</code></li><li><code>deploy</code><ul><li><code>type</code></li><li><code>repo</code><ul><li><code>github</code></li><li><code>gitee</code></li></ul></li><li><code>branch</code></li></ul></li></ul><blockquote><p>Just delete <em>.deploy_git</em> folder when meeting deployment errors</p></blockquote><h3 id="hexo-abbrlink">hexo-abbrlink</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>_config.yml:</p><ul><li><code>permalink</code></li><li><code>abbrlink</code><ul><li><code>alg</code></li><li><code>rep</code></li></ul></li></ul><h3 id="hexo-generator-search">hexo-generator-search</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>_config.yml:</p><ul><li><code>search</code><ul><li><code>path</code></li><li><code>field</code></li><li><code>content</code></li><li><code>format</code></li><li><code>limit</code></li></ul></li></ul><p>_config.butterfly.yml</p><ul><li><code>local_search</code><ul><li><code>enable</code></li></ul></li></ul><h3 id="hexo-baidu-url-submit">hexo-baidu-url-submit</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>_config.yml:</p><ul><li><code>deploy</code><ul><li><code>type</code></li></ul></li><li><code>baidu_url_submit</code><ul><li><code>const</code></li><li><code>host</code></li><li><code>token</code></li><li><code>path</code></li></ul></li></ul><h3 id="hexo-helper-live2d">hexo-helper-live2d</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>_config.yml:</p><ul><li><code>live2d</code><ul><li><code>enable</code></li><li><code>scriptForm</code></li><li><code>tagMode</code></li><li><code>debug</code></li><li><code>model</code><ul><li><code>use</code></li></ul></li><li><code>display</code><ul><li><code>position</code></li><li><code>width</code></li><li><code>height</code></li><li><code>hOffset</code></li></ul></li><li><code>mobile</code><ul><li><code>show</code></li></ul></li></ul></li></ul><h3 id="SEO">SEO</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>_config.yml:</p><ul><li><p><code>url</code></p></li><li><p><code>sitemap</code></p><ul><li><code>path</code></li></ul></li><li><p><code>baidusitemap</code></p><ul><li><code>path</code></li></ul></li><li><p><code>feed</code></p><ul><li><code>type</code></li><li><code>path</code></li><li><code>limit</code></li></ul></li><li><p><code>rss</code></p></li><li><p><code>plugins</code></p></li></ul><p>_config.butterfly.yml:</p><ul><li><code>site_verification</code></li></ul><h3 id="hexo-bilibili-bangumi">hexo-bilibili-bangumi</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><p>_config.yml</p><ul><li><code>bangumi</code><ul><li><code>enable</code></li><li><code>path</code></li><li><code>vmid</code></li><li><code>title</code></li><li><code>quote</code></li><li><code>show</code></li><li><code>lazyload</code></li><li><code>loading</code></li><li><code>metaColor</code></li><li><code>color</code></li><li><code>webp</code></li><li><code>progress</code></li><li><code>extra_options</code><ul><li><code>key</code></li></ul></li></ul></li><li><code>cinema</code><ul><li><code>enable</code></li><li><code>path</code></li><li><code>vmid</code></li><li><code>title</code></li><li><code>quote</code></li><li><code>show</code></li><li><code>lazyload</code></li><li><code>loading</code></li><li><code>metaColor</code></li><li><code>color</code></li><li><code>webp</code></li><li><code>progress</code></li><li><code>extra_options</code><ul><li><code>key</code></li></ul></li></ul></li></ul><p>_config.butterfly.yml</p><ul><li><code>lazyload</code><ul><li><code>enable</code></li></ul></li><li><code>menu</code></li></ul><h3 id="hexo-tag-aplayer">hexo-tag-aplayer</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><p>_config.yml</p><ul><li><code>aplayer</code><ul><li><code>meting</code></li><li><code>asset_inject</code></li></ul></li></ul><p>_config.butterfly.yml</p><ul><li><code>aplayerInject</code><ul><li><code>enable</code></li><li><code>per_page</code></li></ul></li><li><code>inject</code><ul><li><code>bottom</code><ul><li><code>&lt;div class=&quot;aplayer&quot; ..&gt;&lt;/div&gt;</code></li></ul></li></ul></li></ul><h3 id="Gulp-Compressing">Gulp Compressing</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br><span class="line">npm install gulp -g --force</span><br><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install --save gulp-html-minifier-terser</span><br><span class="line">npm install gulp-clean-css --save-dev</span><br><span class="line">npm install --save-dev gulp-uglify</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line">npm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall --global gulp-cli</span><br><span class="line">npm uninstall gulp -g --force</span><br><span class="line">npm uninstall gulp-htmlclean --save-dev</span><br><span class="line">npm uninstall --save gulp-html-minifier-terser</span><br><span class="line">npm uninstall gulp-clean-css --save-dev</span><br><span class="line">npm uninstall --save-dev gulp-uglify</span><br><span class="line">npm uninstall --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line">npm uninstall --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><p>package.json:</p><ul><li><code>type</code></li></ul><p>gulpfile.js</p><p>sw-template.js</p><p>themes\butterfly\layout\includes\third-party\pwanotice.pug</p><p>themes\butterfly\layout\includes\additional-js.pug:</p><ul><li><code>theme.pwa.enable</code></li></ul><p>source\img\*</p><p>source\pwa\*</p><p>_config.butterfly.yml:</p><ul><li><code>pwa</code><ul><li><code>enable</code></li><li><code>manifest</code></li><li><code>apple_touch_icon</code></li><li><code>favicon_32_32</code></li><li><code>favicon_16_16</code></li><li><code>mask_icon</code></li><li><code>theme_color</code></li></ul></li></ul><h3 id="Background">Background</h3><p>_config.butterfly.yml:</p><ul><li><code>background</code></li><li><code>footer_bg</code></li></ul><h3 id="custom-css">custom.css</h3><p>source\css\custom.css</p><p>_config.butterfly.yml:</p><ul><li><code>inject</code><ul><li><code>head</code></li></ul></li><li><code>background</code></li></ul><blockquote><p>Just use <strong>CSS Selector</strong> in <em>custom.css</em> if willing to modify some components</p></blockquote><h3 id="Electric-Clock">Electric Clock</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-clock --save</span><br><span class="line"><span class="comment"># 卸载原版电子钟</span></span><br><span class="line">npm uninstall hexo-butterfly-clock</span><br><span class="line">npm install hexo-butterfly-clock-anzhiyu --save</span><br></pre></td></tr></table></figure><p>_config.butterfly.yml:</p><ul><li><code>electric_clock</code></li></ul><h3 id="Tags-page">Tags page</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p><code>type</code></p><h3 id="Categories-page">Categories page</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p><code>type</code></p><h3 id="Link-page">Link page</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="built_in">link</span></span><br></pre></td></tr></table></figure><p><code>type</code></p><p>source\_data\link.yml</p><h3 id="404">404</h3><p>_config.butterfly.yml:</p><ul><li><code>error_404</code><ul><li><code>enable</code></li></ul></li></ul><h3 id="Navigation-menu">Navigation menu</h3><p><a href="https://fontawesome.com/icons?from=io">https://fontawesome.com/icons?from=io</a></p><p>_config.butterfly.yml:</p><ul><li><code>menu</code><ul><li><code>Home</code></li><li><code>Categories</code></li><li><code>Tags</code></li><li><code>Archives</code></li><li><code>Links</code></li></ul></li></ul><h3 id="hide-sidebar-menu-child">hide_sidebar_menu_child</h3><h3 id="Code-Blocks">Code Blocks</h3><p>_config.butterfly.yml:</p><ul><li><code>highlight_theme</code></li><li><code>highlight_copy</code></li><li><code>highlight_lang</code></li><li><code>highlight_shrink</code></li><li><code>highlight_height_limit</code></li></ul><h3 id="Social-Contact-Icon">Social Contact Icon</h3><p><a href="https://fontawesome.com/icons?from=io">https://fontawesome.com/icons?from=io</a></p><p>_config.butterfly.yml:</p><ul><li><code>social</code><ul><li><code>fab fa-github</code></li><li><code>fas fa-envelope</code></li><li><code>fa-solid fa-blog</code></li></ul></li></ul><h3 id="Articles-on-Homepage">Articles on Homepage</h3><p><code>index_post_content</code></p><ul><li><code>method</code></li></ul><p><code>index_generator</code></p><ul><li><code>per_page</code></li><li><code>order_by</code></li></ul><h3 id="Top-Image">Top Image</h3><p>_config.butterfly.yml:</p><ul><li><code>disable_top_img</code></li><li><code>index_img</code></li><li><code>default_top_img</code></li></ul><h3 id="Avatar">Avatar</h3><p>_config.butterfly.yml:</p><ul><li><code>avatar</code><ul><li><code>img</code></li><li><code>effect</code></li></ul></li></ul><h3 id="Article-Cover">Article Cover</h3><p>_config.butterfly.yml:</p><ul><li><code>cover</code><ul><li><code>position</code></li><li><code>default_cover</code></li></ul></li></ul><h3 id="Article-Meta">Article Meta</h3><p>_config.butterfly.yml:</p><ul><li><code>post_meta</code><ul><li><code>page</code><ul><li><code>date_format</code></li></ul></li><li><code>post</code><ul><li><code>date_format</code></li></ul></li></ul></li></ul><h3 id="Article-Copyright">Article Copyright</h3><p>_config.butterfly.yml:</p><ul><li><code>post_copyright</code><ul><li><code>author_href</code></li></ul></li></ul><h3 id="Article-Reward">Article Reward</h3><p>_config.butterfly.yml:</p><ul><li><code>reward</code><ul><li><code>enable</code></li><li><code>QR_code</code></li></ul></li></ul><h3 id="Article-Catalogue">Article Catalogue</h3><p>_config.butterfly.yml:</p><ul><li><code>toc</code><ul><li><code>number</code></li><li><code>style_simple</code></li></ul></li></ul><h3 id="Related-Article">Related Article</h3><p>_config.butterfly.yml:</p><ul><li><code>related_post</code><ul><li><code>date_type</code></li></ul></li></ul><h3 id="Article-Anchor">Article Anchor</h3><p>_config.butterfly.yml:</p><ul><li><code>anchor</code></li></ul><h3 id="Outdated-Article-Notice">Outdated Article Notice</h3><p>_config.butterfly.yml:</p><ul><li><code>noticeOutdate</code></li></ul><h3 id="Article-Edit">Article Edit</h3><p>_config.butterfly.yml:</p><ul><li><code>post_edit</code><ul><li><code>enable</code></li></ul></li></ul><h3 id="Image-Description">Image Description</h3><p>_config.butterfly.yml:</p><ul><li><code>photofigcaption</code></li></ul><h3 id="About-Copying">About Copying</h3><p>_config.butterfly.yml:</p><ul><li><code>copy</code><ul><li><code>copyright</code><ul><li><code>enable</code></li><li><code>limit_count</code></li></ul></li></ul></li></ul><h3 id="Footer">Footer</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-footer-beautify --save</span><br></pre></td></tr></table></figure><p>_config.butterfly.yml:</p><ul><li><code>footer</code><ul><li><code>owner</code><ul><li><code>since</code></li></ul></li><li><code>custom_text</code></li><li><code>copyright</code></li></ul></li><li><code>footer_beautify</code></li></ul><h3 id="Bottom-Right-Button">Bottom Right Button</h3><p>_config.butterfly.yml:</p><ul><li><code>translate</code><ul><li><code>enable</code></li></ul></li><li><code>darkmode</code><ul><li><code>autoChangeMode</code></li></ul></li></ul><h3 id="Sidebar">Sidebar</h3><p>_config.butterfly.yml:</p><ul><li><code>aside</code><ul><li><code>position</code></li><li><code>display</code></li><li><code>card_author</code></li><li><code>card_announcement</code></li><li><code>card_categories</code></li><li><code>card_tags</code></li><li><code>card_archives</code></li></ul></li></ul><h3 id="Markdown-Math-Formula">Markdown Math Formula</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save <span class="comment"># 如果有安装这个的话，卸载</span></span><br><span class="line">npm un hexo-renderer-kramed --save <span class="comment"># 如果有安装这个的话，卸载</span></span><br><span class="line"></span><br><span class="line">npm i hexo-renderer-markdown-it --save <span class="comment"># 需要安装这个渲染插件</span></span><br><span class="line">npm install @neilsustc/markdown-it-katex --save <span class="comment">#需要安装这个katex插件</span></span><br></pre></td></tr></table></figure><p>_config.butterfly.yml:</p><ul><li><code>mathjax</code></li><li><code>katex</code></li></ul><p>_config.yml</p><ul><li><code>markdown</code><ul><li><code>plugins</code></li></ul></li></ul><h3 id="Background-Effects">Background Effects</h3><p>_config.butterfly.yml:</p><ul><li><code>Background effects</code></li></ul><h3 id="Mouse-click-effects">Mouse click effects</h3><p>_config.butterfly.yml:</p><ul><li><code>Background effects</code><ul><li><code>enable</code></li></ul></li></ul><h3 id="Title-Beautifying">Title Beautifying</h3><p>_config.butterfly.yml:</p><ul><li><code>beautify</code><ul><li><code>field</code></li></ul></li></ul><h3 id="Font">Font</h3><p>_config.butterfy.yml:</p><ul><li><code>font</code><ul><li><code>global-font-size</code></li><li><code>font-family</code></li><li><code>code-font-family</code></li></ul></li></ul><h3 id="Website-Subtitle">Website Subtitle</h3><p>_config.butterfy.yml:</p><ul><li><code>subtitle</code><ul><li><code>enable</code></li><li><code>source</code></li><li><code>sub</code></li></ul></li></ul><h3 id="Loading-Animation">Loading Animation</h3><p>_config.butterfy.yml:</p><ul><li><code>preloader</code></li></ul><h3 id="Word-Count">Word Count</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save </span><br></pre></td></tr></table></figure><p>_config.butterfy.yml:</p><ul><li><code>wordcount</code></li></ul><h3 id="Prefetch">Prefetch</h3><p>_config.butterfy.yml:</p><ul><li><code>instantpage</code></li></ul><h3 id="Space-Between-Chinese-Character-and-English-Character">Space Between Chinese Character and English Character</h3><p>_config.butterfy.yml:</p><ul><li><code>pangu</code><ul><li><code>enable</code></li></ul></li></ul><h3 id="Pjax">Pjax</h3><p>_config.butterfy.yml:</p><ul><li><code>pjax</code><ul><li><code>enable</code></li></ul></li></ul><h3 id="hexo-butterfly-swiper">hexo-butterfly-swiper</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper-anzhiyu --save</span><br><span class="line">npm uninstall hexo-butterfly-swiper-anzhiyu --save</span><br><span class="line">npm install hexo-butterfly-swiper-anzhiyu-pro --save</span><br><span class="line">npm uninstall hexo-butterfly-swiper-anzhiyu-pro --save</span><br><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><p>_config.butterfy.yml:</p><ul><li><code>swiper</code><ul><li><code>custom_css</code></li></ul></li><li><code>pjax</code><ul><li><code>enable</code></li></ul></li></ul><p>post toc:</p><ul><li><code>swiper_index</code>: 1-15</li></ul><h3 id="Double-Row">Double Row</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><p>_config.yml:</p><ul><li><code>butterfly_article_double_row</code></li><li><code>per_page</code></li></ul><h3 id="Category-Card">Category Card</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-categories-card --save</span><br></pre></td></tr></table></figure><p>_config.butterfly.yml:</p><ul><li>categoryBar</li></ul><p>hexo-butterfly-categories-card/index.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取所有分类</span></span><br><span class="line"><span class="keyword">var</span> categories_list= hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;categories&#x27;</span>).<span class="property">data</span>;</span><br><span class="line"><span class="keyword">var</span> categories_select = config.<span class="property">select</span>; <span class="comment">// added</span></span><br><span class="line"><span class="keyword">var</span> categories_message= config.<span class="property">message</span>;</span><br><span class="line"><span class="comment">//声明一个空数组用来存放合并后的对象</span></span><br><span class="line"><span class="keyword">var</span> new_categories_list = [];</span><br><span class="line"><span class="comment">// 合并分类属性和新添加的封面描述属性</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;categories_list.<span class="property">length</span>;i++)&#123; <span class="comment">// modified</span></span><br><span class="line">    <span class="keyword">var</span> a = categories_list[i]</span><br><span class="line">    <span class="keyword">let</span> idx; <span class="comment">// added</span></span><br><span class="line">    <span class="keyword">if</span> ((idx = categories_select.<span class="title function_">indexOf</span>(a.<span class="property">name</span>)) === -<span class="number">1</span>) <span class="keyword">continue</span>; <span class="comment">// modified</span></span><br><span class="line">    <span class="keyword">var</span> b = categories_message[idx]; <span class="comment">// modified</span></span><br><span class="line">    new_categories_list[idx] = <span class="title class_">Object</span>.<span class="title function_">assign</span>(a,b) <span class="comment">// modified</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>custom.css</p><h3 id="Category-page">Category page</h3><p>layout/category.pug:</p><ul><li><code>article.source.splie('/')[1]</code></li><li><code>page.category.replace(/\s*/g, ''))</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  if theme.category_ui == &#x27;index&#x27;</span><br><span class="line">    include ./includes/mixins/post-ui.pug</span><br><span class="line">    #recent-posts.recent-posts.category_ui</span><br><span class="line">      +postUI</span><br><span class="line">      include includes/pagination.pug</span><br><span class="line">  else</span><br><span class="line">    include ./includes/mixins/article-sort.pug</span><br><span class="line">    #category</span><br><span class="line">      .article-sort-title= _p(&#x27;page.category&#x27;) + &#x27; - &#x27; + page.category</span><br><span class="line">      +articleSort(site.posts.filter((post)=&gt;post.source.split(&#x27;/&#x27;)[1]===page.category.replace(/\s*/g, &#x27;&#x27;)).sort(&#x27;updated&#x27;, -1))</span><br><span class="line">      //include includes/pagination.pug</span><br></pre></td></tr></table></figure><p>layout/includes/mixins/article-sort.pug:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mixin articleSort(posts)</span><br><span class="line">  .article-sort</span><br><span class="line">    // - var year</span><br><span class="line">    - posts.each(function (article) &#123;</span><br><span class="line">      // - let tempYear = date(article.updated, &#x27;YYYY&#x27;)</span><br><span class="line">      - let no_cover = article.cover === false || !theme.cover.archives_enable ? &#x27;no-article-cover&#x27; : &#x27;&#x27;</span><br><span class="line">      - let title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line">      //if tempYear !== year</span><br><span class="line">      //  - year = tempYear</span><br><span class="line">      //  .article-sort-item.year= year</span><br><span class="line">      .article-sort-item(class=no_cover)</span><br><span class="line">        if article.cover &amp;&amp; theme.cover.archives_enable</span><br><span class="line">          a.article-sort-item-img(href=url_for(article.path) title=title)</span><br><span class="line">            img(src=url_for(article.cover) alt=title onerror=`this.onerror=null;this.src=&#x27;$&#123;url_for(theme.error_img.post_page)&#125;&#x27;`)</span><br><span class="line">        .article-sort-item-info</span><br><span class="line">          .article-sort-item-time</span><br><span class="line">            i.fas.fa-history</span><br><span class="line">            time.post-meta-date-updated(datetime=date_xml(article.updated) title=_p(&#x27;post.updated&#x27;) + &#x27; &#x27; + full_date(article.updated))= date(article.updated, config.date_format)</span><br><span class="line">          a.article-sort-item-title(href=url_for(article.path) title=title)= title</span><br><span class="line">    - &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Life Sharing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life Sharing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang</title>
      <link href="/posts/a8b02095.html"/>
      <url>/posts/a8b02095.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-快速入门">1 快速入门</h2><h3 id="1-1-安装">1.1 安装</h3><p>下载地址：</p><ul><li>go官网：<a href="https://golang.org/dl/">https://golang.org/dl/</a></li><li>go官方镜像：<a href="https://golang.google.cn/dl/">https://golang.google.cn/dl/</a></li></ul><p>终端命令：</p><ul><li><p>go verion</p></li><li><p>查看go环境：go env</p><blockquote><p>Go1.11版本之后无需手动配置环境变量</p></blockquote></li></ul><p>go语言项目：</p><ul><li><p>使用go mod管理项目，可以在你磁盘的任何位置新建一个项目。</p><blockquote><p>不需要非得把项目放到GOPATH指定目录下，Go1.13以后可以彻底不要GOPATH了</p></blockquote></li></ul><blockquote><p>修改GOPATH：</p><ol><li>新建系统环境变量GOPATH，设置为指定的路径</li><li>删除用户变量中的GOPATH和PATH中的%USERPROFILE%\go\bin</li><li>确保系统环境变量中有配置*\go\bin</li></ol></blockquote><h3 id="1-2-基础代码编写">1.2 基础代码编写</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main <span class="comment">// 定义包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span> <span class="comment">// import 引入fmt包</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123; <span class="comment">// 与包同名，为入口函数</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><ul><li>语句结尾<strong>不需要加分号</strong></li><li>通过换行区分语句，<strong>不同语句不能写在同一行</strong></li><li>格式化代码：go文件会在保存后自动格式化</li></ul></blockquote><p><em><code>fmt</code>包的常用方法</em>：</p><ul><li><code>fmt.Println(&quot;xxx&quot;, &quot;yyy&quot;, ...)</code>：输出若干个字符串，<strong>中间用一个空格连接</strong>，并在最后<strong>换行</strong></li><li><code>fmt.Print(&quot;xxx&quot;, &quot;yyy&quot;, ...)</code>：<strong>连接</strong>并输出若干个字符串</li><li><code>fmt.Printf(&quot;format string&quot;, format, ...)</code>：格式化输出<ul><li><code>%v</code>：<strong>数据值</strong></li><li><code>%d</code>：整型<strong>数据</strong></li><li><code>%T</code>：输出<strong>数据类型</strong></li></ul></li></ul><p><em>声明和定义变量</em>：</p><blockquote><p>在go语言中<u>变量</u><strong>定义后必须使用</strong>，不然报错；</p></blockquote><ul><li><p>:star:<code>var 变量名 [类型] = 表达式</code></p><ul><li><p><code>类型</code>可以省略，自动推导；但声明时如果不赋值，则<strong>必须指定类型</strong></p></li><li><p>一行声明或定义多个变量：</p><ul><li><p>可以一行<strong>声明或定义</strong><u>同类型</u>的多个变量：<code>var id1, id2 type = exp1, exp2</code></p></li><li><p>一行<strong>定义</strong>类型可以不一致的多个变量：<code>var id1, id2 = exp1, exp2</code></p></li></ul></li><li><p>批量<strong>声明或定义</strong><u>类型可以不一致</u>的变量</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    变量名 [类型] = 表达式</span><br><span class="line">    变量名 类型</span><br><span class="line">    id1, id2 [类型] = exp1, exp1</span><br><span class="line">    id1, id2 类型</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p><code>类型</code>可以省略，自动推导，但声明时如果不赋值，则<strong>必须指定类型</strong></p></blockquote></li></ul></li><li><p>:star:<code>变量名1, 变量名2, 变量名3 := 表达式1, 表达式2, 表达式3</code></p><blockquote><p>这叫作“短变量声明法”；</p><p>类型自动推导，且多个变量同时定义时<u>类型可以不一致</u></p><p>短变量只能用于定义<strong>局部变量</strong>，不能用于全局变量的定义；</p><blockquote><p>这是因为，函数外的每个语句都必须以关键字开始（var、const、func 等）</p></blockquote></blockquote><blockquote><p><strong><u>匿名变量</u></strong>：多重赋值时忽略某个值，占位</p><p><code>_, xxx = foo(...)</code></p><blockquote><p>匿名变量不占用<strong>命名空间</strong>，不会<strong>分配内存</strong>，所以匿名变量之间不存在重复声明</p></blockquote></blockquote></li></ul><p><em>定义常量</em>：</p><blockquote><p>和<code>var</code>的用法基本一致，不再赘述相同的部分（当然常量中没有“短变量声明法”）</p></blockquote><ul><li><p><code>const 变量名 [类型] = 表达式</code></p><blockquote><p>常量必须在声明的同时<strong>赋值</strong></p></blockquote></li><li><p>一行定义多个常量（与变量用法一致）</p></li><li><p>批量定义常量：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">常量名 [类型] = 表达式</span><br><span class="line">    常量名 [类型]</span><br><span class="line">    常量名<span class="number">1</span>, 常量名<span class="number">2</span> = exp1, exp2</span><br><span class="line">    常量名<span class="number">1</span>, 常量名<span class="number">2</span> [类型]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>const 同时声明多个常量时，如果<strong>省略</strong>了值则表示和<strong>上面一行中同一列的值</strong>相同，所以这样也必须保证**<u>列对齐</u>**（变量就不能这样省略）</p></blockquote><blockquote><p>常量计数器<code>iota</code>：在批量定义常量时自动累加</p><ul><li>每次<code>const</code>出现时，都会让iota初始化为0，然后自增长</li><li><code>iota</code>的值可以跳过</li><li>也可以在同一行中使用<code>iota</code></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="literal">iota</span> <span class="comment">// a=0</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    b = <span class="literal">iota</span> <span class="comment">//b=0</span></span><br><span class="line">    c <span class="comment">//c=1</span></span><br><span class="line">    d <span class="comment">//2</span></span><br><span class="line">    e = <span class="literal">iota</span> <span class="comment">//3</span></span><br><span class="line">    f = <span class="number">100</span></span><br><span class="line">    g = <span class="literal">iota</span> <span class="comment">//5</span></span><br><span class="line">    h, i = <span class="literal">iota</span>, <span class="literal">iota</span> <span class="comment">//6, 6</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></blockquote></li></ul><p><em>注释</em>：</p><ul><li>单行注释：<code>//</code></li><li>多行注释：<code>/* */</code></li></ul><h2 id="2-基础语法">2 基础语法</h2><h3 id="2-1-基本数据类型">2.1 基本数据类型</h3><p><em>整型</em>：</p><ul><li><p>有符号整型：</p><p><code>int8 int16 int32 int64</code></p></li><li><p>无符号整型：</p><p><code>uint8 uint16 uint32 uint64</code></p><blockquote><p>赋值时不能是<strong>负数</strong></p></blockquote></li><li><p>特殊规定的整型：</p><ul><li><code>int</code>：32 位操作系统上就是<code>int32</code>，64 位操作系统上就是<code>int64</code>。这也是根据字面量<strong>自动推导</strong>出来的类型</li><li><code>uint</code>：32 位操作系统上就是<code>uint32</code>，64 位操作系统上就是<code>uint64</code></li><li><code>uintptr</code>：无符号整型，用于存放一个<strong>指针</strong></li></ul><blockquote><p>实际项目中整数类型、切片、<code>map</code>的元素数量等都可以用int 来表示。在涉及到二进制传输、为了保持文件的结构不会受到不同编译目标平台字节长度的影响，不要使用<code>int</code>和<code>uint</code></p></blockquote><blockquote><p><code>unsafe.Sizeof(var)</code>是<code>unsafe</code>包的一个函数，可以返回整型变量占用的<strong>字节数</strong></p></blockquote></li><li><p>不同长度类型的转换：<code>int8(numVar) int32(numVar) int(numVar)</code></p><ul><li>长度向更短转换时会<strong>截断取低位</strong></li></ul></li><li><p>数字字面量</p><ul><li>二进制：<code>0b11010</code>，<code>%b</code></li><li>八进制：<code>0o521</code>,<code>%o</code></li><li>十进制：<code>996</code>，<code>%d</code></li><li>十六进制：<code>0xc9</code>，<code>%x</code></li></ul><blockquote><p><code>%v</code>是自动推导的输出</p></blockquote></li></ul><hr><p><em>浮点型</em>：</p><blockquote><p>IEEE754</p></blockquote><ul><li><code>float32 float64</code></li><li><code>float</code>：32 位操作系统上就是<code>float32</code>，64 位操作系统上就是<code>float64</code>。这也是根据字面量<strong>自动推导</strong>出来的类型</li><li>格式化输出<ul><li><code>%v</code></li><li><code>%f</code>：默认保留6位小数。<code>%.2f</code>为保留两位小数</li></ul></li><li>科学计数法：<code>3.14e2</code>、<code>3.14E3</code>、<code>3.14e-4</code>、<code>0.0314E-5</code></li><li>精度丢失问题<ul><li>可以使用第三方包解决：<a href="https://github.com/shopspring/decimal">https://github.com/shopspring/decimal</a></li></ul></li><li>类型转换<ul><li><code>float64(numVar) float32(numVar)</code></li><li><code>float</code>和<code>int</code>也可以互相转换，截取至整数位，其他同理</li></ul></li></ul><hr><p><em>布尔型</em>：</p><ul><li><code>bool</code>，只有<code>true</code>和<code>false</code>两个值<ul><li>布尔类型变量的默认值为<code>false</code></li><li>布尔型无法参与<strong>数值运算</strong>，也无法与其他<strong>类型</strong>进行转换</li><li>格式化输出为<code>%t</code>，就是字符串<code>“true”</code>或者<code>“false”</code></li></ul></li></ul><hr><p><em>字符串</em>：</p><ul><li><p><code>string</code>，<code>“xxx”</code></p><ul><li>Go语言中的字符串以<strong>原生数据类型</strong>出现</li><li>Go语言里的字符串的内部实现使用<strong>UTF-8编码</strong></li></ul></li><li><p>转义符</p><table><thead><tr><th>转义符</th><th>换行符</th></tr></thead><tbody><tr><td><code>\r</code></td><td>回车</td></tr><tr><td><code>\n</code></td><td>换行符</td></tr><tr><td><code>\t</code></td><td>制表符</td></tr><tr><td><code>\'</code></td><td>单引号</td></tr><tr><td><code>\&quot;</code></td><td>双引号</td></tr><tr><td><code>\\</code></td><td>反斜杠</td></tr></tbody></table></li><li><p>多行字符串：使用反引号``</p><ul><li>反引号间换行将被作为字符串中的换行，但是所有的转义字符均无效，文本将会<strong>原样输出</strong>。</li></ul></li><li><p>常用操作</p><ul><li><p><code>len(str)</code></p><blockquote><p>注意一个utf8汉字占用三个字节；</p><p>不能用<code>unsafe.Sizeof</code>看字符串的长度，没有意义的</p></blockquote></li><li><p>拼接字符串：</p><ul><li><code>+</code>：两边的数据类型都必须是<strong>字符串</strong></li><li><code>fmt.Sprint(&quot;xxx&quot;, yyy, ...)</code>系列，会直接返回结果，而不是输出到控制台，所以可以用来拼接字符串</li></ul></li><li><p><strong>分割</strong>字符串：<code>strings.Split(s, sep string)</code>，根据<code>sep</code>将<code>s</code>拆分成切片</p><blockquote><p>需要引入<code>strings</code>包</p></blockquote></li><li><p><strong>合并</strong>字符串：<code>strings.Join(elems []string, sep string)</code>，用<code>sep</code>将<code>elems</code>切片合并成字符串</p></li><li><p>子串</p><ul><li><p>截取：<code>str[begin:end]</code></p><blockquote><p><code>begin</code>或<code>end</code>可以省略</p></blockquote></li><li><p>子串出现的位置：</p><p><code>strings.Index(s, substr string)</code></p><p><code>strings.LastIndex(s, substr string)</code></p></li><li><p>是否包含子串：<code>strings.contains(s, substr string)</code></p></li><li><p>是否有<strong>前后缀</strong>：</p><p><code>strings.HasPrefix(s, prefix string)</code></p><p><code>strings.HasSuffix(s, suffix string)</code></p></li></ul></li><li><p>转换为字符串：<code>string(var)</code></p></li></ul></li></ul><hr><p><em><strong>字符</strong>与字符串</em>：</p><ul><li>本质是<code>int</code>类型，<code>%v</code>输出时为ASCII码值或utf8编码值，<code>%c</code>输出为字符原样</li><li><code>uint6</code>/<code>byte</code>类型：代表了ASCII码的一个字符，<u>ASCII码表中有</u>的<strong>字符</strong>默认用这种类型</li><li><code>rune</code>/<code>int32</code>类型：代表一个UTF-8字符，<u>ASCII码表中没有</u>的<strong>字符</strong>默认用这种类型</li><li>遍历字符串：<ul><li><code>for i</code>：以<code>byte</code>类型遍历字符串，字符串可以直接用下标索引访问<code>str[i]</code>，但不能修改（can not assign）</li><li><code>for range</code>：以<code>rune</code>类型遍历字符串</li></ul></li><li>修改字符串：转换成切片，用下标索引的方式修改，再用<code>string(arr)</code>转换回来<ul><li>只有ASCII码表中的字符的字符串：转换为<code>[]byte(str)</code></li><li>含有ASCII码表以外字符的字符串：转换为<code>[]rune(str)</code></li></ul></li></ul><hr><p><em>基本数据类型转换</em>：</p><ul><li><p>Go语言中只有<strong>强制类型转换</strong>，没有隐式类型转换；类型不一致的数据无法进行基本运算</p></li><li><p>数值型的转换：<code>int()</code>、<code>float()</code></p></li><li><p>字符串与其他类型的转换：</p><ul><li><p><code>fmt.Sprint</code>系列</p></li><li><p><code>strconv</code>包</p><ul><li><p><code>strconf.FormatInt(i int64, base int)</code></p><blockquote><p>注意必须是<code>int64</code>类型，<code>int</code>类型都不可以；<code>base</code>表示的是进制</p></blockquote></li><li><p><code>strconf.FormatInt(f float64, fmt byte, prec int, bitSize int)</code></p><blockquote><p>参数1：要转换的值</p><p>参数2：格式化类型，‘f’（-ddd.dddd）、‘b’（-ddddp±ddd，指数为二进制）、‘e’（-d.dddde±dd，十进制指数）、‘E’（-d.ddddE±dd，十进制指数）、‘g’（指数很大时用’e’格式，否则’f’格式）、‘G’（指数很大时用’E’格式，否则’f’格式）。</p><p>参数3：保留的小数点个数，-1表示不对小数点格式化</p><p>参数4：格式化的类型：64或者32</p></blockquote></li><li><p><code>intVar, err := strconv.ParseInt(s string, base int, bitSize int)</code></p><blockquote><p>转换失败返回0；<code>err</code>代表转换失败，可以用<code>_</code>忽略</p></blockquote></li><li><p><code>floatVal, err := strconv.ParseFloat(s string, bitSize int)</code></p></li></ul></li></ul></li></ul><h3 id="2-2-运算符">2.2 运算符</h3><p><em>算术运算符</em>：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">相加</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">相减</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">相乘</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">相除</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">取余</td></tr></tbody></table><ul><li><code>++</code>和<code>--</code>在Go中代表一条独立的语句，必须放在变量后面，只能独立使用，不能和其他运算符和语句一起用</li><li>注意数据类型必须完全一致才能运算，<code>int64</code>和<code>int32</code>都不能一起运算</li><li>对于除法，如果操作数都是整数，则结果为整数（截断小数部分）</li></ul><p><em>关系运算符</em>：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">检查两个值是否相等</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">检查两个值是否不相等</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">检查左边值是否大于右边值</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">检查左边值是否大于等于右边值</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">检查左边值是否小于右边值</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">检查左边值是否小于等于右边值</td></tr></tbody></table><p><em>逻辑运算符</em>：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">逻辑AND运算符</td></tr><tr><td style="text-align:center">||</td><td style="text-align:center">逻辑OR运算符</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">逻辑NOT运算符</td></tr></tbody></table><ul><li>逻辑运算符具有短路性质</li></ul><p><em>赋值运算符</em>：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">简单的赋值运算符，将一个表达式的值赋给一个左值</td></tr><tr><td style="text-align:center">+=</td><td style="text-align:center">相加后再赋值</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">相减后再赋值</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">相乘后再赋值</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">相除后再赋值</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">求余后再赋值</td></tr></tbody></table><p>位运算：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">&amp;</td><td style="text-align:center">参与运算的两数各对应的二进位相与</td></tr><tr><td style="text-align:center">|</td><td style="text-align:center">参与运算的两数各对应的二进位相或</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">参与运算的两数各对应的二进位相异或</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td style="text-align:center">左移n位</td></tr><tr><td style="text-align:center">&gt;&gt;</td><td style="text-align:center">算术右移n位</td></tr></tbody></table><h3 id="2-3-流程控制">2.3 流程控制</h3><p><em><code>if</code>条件判断</em>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> exp1 &#123;</span><br><span class="line">    stmt1</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> exp2 &#123;</span><br><span class="line">    stmt2</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    stmt3</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Go语言规定与<code>if</code>匹配的左括号<code>&#123;</code>必须与<code>if</code> 和表达式放在同一行，<code>&#123;</code>放在其他位置会触发编译错误。同理，与<code>else</code>匹配的<code>&#123;</code>也必须与<code>else</code>写在同一行，<code>else</code>也必须与上一个<code>if</code>或<code>else if</code>右边的大括号在同一行。而且<code>if..else</code>的大括号<strong>都不能省略</strong>，无论其中是否只有一条语句。</p></li><li><p>特殊写法：<code>if :=assginStmt; exp &#123;...&#125;</code></p><blockquote><p>也就是说，可以在<code>if</code>表达式之前添加一个赋值语句，再根据变量值进行判断；注意必须是<code>:=</code>赋值，<code>var</code>和其他语句都不行</p><p>在这种情况下，<code>stmt</code>会位于**<code>if…else…</code>内部的作用域**</p></blockquote></li></ul><hr><p><em><code>for</code>循环</em>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[:=assginStmt]</span><br><span class="line"><span class="keyword">for</span> [:=assginStmt]; exp; eachEndStmt &#123;</span><br><span class="line">    stmt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>初始化赋值语句可以写在<code>for</code>外面，然后<strong>第一个分号</strong>前空着</p></li><li><p>注意：Go语言中是没有<code>while</code>语句的，我们可以通过<code>for</code>代替</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> exp &#123;</span><br><span class="line">    stmt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>无限循环</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">    stmt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p><em><code>for range</code>键值循环：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, val := <span class="keyword">range</span> enumerate &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数组、切片、字符串返回<strong>索引和值</strong></li><li><code>map</code>返回<strong>键和值</strong></li><li>通道（<code>channel</code>）只返回<strong>通道内的值</strong></li></ul><hr><p><em><code>switch case</code></em>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> [:=assginStmt; ]var_ &#123;</span><br><span class="line"><span class="keyword">case</span> val1, val2:</span><br><span class="line">    stmt</span><br><span class="line">    [<span class="keyword">break</span>]</span><br><span class="line"><span class="keyword">case</span> val3, val33, val333:</span><br><span class="line">    stmt</span><br><span class="line"><span class="keyword">case</span> val4:</span><br><span class="line">    stmt</span><br><span class="line">    [<span class="keyword">fallthrough</span>]</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    stmt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Go语言中每个<code>case</code>语句中可以不写<code>break</code>，不会出现穿透的现象。如果想要穿透，可以在一个<code>case</code>的末尾加上一行<code>fallthrough</code>，穿透一层</p></li><li><p><code>case</code>分支上还可以使用表达式，表达式和值可以混用？？：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> exp1:</span><br><span class="line">    stmt</span><br><span class="line"><span class="keyword">case</span> exp2:</span><br><span class="line">    stmt</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    stmt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>此时<code>switch</code>后不需要接标识符</li></ul></li></ul><hr><p><em><code>break continue goto</code></em>：</p><ul><li><p><code>break</code>：</p><ul><li><p>用于循环语句中<strong>跳出<u>当前</u>整个循环</strong></p></li><li><p>在<strong>多重循环</strong>中，可以用标号<code>label</code>标出想<code>break</code>的循环：<code>break label</code></p><blockquote><p>在语句的前一行左顶格加上一行<code>labelName:</code>即可用给该语句打上标签</p></blockquote></li></ul></li><li><p><code>continue</code>：只在<code>for</code>循环中使用，结束本次循环，开始下一次循环，也可以<code>continue label</code></p></li><li><p><code>goto</code>：语句通过<code>label</code>进行代码间的<strong>无条件跳转</strong></p></li></ul><h2 id="3-Array-Slice-Map">3 Array &amp; Slice &amp; Map</h2><h3 id="3-1-数组">3.1 数组</h3><p><em>数组的声明和定义</em>：</p><ul><li><p>声明数组，元素为默认值：<code>var arr [len]type</code></p><ul><li><p><code>type</code>：数组中元素<strong>数据类型</strong></p></li><li><p><code>len</code>：数组<strong>长度</strong></p><blockquote><p>长度不同，类型也不同；</p></blockquote></li></ul></li><li><p>定义数组：</p><ul><li><p><code>var arr = [len]type&#123;elem1, elem2, others&#125;</code></p></li><li><p><code>arr := [len]type&#123;elem1, elem2, others&#125;</code></p></li><li><p><code>arr := [len]type&#123;idx1: elem1, idx2: elem2, idx3: elem3, others&#125;</code></p><blockquote><p>指定索引，中间未指明的是默认值</p></blockquote></li></ul><blockquote><p>数组长度可以自动推断：<code>var arr = [...]type&#123;elems&#125;</code>，这个<code>...</code>就是<strong>三个点的语法</strong></p></blockquote></li></ul><p><em>访问数组</em>：</p><ul><li><p>格式化输出：<code>%v</code></p></li><li><p>获取或修改数组元素：<code>arr[idx]</code></p></li><li><p>截取数据：<code>arr[begin:end]</code></p></li><li><p>获得数组长度：<code>len(arr)</code></p></li><li><p>遍历：</p><ul><li><code>for i := 0; i &lt; len(arr); i++ &#123;...&#125;</code></li><li><code>for idx, val := range arr &#123;...&#125;</code></li></ul></li><li><p><strong>数组名不是引用</strong>，数组互相赋值时会直接复制一个新数组</p><blockquote><p>Go中**基本数据类型和<u>数组</u>**都是值类型</p></blockquote></li></ul><p><em>多维数组</em>：</p><ul><li><p><code>var arr [len1][len2]type</code></p></li><li><p><code>var arr = [len1][len2]type&#123; &#123;...&#125;,&#123;...&#125;,... &#125;</code></p><blockquote><p>长度自动推导：<code>var arr = [...][len2]type&#123; &#123;...&#125;,&#123;...&#125;,... &#125;</code></p><blockquote><p>注意，如果是二维数组，第二个维度的长度不能省略</p></blockquote></blockquote></li></ul><h3 id="3-2-切片">3.2 切片</h3><ul><li><p>切片是有<strong>相同类型</strong>元素的<strong>可变长</strong>序列</p></li><li><p>引用数据类型</p><blockquote><p>引用数据类型必须先<strong>分配好地址空间</strong>才能访问</p></blockquote></li><li><p>切片的本质是对底层数组的封装，包括底层数组的指针、切片的长度、切片的容量</p></li></ul><p><em>切片声明与定义</em>：</p><ul><li><p>声明：<code>var slc []type</code></p><blockquote><p>切片默认值为<code>nil</code>，因为是引用类型</p></blockquote></li><li><p>定义：</p><ul><li><p><code>var slc = []type&#123;elems&#125;</code></p></li><li><p><code>var slc = []type&#123;idx1: elem1, idx2: elem2, idx3: elem3, others&#125;</code></p></li><li><p>:star:基于数组定义切片：<code>arr[startIdx:endIdxExclude]</code></p><blockquote><p><code>startIdx</code>、<code>startIdx:endIdxExclude</code>可以省略，代表取到头</p></blockquote></li><li><p>基于切片定义切片：类似</p></li><li><p>基于字符串定义切片：<code>[]byte(str)</code>和<code>[]rune(str)</code></p><blockquote><p>前面字符串的部分讲过</p></blockquote></li><li><p>:star:<code>make([]T, size, cap)</code>函数创建切片</p><ul><li><code>size</code>：元素个数</li><li><code>cap</code>：底层数组容量</li></ul></li></ul></li></ul><p><em>访问切片</em>：</p><ul><li>输出、访问元素、遍历与数组类似</li><li>切片长度/元素个数：<code>len(slc)</code></li><li>切片容量/<strong><u>切片第一个</u>元素</strong>到**底层数组元素<u>末尾</u>**的元素个数：<code>cap(slc)</code></li></ul><p><em>切片扩容</em>：</p><blockquote><p>Go中不能通过下标给切片扩容</p></blockquote><ul><li><p>追加元素：<code>append(slc, newElems)</code></p><blockquote><p><code>append</code>是返回一个新的切片，并不是直接修改<code>slc</code></p></blockquote></li><li><p>合并切片：<code>append(slc, anotherSlc...)</code></p><blockquote><p>这个<code>...</code>是三个点的语法</p></blockquote></li><li><p>切片扩容策略：有较为复杂的策略</p></li><li><p>切片删除元素：Go中没有专门删除切片元素的api，可以用<code>append</code>自己构造</p></li></ul><p><em>切片复制</em>：</p><ul><li><code>copy(dst []Type, src []Type)</code></li></ul><hr><p><em><strong><code>sort</code>包</strong>数组切片排序</em></p><ul><li><p>升序排序</p><ul><li><code>sort.Ints(arrOrSlc)</code></li><li><code>sort.Float64s(arrOrSlc)</code></li><li><code>sort.Strings(arrOrSlc)</code></li></ul></li><li><p>降序排序</p><blockquote><p>使用<code>sort.Reverse(arrOrSlc)</code> 来调换<code>slice.Interface.Less </code>,也就是比较函数</p></blockquote><ul><li><code>sort.Sort(sort.Reverse(sort.IntSlice(intList)))</code></li><li><code>sort.Sort(sort.Reverse(sort.Float64Slice(floatList)))</code></li><li><code>sort.Sort(sort.Reverse(sort.StringSlice(stringList)))</code></li></ul></li></ul><h3 id="3-3-map">3.3 map</h3><p><code>map </code>是一种无序的基于<code>key-value</code>的数据结构，Go语言中的<code>map</code>是<strong>引用类型</strong></p><p><em><code>map</code>创建</em>：</p><ul><li><p><code>make(map[keyType]valueType)</code></p><blockquote><p>后面可以再跟一个参数代表<strong>长度</strong>；<code>map</code>默认值为<code>nil</code></p></blockquote></li><li><p><code>var mp = map[keyType]valueType&#123;key1:value1, key2:value2, key3:value3,&#125;</code></p></li></ul><p><em><code>map</code>访问：</em></p><ul><li><p>格式化输出：<code>%v</code></p></li><li><p>获取值、添加/修改键值对：<code>mp[key]</code>、<code>mp[key] = value</code></p></li><li><p>循环遍历：<code>for key, value := range mp &#123;...&#125;</code></p></li><li><p>查找键是否存在并尝试获取值：<code>value, isExist := mp[key]</code></p><blockquote><p>注意这种特殊的用法，也就是<code>mp[key]</code>返回的<code>isExist</code>可以接收也可以完全不接收</p></blockquote><ul><li>如果不存在，<code>value</code>为默认值，<code>isExist</code>为<code>false</code></li><li>如果存在，<code>value</code>为<code>key</code>对应值，<code>isExist</code>为<code>true</code></li></ul></li><li><p>删除键值对：<code>delete(mp, key)</code></p></li></ul><p><em><code>map</code>与切片：</em></p><ul><li>元素为<code>map</code>类型的切片：<ul><li><code>make([]map[keyType]valueType, size, cap)</code></li></ul></li><li>值为切片类型的<code>map</code><ul><li><code>make(map[keyType][]valueType)</code></li></ul></li></ul><h2 id="4-函数、指针、结构体">4 函数、指针、结构体</h2><h3 id="4-1-函数">4.1 函数</h3><p><em>定义函数</em>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> 函数名<span class="params">(参数列表)</span></span>(返回值列表) &#123;</span><br><span class="line">    函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<code>argName argType, argName argType, ...</code></p><ul><li><p>如果所有参数的类型都相同：<code>arg1, arg2, arg3 sameType</code></p></li><li><p>如果是<strong>可变参数</strong>，则必须是参数列表的最后一个，且只能有一个：<code>variableArg ...type</code></p><blockquote><p>本质是用一个<strong>切片</strong>接收</p></blockquote></li></ul></li><li><p>返回值列表：<code>retType, retType, ...</code></p><ul><li><p>如果只有一个返回值可以不要<strong>括号</strong></p></li><li><p>返回值命名：<code>retName retType, retName retType</code></p><blockquote><p>相同类型也可以<code>ret1, ret2, ret3 sameType</code></p></blockquote><ul><li>相当于已经<strong>声明</strong>好了，可以直接在函数体内使用</li><li>返回的时候一行<code>return</code>就够了，其他的不用加</li><li>命名与不命名不要混用</li></ul></li></ul></li></ul><p><em>变量/常量的作用域：</em></p><ul><li>全局变量：全局变量是定义在<strong>函数外部</strong>的变量，它在<strong>程序整个运行周期内</strong>都有效。在函数中可以访问到全局变量</li><li>局部变量：局部变量是<strong>函数内部</strong>定义的变量， 函数内定义的变量无法在该函数外使用<ul><li>如果局部变量和全局变量重名，<strong>优先访问局部变量</strong></li><li><strong>语句块中定义的变量</strong>也只在该语句块中生效（块作用域）</li></ul></li></ul><p><em>自定义类型与变量：</em></p><ul><li><p>自定义<strong>函数类型</strong>：<code>type 函数类型名 func(参数类型列表)(返回值类型列表)</code></p></li><li><p>自定义函数类型变量的使用：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> calculation <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x - y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> c calculation <span class="comment">// 声明一个calculation 类型的变量c</span></span><br><span class="line">    c = add <span class="comment">// 把add 赋值给c</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;type of c:%T\n&quot;</span>, c) <span class="comment">// type of c:main.calculation</span></span><br><span class="line">    f := sub <span class="comment">// 将函数add 赋值给变量f1</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;type of f:%T\n&quot;</span>, f) <span class="comment">// type of f:func(int, int) int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注意，<strong>自定义</strong>函数类型和类型<strong>自动推导</strong>的函数类型是不完全一样的</li></ul></li><li><p>自定义数据类型：<code>type 数据类型名 基本数据类型名</code></p></li></ul><p><em>函数作为参数和返回值：</em></p><ul><li>可以用<code>type</code>起别名，也可以直接写<code>func(参数类型列表)(返回值类型列表)</code></li><li>使用方法与基本数据类型一致</li></ul><p><em>匿名函数和闭包：</em></p><ul><li><p>匿名函数可以<strong>定义在一个函数内部</strong>（非匿名的不可以），定义方式就是不写<strong>函数名</strong>，当然也可以将其赋值给一个变量：<code>var fuoo = func(参数类型列表)(返回值类型列表)&#123;函数体&#125;</code></p></li><li><p>匿名自执行函数：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在某个函数内部</span></span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(参数)</span></span>(返回值)&#123;</span><br><span class="line">函数体</span><br><span class="line">&#125;(参数取值)</span><br></pre></td></tr></table></figure></li><li><p>闭包是指<strong>有权访问另一个函数作用域中变量</strong>的函数，是<strong>将函数内部和函数外部连接起来</strong>的桥梁。本质上，闭包是<strong>函数及其引用环境的组合体</strong>。</p><blockquote><p>闭包里作用域返回的局部变量资源不会被立刻回收，会继续<strong>常驻内存</strong>，但<strong>不会污染全局命名空间</strong></p></blockquote></li><li><p>定义闭包：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">adder</span><span class="params">()</span></span> <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> x <span class="type">int</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">        x += y</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按照上例，若多次调用闭包，则<code>x</code>的值会累加</li></ul></li></ul><p><em><code>defer</code>语句</em>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn</span><span class="params">()</span></span> &#123;</span><br><span class="line"> <span class="keyword">defer</span> stmt1</span><br><span class="line"> <span class="keyword">defer</span> stmt2</span><br><span class="line">  <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    stmts</span><br><span class="line">  &#125;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>将<code>defer</code>后面紧跟的语句<strong>延迟处理</strong>。在<code>defer</code>归属的函数返回时，将延迟处理的语句按<code>defer</code>定义的<strong>逆序执行</strong></p><blockquote><p>函数返回的底层顺序：</p><ol><li>设置返回值</li><li>运行<code>defer</code></li><li>执行<code>RET</code>命令</li></ol></blockquote></li><li><p>如果想要延迟执行一批语句，可以结合<strong>匿名自执行函数</strong>。</p></li><li><p>对于<strong>匿名</strong>返回，<code>defer</code>不会影响到返回值；对于<strong>命名</strong>返回，<code>defer</code>可以影响相同名字的返回值</p></li><li><p><code>defer</code>在注册延迟执行的匿名函数时该函数的<strong>所有参数取值就已经确定</strong>了，不会再受到后面语句的影响</p></li></ul><hr><p><em><code>panic</code>/<code>recover</code>：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    err := <span class="built_in">recover</span>()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      stmt <span class="comment">// handle exception</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">panic</span>(<span class="string">&quot;exception message&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>panic/recover模式可以用来处理错误，panic可以在任何地方引发，recover只有在defer调用的函数中有效</p></li><li><p><code>panic(err)</code>：引发一个错误对象</p><ul><li><p>创建一个错误：<code>errors.New(&quot;exception message&quot;)</code></p><blockquote><p>需要<code>errors</code>包</p></blockquote></li></ul></li></ul><hr><p><em><code>time</code>包</em>：</p><h3 id="4-2-指针">4.2 指针</h3><p><em>指针变量</em>：</p><ul><li>引用数据类型</li><li><code>*type</code>：代表相应类型的指针类型</li><li><code>&amp;varName</code>：用变量名取<strong>变量地址</strong>，可以直接将其<strong>赋值给指针变量</strong></li><li>指针/地址的格式化输出：<code>%p</code></li><li><code>*pointerVar</code>：取出指针所指<strong>内存地址上存储的值</strong>，也可以修改这个值</li></ul><p><em>分配内存空间：</em></p><ul><li><p><code>new(type)</code>：申请相应类型的内存空间，返回该<strong>地址</strong>，且对应类型的值为<strong>默认值</strong></p></li><li><p><code>make</code>函数也是用于内存分配的，区别于<code>new</code>，它只用于<code>slice map channel</code>的内存创建，返回的类型就是这三个<strong>类型本身</strong>，而不是他们的指针类型</p><blockquote><p>因为这三种类型就是引用类型，所以就没有必要返回他们的指针了。</p></blockquote></li></ul><h3 id="4-3-结构体">4.3 结构体</h3><p><em>概述：</em></p><ul><li>Golang中没有“类”的概念，Golang中的结构体和其他语言中的类有点相似</li><li>Golang中结构体不是引用数据类型，是<strong>值类型</strong></li></ul><hr><p><em>类型别名：</em></p><ul><li><p><code>type TypeAlias = Type</code></p></li><li><p>类型别名与自定义类型不同，类型别名打印出来的类型还是原类型</p><blockquote><p><code>byte</code>和<code>rune</code>的底层定义：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="type">byte</span> = <span class="type">uint8</span> </span><br><span class="line"><span class="keyword">type</span> <span class="type">rune</span> = <span class="type">int32</span></span><br></pre></td></tr></table></figure></blockquote></li></ul><hr><p><em>定义结构体：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 类型名 <span class="keyword">struct</span> &#123; </span><br><span class="line">  字段名 字段类型 </span><br><span class="line">  字段名 字段类型 </span><br><span class="line">  … </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>其实是<strong>自定义了一个类型</strong></p></blockquote><ul><li>同样类型的字段也可以写在一行</li><li>结构体首字母可以大写也可以小写，<strong>大写表示这个结构体是公有</strong>的，在其他的包里面可以使用<strong>小写表示这个结构体是私有</strong>的，只有这个包里面才能使用</li></ul><hr><p><em>结构体实例化：</em></p><ul><li><p><code>var 结构体实例 结构体类型</code>：成员均为默认值</p><blockquote><p>这里的结构体类型，可以使用上面<code>type</code>的自定义类型，也可以直接定义<code>struct</code>类型，例如：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> msg <span class="keyword">struct</span> &#123; </span><br><span class="line">   Name <span class="type">string</span></span><br><span class="line">   Message <span class="type">string</span> </span><br><span class="line">   Age <span class="type">int</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但这样就无法<strong>复用</strong>了</p></blockquote></li><li><p><code>new(结构体类型)</code>：返回结构体实例的<strong>地址</strong>（指针类型），成员均为默认值</p></li><li><p><code>&amp;结构体类型&#123;&#125;</code>：返回结构体实例的<strong>地址</strong>（指针类型），成员均为默认值</p></li><li><p>键值对方式：</p><ul><li><code>strVar := strName&#123;memKey: memValue, memKey: memValue, memKey: memValue,&#125;</code></li><li><code>strPointer := &amp;strName&#123;memKey: memValue, memKey: memValue, memKey: memValue,&#125;</code></li></ul><blockquote><p>有些字段可以不赋值，这样就保持<strong>默认值</strong>；可以不写<code>memKey</code>，按顺序写<code>memValue</code>即可</p></blockquote></li></ul><hr><p><em>结构体访问：</em></p><ul><li><p>格式化输出：</p><ul><li><code>%v</code>：只有属性值</li><li><code>%#v</code>：更详细的信息</li></ul></li><li><p>访问成员：<code>.</code>运算符</p><ul><li><p><code>strVar.memVar</code></p></li><li><p><code>strPointer.memVar</code>：在 Golang 中支持对<strong>结构体指针</strong>直接使用<code>.</code>来访问结构体的成员</p><blockquote><p>底层其实是<code>(*strPointer).memVar</code></p></blockquote></li></ul></li></ul><hr><p><em>结构体方法与接收者：</em></p><ul><li><p>所谓方法就是定义了<strong>接收者</strong>的函数。接收者的概念就类似于其他语言中的<code>this</code>或者<code>self</code></p></li><li><p>方法的定义：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(接收者变量 接收者/结构体类型)</span></span> 方法名(方法参数列表) (方法返回值列表) &#123;</span><br><span class="line">  方法体 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法本身定义在<strong>全局作用域</strong>，所有相同接收者类型的结构体变量都可以用<code>.</code>调用方法</li></ul></li><li><p>接收者类型</p><ul><li>非指针类型接收者：只获取值不修改</li><li>指针类型接收者<code>接收者变量 *接收者结构体类型</code>：能获取值并修改结构体成员</li></ul></li></ul><blockquote><p>在golang中也可以给任意自定义类型添加方法，用法与结构体接收者类似；</p><p>但是，只能给同一个包里的自定义类型添加方法，不能给非本地类型定义方法</p></blockquote><hr><p><em>嵌套结构体与继承：</em></p><ul><li><p>匿名字段</p><ul><li>结构体允许其成员字段在声明时<strong>没有字段名而只有类型</strong></li><li>匿名字段默认<strong>采用类型名作为字段名</strong>，结构体要求<strong>字段名称必须唯一</strong>，因此一个结构体中<strong>同种类型的匿名字段只能有一个</strong></li></ul></li><li><p>一个结构体中可以<u>嵌套</u>包含<strong>另一个结构体或结构体指针</strong>作为字段，访问方式类似，通过多个<code>.</code>即可深入访问</p><blockquote><p>指针和非指针的用法几乎完全相同，只是在赋值的时候需要取<strong>地址</strong></p></blockquote></li><li><p><u>嵌套结构体可以结合匿名字段</u>，当访问<strong>结构体成员</strong>时会先在结构体中查找该字段，找不到再去<strong>匿名结构体</strong>中查找</p></li><li><p>嵌套结构体内部可能存在**<u>相同的字段名</u><strong>，这个时候为了避免歧义和报错需要</strong>指定具体内嵌结构体的字段**</p></li><li><p>通过<strong>嵌套结构体</strong>就可以实现结构体的继承了，字段和方法都可以继承到</p></li></ul><hr><p><em>结构体与JSON序列化：</em></p><ul><li><p>如果想让结构体成员参与序列化，则必须定义成<strong>公开</strong>的，即<strong>首字母大写</strong></p></li><li><p>序列化：<code>json.Marshal(v interface&#123;&#125;)</code></p><blockquote><p>需要<code>encoding/json</code>包</p></blockquote><ul><li><p>直接传入结构体变量即可，返回的是**<code>byte</code>切片**：</p><p><code>jsonBytes, err := json.Marshal(structVar)</code></p></li><li><p>还需要再将<code>byte</code>切片转换成<strong>字符串</strong>：<code>jsonStr := string(jsonBytes)</code></p></li></ul></li><li><p>反序列化：<code>err = json.UnMarshal(date []byte, v interface&#123;&#125;)</code></p><ul><li>要提前定义结构体变量，然后传入<strong>结构体变量的地址</strong>，才能修改到结构体成员</li></ul></li></ul><blockquote><p>嵌套结构体的JSON序列化也相同</p></blockquote><hr><p><em>结构体标签Tag：</em></p><ul><li><p>Tag是结构体的<strong>元信息</strong>，可以在运行的时候通过<strong>反射机制</strong>读取出来</p></li><li><p>Tag由一个或多个<strong>键值对</strong>组成，用<strong>反引号</strong>包裹，写在结构体成员后面（同一行，用<strong>空格</strong>隔开）</p><ul><li>键与值使用<strong>冒号</strong>分隔，值用<strong>双引号</strong>括起来</li><li>同一个结构体字段可以设置多个键值对Tag，不同的键值对之间使用<strong>空格</strong>分隔</li></ul><blockquote><p>为结构体编写Tag时，必须严格遵守键值对的规则。结构体标签的解析代码的容错能力很差，一旦格式写错，编译和运行时都不会提示任何错误，通过反射也无法正确取值</p><blockquote><p>例如不要在 key 和 value 之间添加空格</p></blockquote></blockquote></li><li><p>指定JSON反序列化时字段的标识符：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123; </span><br><span class="line">  ID <span class="type">int</span> <span class="string">`json:&quot;id&quot;`</span> <span class="comment">//通过指定 tag 实现 json 序列化该字段时的 key </span></span><br><span class="line">  Gender <span class="type">string</span> <span class="string">`json:&quot;gender&quot;`</span> </span><br><span class="line">  Name <span class="type">string</span> Sno <span class="type">string</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-包与接口">5 包与接口</h2><h3 id="5-1-包">5.1 包</h3><p><em>概述：</em></p><ul><li>包（package）是多个 Go 源码的集合，是一种高级的<strong>代码复用方案</strong></li><li><strong>Golang</strong> <strong>中的包可以分为三种</strong><ul><li>系统内置包：Golang 语言给我们提供的内置包</li><li>自定义包：开发者自己写的包</li><li>第三方包：属于自定义包的一种，需要自行下载安装到本地后才可以使用</li></ul></li></ul><hr><p><em>go mod</em>：</p><ul><li><p>初始化项目模块：在终端执行<code>go mod init</code></p><ul><li>会生成一个<code>go.mod</code>文件</li></ul></li><li><p>一般的项目结构：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line">|- go.mod</span><br><span class="line">|- main.go</span><br><span class="line">|- pkgdir1</span><br><span class="line">|- xxx.go</span><br><span class="line">  |- pkgdir2</span><br><span class="line">        |- xxx.go</span><br></pre></td></tr></table></figure></li></ul><hr><p><em>自定义包：</em></p><ul><li><p>声明go文件所在包：<code>package 包名</code></p><ul><li><p>一个文件夹下面直接包含的文件只能归属一个<code>package</code>，同样一个<code>package</code>的文件不能在多个文件夹下</p></li><li><p>包名可以不和文件夹的名字一样，包名不能包含<code>-</code>符号</p></li><li><p>包名为main的包为应用程序的入口包，这种包编译后会得到一个<strong>可执行文件</strong>，而编译不包含main包的源代码则不会得到可执行文件</p><blockquote><p>其中<code>main.go</code>的<code>main</code>方法就是<strong>程序入口</strong></p></blockquote></li><li><p>如果想在一个包中引用另外一个包里的标识符时，该标识符必须是对外可见的。在Go语言中只需要将<strong>标识符的首字母大写</strong>就可以让标识符对外可见了</p></li></ul></li><li><p>引入自定义包：<code>import modelName/packageName</code></p><ul><li><p>多行导入：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;modelName/package1&quot;</span></span><br><span class="line"><span class="string">&quot;modelName/package2&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>匿名导入包：<code>import _ modelName/packageName</code></p><ul><li>如果只希望导入包，而<strong>不使用包内部的数据</strong>时，可以使用匿名导入包</li><li>匿名导入的包与其他方式导入的包一样都会被编译到可执行文件中</li></ul></li></ul></li><li><p>访问包中的<strong>公有</strong>数据：<code>packageName.PublicData</code></p><blockquote><p>同一个包中多个文件的公开数据都可以访问到</p></blockquote></li></ul><hr><p><em><code>init</code>函数：</em></p><ul><li><p>在Go语言程序<strong>执行导入包语句时</strong>会自动触发包内部<code>init()</code>函数的调用</p><blockquote><p>init()函数在程序运行时自动被调用执行，不能在代码中主动调用它；</p><p><code>main</code>包的<code>init</code>函数在<code>main</code>函数前执行</p></blockquote></li><li><p><code>init()</code>函数没有参数也没有返回值，可以自己定义其内容</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">  stmt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p><em>使用第三方包：</em></p><blockquote><p>我们可以在 <a href="https://pkg.go.dev/">https://pkg.go.dev/</a> 查找看常见的 golang 第三方包</p></blockquote><ul><li><p>安装包：</p><ul><li><p><code>go get 包地址</code>（全局）</p></li><li><p><code>go mod download</code>（全局）</p><blockquote><p>全局安装的依赖包会自动下载到$GOPATH/pkg/mod，多个项目可以共享缓存的mod；</p><p>使用 <code>go mod download</code> 的时候首先需要在你的项目里面<strong>引入第三方包</strong>，例如<code>import github.com/shopspring/decimal</code>，第一次运行时会建立关联</p></blockquote></li><li><p><code>go mod vendor</code>（本项目）</p><blockquote><p>使用 <code>go mod vendor</code> 的时候首先需要在你的项目里面引入第三方包；</p><p>这样第一次运行之前就会关联好了</p></blockquote></li></ul></li><li><p>管理依赖：</p><ul><li><code>go.mod</code>文件：<code>require xxxpackage version</code></li><li>go.sum文件</li></ul></li></ul><h3 id="5-2-接口">5.2 接口</h3><p><em>接口概述：</em></p><ul><li><p>Golang 中的接口是一种<strong>抽象数据类型</strong>，是一组<strong>函数的集合</strong></p></li><li><p>Golang中接口定义了对象的行为规范，只定义规范不实现。接口中定义的规范由具体的对象来实现</p><blockquote><p>通俗的讲接口就一个标准，它是对一个对象的行为和规范进行约定，约定实现接口的对象必须得按照接口的规范</p></blockquote></li></ul><hr><p><em>接口定义：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 接口名 <span class="keyword">interface</span>&#123; </span><br><span class="line">  方法名<span class="number">1</span>(参数列表<span class="number">1</span>) 返回值列表 <span class="number">1</span> </span><br><span class="line">  方法名<span class="number">2</span>(参数列表<span class="number">2</span>) 返回值列表 <span class="number">2</span> </span><br><span class="line">  … </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>接口名</strong>：Go 语言的接口在命名时，一般会在单词后面添加<code>er</code>（如有写操作的接口叫<code>Writer</code>，有字符串功能的接口叫<code>Stringer</code>等），接口名最好要能突出该接口的类型含义</li><li><strong>方法名</strong>：当<strong>方法名</strong>首字母是大写且这个<strong>接口类型名</strong>首字母也是大写时，这个方法可以被接口所在的包（package）之外的代码访问。</li><li><strong>参数列表、返回值列表</strong>：参数列表和返回值列表中的变量名可以省略</li></ul><hr><p><em>接口实现：</em></p><ul><li><p>接口中定义的方法必须要通过<strong>结构体或其他自定义类型</strong>实现</p></li><li><p>定义<strong>结构体</strong>，并定义好<strong>实现接口</strong>的结构体方法和接收者后，还要在代码中书写：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">structVar := structType&#123;...&#125;</span><br><span class="line"><span class="keyword">var</span> interfaceVar interfaceType</span><br><span class="line">interfaceVar = structVar <span class="comment">// 实现接口</span></span><br><span class="line">interfaceVar.interfaceMethod</span><br></pre></td></tr></table></figure><ul><li>给<strong>接口变量赋值</strong>就是代表<strong>实现接口</strong>了</li></ul><blockquote><p>如果要调用结构体本身特有的方法，就不能用接口变量了</p></blockquote></li><li><p>结构体<strong>值接收者</strong>和<strong>指针接收者</strong>实现接口的区别</p><ul><li>如果结构体的方法是<u>值接收者</u>，那么实例化后的<strong>结构体值类型和结构体指针类型</strong>都可以赋值给<strong>接口变量</strong></li><li>如果结构体中的方法是<u>指针接收者</u>，那么实例化后<strong>结构体<u>指针类型可以</u>赋值给接口变量</strong>，<strong>结构体<u>值类型没法</u>赋值给接口变量</strong>。</li></ul></li><li><p>实现多个接口</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> interfaceVar1 interfaceType1 = structVar</span><br><span class="line"><span class="keyword">var</span> interfaceVar2 interfaceType2 = interfaceVar1</span><br></pre></td></tr></table></figure></li></ul><hr><p><em>:star:空接口：</em></p><ul><li><p>Golang 中没有定义任何方法的接口就是空接口：<code>interface&#123;&#125;</code></p></li><li><p>空接口表示没有任何约束，因此<strong>任何类型变量</strong>都可以实现空接口。所以空接口可用于<strong>表示任意类型</strong>。</p></li><li><p>空接口的常见应用</p><ul><li><p>空接口作为函数的参数，这样函数可以<strong>接收任意类型参数</strong></p></li><li><p>空接口作为切片、map的值，这样切片和map中可以是容纳<strong>任意类型元素(值)</strong></p><blockquote><p>:star:使用<code>interface&#123;&#125;</code>作为参数类型，存放结构体、切片等可索引取值的元素，则取出元素后不能直接索引取值，因为**<code>interface&#123;&#125;</code>类型不能被索引**，这要结合<strong>类型断言</strong>来弥补</p></blockquote></li></ul></li></ul><hr><p><em>:star:类型断言：</em></p><ul><li><p>一个接口的值（简称接口值）是由一个<strong>具体类型和具体类型的值</strong>两部分组成的。这两部分分别称为<strong>接口的动态类型和动态值</strong></p></li><li><p>如果我们想要<strong>判断空接口中值的类型</strong>，那么这个时候就可以使用类型断言，其语法格式：</p><p><code>blankInterfaceVarName.(typeName)</code></p><p>该语法返回两个参数:</p><ul><li><p>第一个返回值是<code>blankInterfaceVarName</code>转化为<code>typeName</code>类型后的变量</p><blockquote><p>:star:注意这个变量已经转换为具体的类型了，如果是可索引的就可以直接索引了</p></blockquote></li><li><p>第二个返回值是一个布尔值</p></li></ul></li><li><p>类型断言与<code>switch</code>结合：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> v := x.(<span class="keyword">type</span>) &#123; </span><br><span class="line"><span class="keyword">case</span> <span class="type">string</span>: </span><br><span class="line">  fmt.Printf(<span class="string">&quot;x is a string，value is %v\n&quot;</span>, v) </span><br><span class="line"><span class="keyword">case</span> <span class="type">int</span>: </span><br><span class="line">  fmt.Printf(<span class="string">&quot;x is a int is %v\n&quot;</span>, v) </span><br><span class="line"><span class="keyword">case</span> <span class="type">bool</span>: </span><br><span class="line">  fmt.Printf(<span class="string">&quot;x is a bool is %v\n&quot;</span>, v) </span><br><span class="line"><span class="keyword">default</span>: </span><br><span class="line">  fmt.Println(<span class="string">&quot;unsupport type！&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>x.(type)</code>这种语法只能结合<code>switch</code>一起写</p></blockquote></li><li><p>当然，也可以判断非空接口的类型，也就是判断是哪个<strong>结构体实现类型</strong></p></li></ul><hr><p><em>接口嵌套：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> interface1 <span class="keyword">interface</span> &#123;</span><br><span class="line">  method1()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> interface2 <span class="keyword">interface</span> &#123;</span><br><span class="line">  method2()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> interface3 <span class="keyword">interface</span> &#123;</span><br><span class="line">  interface1</span><br><span class="line">  interface2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口与接口间可以<strong>通过嵌套创造出新的接口</strong></li></ul><h2 id="6-goroutine">6 goroutine</h2><h3 id="6-1-协程入门">6.1 协程入门</h3><p><em>协程概述：</em></p><ul><li><p>在一个 Golang 程序的<strong>主进程</strong>上可以起多个协程。Golang中<strong>多协程</strong>可以实现并行或者并发。</p><blockquote><p>主进程结束后所有协程也强制结束</p></blockquote></li><li><p>Golang 的一大特色就是从语言层面原生支持协程，在<strong>函数或者方法调用前面加<code>go</code>关键字</strong>就可创建一个协程（goroutine）</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> fun()</span><br></pre></td></tr></table></figure></li><li><p>Golang 中每个 goroutine (协程) 默认占用内存远比 Java 、C 的线程少，只有2KB左右。且，<strong>多协程</strong> goroutine 切换调度开销方面也远比线程要少</p></li></ul><blockquote><p>设置Golang并行运行的时候占用的CPU数量：</p><ul><li>获取当前计算机上面的CPU个数：<code>runtime.NumCPU()</code></li><li>设置使用的CPU个数：<code>runtime.GOMAXPROCS(cpuNum)</code></li></ul></blockquote><hr><p><em>协程同步：</em></p><ul><li><p><code>sync.WaitGroup</code>：定义全局变量<code>var wg sync.WaitGroup</code></p><blockquote><p><code>sync</code>包</p></blockquote><ul><li><code>wg.Add(n)</code>：协程计数器加n</li><li><code>wg.Done()</code>：协程计数器减1</li><li><code>wg.Wait()</code>：等待直到协程计数器为0</li></ul></li></ul><h3 id="6-2-管道channel">6.2 管道channel</h3><p><em>管道概述：</em></p><ul><li><p>管道是 Golang 在语言级别上提供的 goroutine 间的通讯方式</p><blockquote><p>Golang 的并发模型是 CSP（Communicating Sequential Processes），提倡<strong>通过通信共享内</strong></p><p><strong>存</strong>而不是<strong>通过共享内存而实现通信</strong></p></blockquote></li><li><p>Go 语言中的管道（channel）是一种特殊的类型，遵循**先入先出（First In First Out）**的规则</p></li><li><p>管道是<strong>引用数据类型</strong></p></li><li><p>声明 channel 的时候需要为其指定<strong>元素类型</strong></p></li></ul><hr><p><em>声明并创建管道：</em></p><ul><li><p>声明管道：<code>var chVar chan typeName</code></p><blockquote><p>这个声明不是必要的，直接按下面的方法创建也可以；</p><p>默认是双向的</p></blockquote></li><li><p>创建管道：<code>chVar = make(chan typeName, cap)</code></p></li></ul><hr><p><em>管道基本操作：</em></p><ul><li>发送数据：<code>chVar &lt;- data</code></li><li>接收数据：<code>dataVar := &lt;- chVar</code><ul><li><code>&lt;- chVar</code>：接收值后忽略</li></ul></li><li>关闭管道：<code>close(chVar)</code><ul><li>管道是可以被<strong>垃圾回收机制</strong>回收的</li><li>在通知接收方所有的数据都发送完毕的时候可以<code>close</code>关闭管道</li><li>当管道被关闭时，再往该管道发送值会引发<code>panic</code></li></ul></li><li>循环从管道取值：<code>for val:= range chVar &#123;&#125;</code><ul><li>注意管道没有key，只有value</li><li>这种用法下**<u>必须关闭管道</u>**，不然会出现阻塞问题</li></ul></li></ul><hr><p><em>管道阻塞：</em></p><blockquote><p>无缓冲管道：创建管道的时候没有指定容量（<code>make(chan typeName)</code>），又称为阻塞式管道</p><p>有缓冲管道：创建管道的时候指定了容量</p></blockquote><ul><li>写管道阻塞：管道容量已满且不再被读出时，依然写入数据</li><li>读管道阻塞：管道已空且不再被写入时，依然读出数据</li></ul><blockquote><p>如果管道阻塞发生在主线程中，则会引发<code>deadlock</code>错误</p></blockquote><hr><p>*goroutine结合channel：*素数统计的例子</p><hr><p><em>单向管道：</em></p><ul><li><p>定义：</p><ul><li>只写管道：<code>chVar := make(chan&lt;- typeName, cap)</code></li><li>只读管道：<code>chVar := make(&lt;-chan typeName, cap)</code></li></ul><blockquote><p>当然也有类似的<code>var</code>语法，这里不列出了</p></blockquote></li><li><p>应用：限制(协程)<strong>函数的参数</strong>，表示该协程对该管道只读或只写</p><ul><li><code>func fn(ch chan&lt;- typeName)</code></li><li><code>func fn(ch &lt;-chan typeName)</code></li></ul></li></ul><h3 id="6-3-select多路复用">6.3 select多路复用</h3><p><code>select</code>主要用于在一个函数体中<strong>并发读取多个管道</strong>，而不是串行地读完一个管道再读另一个</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">    <span class="keyword">select</span>&#123;</span><br><span class="line">        <span class="keyword">case</span> v := &lt;-ch1:</span><br><span class="line">        stmt</span><br><span class="line">        <span class="keyword">case</span> v := &lt;-ch2:</span><br><span class="line">        stmt</span><br><span class="line">        <span class="keyword">case</span> v := &lt;-ch3:</span><br><span class="line">        stmt</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        stmt</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注意退出循环</li><li>使用多路复用时不需要<code>close</code>，如果非要<code>close</code>反而会有问题</li></ul><h3 id="6-4-goroutine错误处理">6.4 goroutine错误处理</h3><p>默认情况下，一个goroutine出错了，其他goroutine都会跟着结束</p><p>可以在协程函数中使用<code>defer recover</code>处理错误<code>panic</code></p><h3 id="6-5-并发安全与锁">6.5 并发安全与锁</h3><blockquote><p>通过<code>go build -race main.go</code>编译然后运行<code>main.exe</code>可以知道哪里存在竞争</p></blockquote><p><em>互斥锁：</em></p><ul><li>应用<ul><li><code>var mutex sync.Mutex</code></li><li><code>mutex.Lock()</code></li><li><code>mutex.Unlock()</code></li></ul></li><li>使用互斥锁能够保证同一时间有且只有一个goroutine进入临界区，其他的goroutine则在等待锁；多个goroutine同时等待一个锁时，<strong>唤醒的策略是随机的</strong>。</li><li>虽然使用互斥锁能解决<strong>资源争夺问题</strong>，但降低了程序的并发性能，尤其是很多协程只是“<strong>读</strong>”，少数协程才“<strong>写</strong>”时，效率会降低很多</li></ul><hr><p><em>读写锁：</em></p><ul><li>读写锁可以让多个读操作并发，同时读取，但是对于写操作与其他操作是完全互斥的</li><li>应用<ul><li><code>var rwMutex sync.RWMutex</code></li><li>写锁定：<code>rwMutex.Lock()</code></li><li>写解锁：<code>rwMutex.Unlock()</code></li><li>读锁定：<code>rmMutex.RLock()</code></li><li>读解锁：<code>rmMutex.RUnLock()</code></li></ul></li></ul><h2 id="7-反射、文件">7 反射、文件</h2><h3 id="7-1-反射">7.1 反射</h3><h3 id="7-2-文件">7.2 文件</h3><p><em>读取文件：</em></p><ol><li><p>以只读方式打开文件：<code>file, err := os.Open(&quot;path&quot;)</code></p></li><li><p>读取文件：</p><ul><li><p><code>for &#123;n, err := file.Read([]byte)&#125;</code></p><blockquote><p>当<code>err == io.EOF</code>时代表读取完毕；<code>buf[:n]</code>代表真正读取到的数据</p></blockquote></li><li><p><code>reader = bufio.NewReader(file)</code></p><p><code>for &#123;str, err = reader.Read([]byte)&#125;</code></p><p><code>for &#123;str, err = reader.ReadString('\n')&#125;</code></p><blockquote><p>以<code>\n</code>为分割读取字符串；当<code>err == io.EOF</code>时，<code>str</code>中可能还有返回值，也要记得取出</p></blockquote></li></ul></li><li><p>关闭文件：<code>defer file.Close()</code></p></li></ol><hr><p><em>写入文件：</em></p><ol><li><p>打开文件：<code>file, err := os.OpenFile(&quot;path&quot;, 权限, 0666)</code></p><blockquote><p>权限：用<code>|</code>分隔开，例如<code>os.O_CREATE|os.O_WRONLY|os.O_APPEND</code></p><ul><li><code>os.O_RDWR</code>：读写</li><li><code>os.O_TRUNC</code>：清空</li></ul><p><code>0666</code>：<code>windows</code>下要这样写</p></blockquote></li><li><p>写入数据</p><ul><li><p><code>file.Write([]byte)</code></p><p><code>file.WriteString(&quot;str&quot;)</code></p></li><li><p><code>writer := bufio.NewWriter(file)</code></p><p><code>writer.write([]byte)</code></p><p><code>writer.WriteString(&quot;str&quot;)</code></p><p><code>writer.Flush()</code></p></li></ul></li><li><p>关闭文件：<code>defer file.Close()</code></p></li></ol><hr><p><em>目录操作：</em></p><ul><li>创建文件夹：<ul><li><code>err := Mkdir(&quot;path&quot;, os.ModePerm)</code></li><li><code>err := MkdirAll(&quot;path&quot;, os.ModePerm)</code>：允许直接递归创建</li></ul></li></ul><hr><p><em>压缩与解压缩：</em></p><p>zip格式：<code>archive/zip</code>包</p><ul><li><p><code>zipReader, err := zip.OpenReader(&quot;path&quot;)</code></p></li><li><p><code>for _, eachFile := range zipReader.File &#123;&#125;</code></p><ul><li><p><code>eachFile.FileInfo().isDir()</code></p></li><li><p><code>eachFile.Name</code></p></li><li><p><code>fileReader, err := eachFile.OpenRaw</code></p><blockquote><p><code>archive/zip</code>包中的<code>File</code>类型继承了<code>FileHeader</code></p></blockquote></li></ul></li></ul><h2 id="8-网络编程">8 网络编程</h2><blockquote><p><a href="https://www.mszlu.com/go/base/12/12.html">https://www.mszlu.com/go/base/12/12.html</a></p></blockquote><h3 id="8-1-socket编程">8.1 socket编程</h3><p><em>TCP编程：</em></p><ul><li><p>服务端：</p><ol><li><p>监听端口：<code>listen, err := net.Listen(&quot;tcp&quot;, &quot;127.0.0.1:20000&quot;)</code></p></li><li><p>接收客户端请求<strong>建立连接</strong>：<code>for &#123; conn, err = listen.Accept() &#125;</code></p></li><li><p>创建<strong>goroutine处理连接</strong>：<code>for &#123; go process(conn) &#125;</code></p><ol><li><p>读取数据：</p><p><code>reader := bufio.NewReader(conn)</code></p><p><code>for &#123;n, err := reader.Read(buf []byte)&#125;</code></p></li><li><p>发送数据：<code>conn.Write([]byte)</code></p></li><li><p>关闭连接：<code>defer conn.Close()</code></p></li></ol></li><li><p>结束监听：<code>defer listen.Close()</code></p></li></ol></li><li><p>客户端：</p><ol><li><p>建立与服务端的连接：<code>conn, err := net.Dial(&quot;tcp&quot;, &quot;127.0.0.1:20000&quot;)</code></p></li><li><p>进行数据收发：</p><p><code>n, err = conn.Write([]byte)</code></p><p><code>for &#123;n, err := conn.Read(buf []byte)&#125;</code></p></li><li><p>关闭连接：<code>defer conn.Close()</code></p></li></ol></li></ul><hr><p><em>UDP编程：</em></p><ul><li><p>服务端：</p><ol><li>监听端口：<code>listen, err := net.ListenUDP(&quot;udp&quot;, &amp;net.UDPAddr&#123;IP: new.IPv4(0, 0, 0, 0), Port: 3000,&#125;)</code></li><li>接收数据：<code>n, addr, err := listen.ReadFromUDP([]byte)</code></li><li>发送数据：<code>n, err = listen.WriteToUDP([]byte, addr)</code></li><li>结束监听：<code>defer listen.Close()</code></li></ol></li><li><p>客户端</p><ol><li><p>与服务端建立连接：<code>socket, err := net.DialUDP(&quot;udp&quot;, nil, &amp;net.UDPAddr&#123;IP: net.IPv4(0, 0, 0, 0), Port: 30000,&#125;)</code></p></li><li><p>收发数据：</p><p><code> n, err = socket.Write([]byte)</code></p><p><code>n, remoteAddr, err := socket.ReadFromUDP([]byte)</code></p></li><li><p>关闭连接：</p><p><code>defer socket.Close()</code></p></li></ol></li></ul><h3 id="8-2-HTTP编程">8.2 HTTP编程</h3><p><em>HTTP协议工作流程：</em></p><ol><li>客户机通过TCP/IP协议建立到服务器的<strong>TCP连接</strong></li><li>客户端向服务器发送<strong>HTTP协议请求包</strong>，请求服务器里的资源</li><li>服务器向客户机发送<strong>HTTP协议应答包</strong></li><li>客户机与服务器断开</li></ol><hr><p><em>HTTP服务端：</em></p><ol><li><p><strong>定义处理请求的逻辑</strong></p><ol><li><p>handler函数：<code>func myHandler(w http.ResponseWriter, r *http.Request) &#123;...&#125;</code></p><p>关于<code>http.Request</code>结构体</p> <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Request <span class="keyword">struct</span> &#123;</span><br><span class="line">Method <span class="type">string</span></span><br><span class="line">URL *url.URL</span><br><span class="line">Header Header</span><br><span class="line">Body io.ReadCloser</span><br><span class="line">ContentLength <span class="type">int64</span></span><br><span class="line">    <span class="comment">/*omitted...*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>q := r.URL.Query()</code><ul><li><code>q.Get(&quot;key&quot;)</code></li></ul></li><li><code>r.URL.EscapedPath()</code>：大部分情况下直接用这个得到<strong>资源路径字符串</strong>（<code>/</code>分隔的）</li><li><code>w.Header().Add(&quot;key&quot;, &quot;value&quot;)</code>、<code>w.Header().Set(&quot;key&quot;, &quot;value&quot;)</code></li><li><code>w.WriteHeader(statusCode)</code></li><li><code>w.Write([]byte)</code></li></ul></li><li><p>注册handler：<code>http.HandleFunc(&quot;/path&quot;, myHandlerFunc)</code></p><ul><li><p>也可以调用<code>http.Handle(&quot;/path&quot;, &amp;myHandler)</code>，但这需要传入实现了<code>http.Handler</code>接口的结构体变量，用<code>handlerFunc</code>就可以自动通过<strong>普通函数</strong>转换成处理器，当然这个函数的<strong>参数列表</strong>是有要求的</p><blockquote><p>见下面的例子：<code>w http.ResponseWriter, r *http.Request</code></p></blockquote></li></ul></li></ol></li><li><p><strong>创建服务器并监听端口</strong></p><ul><li><p>方式一：<code>http.ListenAndServe(&quot;127.0.0.1:8000&quot;, nil)</code></p><ul><li><code>nil</code>表示使用<strong>默认的多路复用服务器</strong></li></ul></li><li><p>方式二：实例化<code>http.Server</code>结构体，并调用<code>s.ListenAndServe()</code>方法</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Server <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// in the form &quot;host:port&quot;. If empty, &quot;:http&quot; (port 80) is used.</span></span><br><span class="line">Addr <span class="type">string</span></span><br><span class="line">Handler Handler </span><br><span class="line">ReadTimeout time.Duration</span><br><span class="line">ReadHeaderTimeout time.Duration</span><br><span class="line">WriteTimeout time.Duration</span><br><span class="line">MaxHeaderBytes <span class="type">int</span></span><br><span class="line">    <span class="comment">/*omitted...*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方式三：</p><p><code>mux := http.NewServerMux()</code></p><p><code>mux.HandleFunc(&quot;/path&quot;, handler)</code></p><p><code>http.ListenAndServe(&quot;ip:port&quot;, mux)</code></p></li></ul></li></ol><hr><p><em>HTTP客户端：</em></p><ul><li><p><strong>发起请求</strong></p><ul><li><p>Get请求：<code>resp, err := http.Get(&quot;url?key=value&amp;&quot;)</code></p></li><li><p>Post请求：</p><ul><li><p><code>http.Post(&quot;url&quot;, &quot;contentType&quot;, body io.Reader)</code></p></li><li><p><code>http.PostForm(&quot;url&quot;, data url.Values)</code></p><blockquote><p>The Content-Type header is set to application/x-www-form-urlencoded</p></blockquote></li></ul></li><li><p>任意请求：</p><p><code>client := http.Client&#123;&#125;</code></p><p><code>req, err := http.NewRequest(&quot;GET&quot;, &quot;urlStr&quot;, body io.Reader)</code></p><blockquote><p><code>io.Reader</code>可以通过<code>bytes.NewReader([]byte)</code>构造</p></blockquote><p><code>req.Header.Set(&quot;key&quot;, &quot;value&quot;)</code></p><p><code>resp, err := client.Do(req)</code></p><blockquote><p>关于<code>url.Values</code>：</p><p><code>data := url.Values&#123;&#125;</code></p><p><code>data.Set(&quot;key&quot;, &quot;value&quot;)</code></p><p><code>urlStr = data.Encode()</code></p></blockquote></li></ul></li><li><p><strong>接收数据</strong></p><ul><li><code>for &#123;n, err := resp.Body.read(buf []byte)&#125;</code></li></ul></li><li><p><strong>关闭</strong></p><ul><li><code>defer resp.Body.close()</code></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Netty</title>
      <link href="/posts/1c6ba3e2.html"/>
      <url>/posts/1c6ba3e2.html</url>
      
        <content type="html"><![CDATA[<h2 id="NIO">NIO</h2><h3 id="Chanel-Buffer-Selector">Chanel &amp; Buffer &amp; Selector</h3><h3 id="File-Network-Programming-in-NIO">File &amp; Network Programming in NIO</h3><h3 id=""></h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java gRPC</title>
      <link href="/posts/db0024fc.html"/>
      <url>/posts/db0024fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-gRPC-Overview-Principle">1 gRPC Overview &amp; Principle</h2><h3 id="1-2-Overview-of-RESTful-RPC">1.2 Overview of RESTful &amp; RPC</h3><h3 id="1-3-gRPC-Classes-Protocol-Buffers">1.3 gRPC Classes &amp; Protocol Buffers</h3><h2 id="2-gRPC-Communication-Mode">2 gRPC Communication Mode</h2><h3 id="2-1-Unary-RPC">2.1 Unary RPC</h3><h3 id="2-2-Server-Stream-RPC">2.2 Server Stream RPC</h3><h3 id="2-3-Client-Stream-RPC">2.3 Client Stream RPC</h3><h3 id="2-4-Two-way-Stream-RPC">2.4 Two-way Stream RPC</h3><h2 id="3-gRPC-Microservice">3 gRPC Microservice</h2>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> gRPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Security</title>
      <link href="/posts/7d2eec83.html"/>
      <url>/posts/7d2eec83.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-Install-Simple-Use">1.2 Install &amp; Simple Use</h3><h2 id="2-Authentication-Authorization">2 Authentication &amp; Authorization</h2><h3 id="2-1-Authentication-Principle">2.1 Authentication Principle</h3><ul><li>Handlers</li></ul><h3 id="2-2-Authorization-Principle">2.2 Authorization Principle</h3><ul><li>Other authorization methods</li></ul><h3 id="2-3-Unified-Exception-Handling">2.3 Unified Exception Handling</h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud</title>
      <link href="/posts/96a41905.html"/>
      <url>/posts/96a41905.html</url>
      
        <content type="html"><![CDATA[<h2 id="Overview">Overview</h2><h3 id="Conceptual-Framework">Conceptual Framework</h3><h3 id="Install-Basic-Use">Install &amp; Basic Use</h3><ul><li>Versions</li></ul><h2 id="Register-Discover-Configure">Register &amp; Discover &amp; Configure</h2><h2 id="Load-Balancing-RPC">Load Balancing &amp; RPC</h2><h2 id="Fault-Tolerance">Fault Tolerance</h2><h2 id="Gateway-Security">Gateway &amp; Security</h2><h2 id="Monitor-Link-Trace">Monitor &amp; Link Trace</h2>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot</title>
      <link href="/posts/6f2612a2.html"/>
      <url>/posts/6f2612a2.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><ul><li>Automatic configuration</li><li>Boot dependencies</li></ul><h3 id="1-2-Install-Simple-Use">1.2 Install &amp; Simple Use</h3><h3 id="1-3-Starter-Dependencies">1.3 Starter Dependencies</h3><h3 id="1-4-Automatic-Configuration">1.4 Automatic Configuration</h3><ul><li>yml</li><li>Development environment switch</li><li>JavaConfig</li></ul><h2 id="2-WEB-Integration">2 WEB Integration</h2><h3 id="2-1-Request-Mapping-Rule">2.1 Request Mapping Rule</h3><ul><li>Static resources</li><li>RESTful</li></ul><h3 id="2-2-Get-Request-Parameters-Response">2.2 Get Request Parameters &amp; Response</h3><ul><li>Custom parameter analysis</li><li>WEB Native Objects</li></ul><h3 id="2-3-Interceptor-CORS">2.3 Interceptor &amp; CORS</h3><h3 id="2-4-AOP-Unified-Exception-Handling">2.4 AOP &amp; Unified Exception Handling</h3><h2 id="3-Other-Integration">3 Other Integration</h2><h3 id="3-1-Hot-Deploy">3.1 Hot Deploy</h3><h3 id="3-2-JUnit">3.2 JUnit</h3><h3 id="3-3-Mybatis">3.3 Mybatis</h3><ul><li>Declarative transaction</li></ul><h3 id="3-4-Redis">3.4 Redis</h3><ul><li>Spring Data</li></ul><h3 id="3-5-Log-Indicator-Monitor">3.5 Log &amp; Indicator Monitor</h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring MVC</title>
      <link href="/posts/ae0f95e0.html"/>
      <url>/posts/ae0f95e0.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-Install-Simple-Use">1.2 Install &amp; Simple Use</h3><h3 id="1-3-Execution-Flow">1.3 Execution Flow</h3><h2 id="2-Request-Mapping-Rule">2 Request Mapping Rule</h2><h3 id="2-1-Path-Method">2.1 Path &amp; Method</h3><h3 id="2-2-Parameters-Head">2.2 Parameters &amp; Head</h3><h3 id="2-3-RESTful">2.3 RESTful</h3><h2 id="3-Get-Request-Parameters-Response">3 Get Request Parameters &amp; Response</h2><h3 id="3-1-Path-Parameters-Request-Line">3.1 Path Parameters &amp; Request Line</h3><ul><li>required</li><li>defaultValue</li></ul><h3 id="3-2-Request-Body-Head">3.2 Request Body &amp; Head</h3><ul><li>required</li><li>defaultValue</li><li>Type Converters</li></ul><h3 id="3-3-WEB-Native-Objects">3.3 WEB Native Objects</h3><ul><li>Cookie</li></ul><h3 id="3-4-Response-Body">3.4 Response Body</h3><h3 id="3-5-Webpage-Jump">3.5 Webpage Jump</h3><ul><li>View Resolver</li></ul><h2 id="4-Interceptor-Unified-Exception-Handling">4 Interceptor &amp; Unified Exception Handling</h2><h3 id="4-1-Interceptor">4.1 Interceptor</h3><h3 id="4-2-Unified-Exception-Handling">4.2 Unified Exception Handling</h3><h2 id="5-File-Upload-Download">5 File Upload &amp; Download</h2><h3 id="5-1-Upload">5.1 Upload</h3><h3 id="5-2-Download">5.2 Download</h3><h2 id="6-SSM-Integration">6 SSM Integration</h2><h3 id="6-1-Thoughts-Steps">6.1 Thoughts &amp; Steps</h3><h3 id="6-2-Utilities">6.2 Utilities</h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis</title>
      <link href="/posts/1bff3c65.html"/>
      <url>/posts/1bff3c65.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Basic-Use">1 Basic Use</h2><h3 id="1-1-Conceptual-Framework-Install">1.1 Conceptual Framework &amp; Install</h3><h3 id="1-2-Simple-Development-Framework">1.2 Simple Development Framework</h3><h3 id="1-3-Core-Configuration-File">1.3 Core Configuration File</h3><h3 id="1-4-MyBatis-in-WEB">1.4 MyBatis in WEB</h3><h2 id="2-SQL-Coding">2 SQL Coding</h2><h3 id="2-1-CRUD-Tips">2.1 CRUD &amp; Tips</h3><h3 id="2-2-Parameters-Processing">2.2 Parameters Processing</h3><h3 id="2-3-Dynamic-SQL">2.3 Dynamic SQL</h3><h3 id="2-4-Annotation-Development-Mode">2.4 Annotation Development Mode</h3><h2 id="3-Principle">3 Principle</h2><h3 id="3-1-Write-MyBatis-Framework">3.1 Write MyBatis Framework</h3><h3 id="3-2-Interface-Agency">3.2 Interface Agency</h3><h3 id="3-3-Cache">3.3 Cache</h3><h2 id="4-Utility">4 Utility</h2><h3 id="4-1-Reverse-Engineering">4.1 Reverse Engineering</h3><h3 id="4-2-PageHelper">4.2 PageHelper</h3><h2 id="5-MyBatisPlus">5 MyBatisPlus</h2>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin</title>
      <link href="/posts/749a22ae.html"/>
      <url>/posts/749a22ae.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Quick-Start">1 Quick Start</h2><h3 id="1-1-Overview">1.1 Overview</h3><p>Full stack development language</p><h3 id="1-2-Build-Development-Environment">1.2 Build Development Environment</h3><ul><li>JDK</li><li>Gradle</li><li>IDEA</li></ul><h2 id="2-Plain-Essential-Syntax">2 Plain Essential Syntax</h2><h3 id="1-1-Data-Type">1.1 Data Type</h3><h4 id="Basic-Rules"><em>Basic Rules:</em></h4><ul><li><p>Kotlin doesn’t have so-called “basic data types”</p><blockquote><p>No <code>int float</code> etc.</p></blockquote></li><li><p>Kotlin have some <strong>built-in data types</strong></p><ul><li>Built-in data types can be transformed into basic data types in Java by the complier</li></ul></li></ul><hr><h4 id="Built-In-Data-Types"><em>Built-In Data Types:</em></h4><ul><li><code>Int Double String Char Boolean List Map Set</code></li></ul><h3 id="1-2-Variable-Definition">1.2 Variable Definition</h3><ul><li>Readable and writeable variables: <code>var variableName: dataType = dataValue</code></li><li>Read-only variables: <code>val variableName: dataType = dataValue</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Framework</title>
      <link href="/posts/6c92115f.html"/>
      <url>/posts/6c92115f.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><h3 id="1-2-Install-Simple-Use">1.2 Install &amp; Simple Use</h3><h2 id="2-IOC">2 IOC</h2><h3 id="2-1-Thoughts">2.1 Thoughts</h3><h3 id="2-2-Implementation">2.2 Implementation</h3><h3 id="2-3-Annotation-Development-Mode">2.3 Annotation Development Mode</h3><h2 id="3-Bean">3 Bean</h2><h3 id="3-1-Conceptual-Framework-Scope">3.1 Conceptual Framework &amp; Scope</h3><h3 id="3-2-Instantiation">3.2 Instantiation</h3><h3 id="3-3-Lifecycle">3.3 Lifecycle</h3><h3 id="3-4-Cyclic-Dependency">3.4 Cyclic Dependency</h3><h2 id="4-Principle">4 Principle</h2><h3 id="4-1-Writing-Spring-Framework">4.1 Writing Spring Framework</h3><h3 id="4-2-Design-Patterns-in-Spring">4.2 Design Patterns in Spring</h3><h2 id="5-AOP">5 AOP</h2><h3 id="5-1-Conceptual-Framework">5.1 Conceptual Framework</h3><h3 id="5-2-Pointcut-Expression">5.2 Pointcut Expression</h3><h3 id="5-3-Implementation">5.3 Implementation</h3><h2 id="6-Transaction">6 Transaction</h2><h3 id="6-1-Conceptual-Framework">6.1 Conceptual Framework</h3><h3 id="6-2-Implementation">6.2 Implementation</h3><h2 id="7-Integration">7 Integration</h2><h3 id="7-1-JDBCTemplate">7.1 JDBCTemplate</h3><ul><li>Spring Data</li></ul><h3 id="7-2-Integrate-JUnit">7.2 Integrate JUnit</h3><h3 id="7-3-Integrate-MyBatis">7.3 Integrate MyBatis</h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JUC</title>
      <link href="/posts/aa55683f.html"/>
      <url>/posts/aa55683f.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Monitor-Synchronization">1 Monitor &amp; Synchronization</h2><h3 id="1-1-Principle-of-Monitor-Object-Lock">1.1 Principle of Monitor &amp; Object Lock</h3><h3 id="1-2-Common-Synchronization-API">1.2 Common Synchronization API</h3><h2 id="2-Concurrency-Utilities">2 Concurrency Utilities</h2>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> JUC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC</title>
      <link href="/posts/8fe47ff4.html"/>
      <url>/posts/8fe47ff4.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview-Configuration">1 Overview &amp; Configuration</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><ul><li>Six steps</li></ul><h3 id="1-2-Configuration">1.2 Configuration</h3><ul><li>Jar</li><li>Use JDBC in IDEA</li></ul><h2 id="2-Driver-Connection">2 Driver &amp; Connection</h2><h3 id="2-1-Register-Driver">2.1 Register Driver</h3><h3 id="2-2-Get-DB-Connection">2.2 Get DB Connection</h3><h3 id="2-3-Use-Configuration-File">2.3 Use Configuration File</h3><h2 id="3-Statement">3 Statement</h2><h3 id="3-1-Get-Statement">3.1 Get Statement</h3><h3 id="3-2-Precompiled-Statement">3.2 Precompiled Statement</h3><h2 id="4-Execute-Result">4 Execute &amp; Result</h2><h3 id="4-1-Execute-Query-Update">4.1 Execute Query &amp; Update</h3><h3 id="4-2-Process-Result-Set">4.2 Process Result Set</h3><h2 id="5-Transaction-Lock-in-JDBC">5 Transaction &amp; Lock in JDBC</h2>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jakarta Servlet</title>
      <link href="/posts/9315887e.html"/>
      <url>/posts/9315887e.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-System-Architecture-Server">1 System Architecture &amp; Server</h2><h3 id="1-2-B-S-vs-C-S-Architecture">1.2 B/S vs C/S Architecture</h3><h3 id="1-3-Communication-in-B-S-Architecture">1.3 Communication in B/S Architecture</h3><h3 id="1-4-Web-Application-Framework">1.4 Web Application Framework</h3><ul><li>Develop in annotation mode</li></ul><h2 id="2-Servlet-Class-Adapters">2 Servlet Class &amp; Adapters</h2><h3 id="2-1-Servlet-Methods-Lifecycle">2.1 Servlet Methods &amp; Lifecycle</h3><h3 id="2-2-Adapters">2.2 Adapters</h3><ul><li><code>GenericServlet</code></li><li><code>HttpServlet</code></li></ul><h2 id="3-Servlet-Interfaces">3 Servlet Interfaces</h2><h3 id="3-1-Request-Response">3.1 Request &amp; Response</h3><ul><li>Request jump</li></ul><h3 id="3-2-Config-Context">3.2 Config &amp; Context</h3><h2 id="4-Cookie-Session">4 Cookie &amp; Session</h2><h3 id="4-1-Cookie">4.1 Cookie</h3><h3 id="4-2-Session">4.2 Session</h3><h2 id="5-Listener-Filter">5 Listener &amp; Filter</h2><h3 id="5-1-Listener">5.1 Listener</h3><h3 id="5-2-Filter">5.2 Filter</h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java SE</title>
      <link href="/posts/2b32338b.html"/>
      <url>/posts/2b32338b.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Class-Object">1 Class &amp; Object</h2><h3 id="1-1-Concept-of-OOP">1.1 Concept of OOP</h3><h3 id="1-2-Data-Type-Array">1.2 Data Type &amp; Array</h3><h4 id="Primary-Types"><em>Primary Types:</em></h4><h4 id="Reference-Types"><em>Reference Types:</em></h4><ul><li><code>enum</code></li></ul><h3 id="1-3-Memory-in-JVM">1.3 Memory in JVM</h3><h2 id="2-Inheritance-Polymorphism">2 Inheritance &amp; Polymorphism</h2><h3 id="2-1-Encapsulation">2.1 Encapsulation</h3><ul><li><code>static</code></li><li><code>this</code></li></ul><h3 id="2-2-Inheritance">2.2 Inheritance</h3><ul><li><code>super</code></li></ul><h3 id="2-3-Overwrite-Polymorphism">2.3 Overwrite &amp; Polymorphism</h3><ul><li><code>final</code></li></ul><h3 id="2-4-Abstract-Class-Interface">2.4 Abstract Class &amp; Interface</h3><ul><li>Anonymous inner classes</li></ul><h2 id="3-Package-Access-Control">3 Package &amp; Access Control</h2><h3 id="3-1-Package">3.1 Package</h3><h3 id="3-2-Access-Control">3.2 Access Control</h3><h2 id="4-Exception">4 Exception</h2><h3 id="4-1-Conceptual-Framework">4.1 Conceptual Framework</h3><ul><li>Common methods</li></ul><h3 id="4-2-Inheritance-Structure">4.2 Inheritance Structure</h3><ul><li>Custom exception</li></ul><h3 id="4-3-Throw-Catch">4.3 Throw &amp; Catch</h3><h2 id="5-Common-Utility-Classes">5 Common Utility Classes</h2><h3 id="5-1-Object-Class">5.1 Object Class</h3><h3 id="5-2-Arrays">5.2 Arrays</h3><h3 id="5-3-String">5.3 String</h3><h3 id="5-4-Wrapper-Class">5.4 Wrapper Class</h3><h3 id="5-5-Date-Decimal">5.5 Date &amp; Decimal</h3><h2 id="6-I-O-Stream">6 I/O Stream</h2><h3 id="6-1-Inheritance-Structure">6.1 Inheritance Structure</h3><h3 id="6-2-File-Stream">6.2 File Stream</h3><ul><li><code>RandomAccessFile</code></li></ul><h3 id="6-3-Buffered-Stream">6.3 Buffered Stream</h3><h3 id="6-4-Print-Stream">6.4 Print Stream</h3><ul><li>Standard in / out</li></ul><h3 id="6-5-Object-Stream-Serialize">6.5 Object Stream &amp; Serialize</h3><h3 id="6-6-File-Utility-Class">6.6 File Utility Class</h3><ul><li><code>Path File</code></li><li><code>Paths Files</code></li></ul><h2 id="7-Collection-Generics">7 Collection &amp; Generics</h2><h3 id="7-1-Conceptual-Framework">7.1 Conceptual Framework</h3><h3 id="7-2-Inheritance-Structure">7.2 Inheritance Structure</h3><h3 id="7-3-Generics">7.3 Generics</h3><h3 id="7-4-Collection-Class">7.4 Collection Class</h3><h3 id="7-5-Map-Class">7.5 Map Class</h3><ul><li><code>Properties</code></li></ul><h3 id="7-6-Collection-Utility-Class">7.6 Collection Utility Class</h3><h2 id="8-Thread-Basis">8 Thread Basis</h2><h3 id="8-1-Conceptual-Framework">8.1 Conceptual Framework</h3><ul><li>How Java implement thread</li></ul><h3 id="8-2-Thread-State-Scheduling">8.2 Thread State &amp; Scheduling</h3><ul><li>Create</li><li>Methods</li><li>Lifecycle / State switch</li><li>Remember to take something from JUC</li></ul><h3 id="8-3-Thread-Synchronization">8.3 Thread Synchronization</h3><ul><li><code>synchronized</code></li><li><code>wait() notify()</code></li></ul><h3 id="8-4-Daemon-Timer">8.4 Daemon &amp; Timer</h3><h2 id="9-Reflection">9 Reflection</h2><h3 id="9-1-Conceptual-Framework">9.1 Conceptual Framework</h3><h3 id="9-2-Class-Constructor-Reflection">9.2 Class &amp; Constructor Reflection</h3><h3 id="9-3-Field-Method-Reflection">9.3 Field &amp; Method Reflection</h3><h2 id="10-Annotation">10 Annotation</h2><h3 id="10-1-Basic-Use-Common-Annotation">10.1 Basic Use &amp; Common Annotation</h3><ul><li>Meta-annotation</li></ul><h3 id="10-2-Attribute-Reflection-of-Annotation">10.2 Attribute &amp; Reflection of Annotation</h3><h2 id="11-Network-Programming">11 Network Programming</h2><h3 id="11-1-Conceptual-Framework">11.1 Conceptual Framework</h3><h3 id="11-2-TCP-UDP-Programming">11.2 TCP &amp; UDP Programming</h3><h3 id="11-3-HTTP-Programming">11.3 HTTP Programming</h3><h2 id="12-Functional-Programming">12 Functional Programming</h2><h3 id="12-1-Conceptual-Framework">12.1 Conceptual Framework</h3><h3 id="12-2-Lambda-Expression-Method-Reference">12.2 Lambda Expression &amp; Method Reference</h3><h3 id="12-3-Stream-Functional-Interface">12.3 Stream &amp; Functional Interface</h3>]]></content>
      
      
      <categories>
          
          <category> Java &amp; Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composition Principle of Computer</title>
      <link href="/posts/4dc5363.html"/>
      <url>/posts/4dc5363.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Composition Principle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design Patterns</title>
      <link href="/posts/c85cb609.html"/>
      <url>/posts/c85cb609.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Design Patterns </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Structure</title>
      <link href="/posts/ba907200.html"/>
      <url>/posts/ba907200.html</url>
      
        <content type="html"><![CDATA[<h2 id="Linear-List">Linear List</h2><h3 id="Sequential-List-Array">Sequential List / Array</h3><h3 id="Linked-List">Linked List</h3><h2 id="Searching">Searching</h2><h3 id="Hash-Table">Hash Table</h3><h3 id="B-Tree-B-Tree">B Tree &amp; B+ Tree</h3><h2 id="String">String</h2><h2 id="Stack-Queue">Stack &amp; Queue</h2><h2 id="Binary-Tree">Binary Tree</h2><h2 id="Backtracking">Backtracking</h2><h2 id="Dynamic-Programming">Dynamic Programming</h2><h2 id="Graph">Graph</h2><h2 id="Sort">Sort</h2>]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Data Structure </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Computer Network</title>
      <link href="/posts/18afae3.html"/>
      <url>/posts/18afae3.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Computer Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Knowledge Tree</title>
      <link href="/posts/6c24763b.html"/>
      <url>/posts/6c24763b.html</url>
      
        <content type="html"><![CDATA[<h2 id="Computer-Theory">Computer Theory</h2><h3 id="Operation-System"><a href="cf3a69eb.html">Operation System</a></h3><h3 id="Data-Structure"><a href="ba907200.html">Data Structure</a></h3><h3 id="Computer-Network"><a href="18afae3.html">Computer Network</a></h3><h3 id="Database-System"><a href="27633ee8.html">Database System</a></h3><h3 id="Design-Patterns"><a href="c85cb609.html">Design Patterns</a></h3><h3 id="Composition-Principle-of-Computer"><a href="4dc5363.html">Composition Principle of Computer</a></h3><h3 id="Compile-Principle"><a href="118b8ca3.html">Compile Principle</a></h3><h2 id="Java-Kotlin">Java &amp; Kotlin</h2><h3 id="Java-SE"><a href="2b32338b.html">Java SE</a></h3><h3 id="Kotlin"><a href="749a22ae.html">Kotlin</a></h3><h3 id="Jakarta-Servlet"><a href="9315887e.html">Jakarta Servlet</a></h3><h3 id="JDBC"><a href="8fe47ff4.html">JDBC</a></h3><h3 id="Spring"><a href="6c92115f.html">Spring</a></h3><h3 id="MyBatis"><a href="1bff3c65.html">MyBatis</a></h3><h3 id="Spring-MVC"><a href="ae0f95e0.html">Spring MVC</a></h3><h3 id="Spring-Boot"><a href="6f2612a2">Spring Boot</a></h3><h3 id="Spring-Cloud"><a href="96a41905.html">Spring Cloud</a></h3><h3 id="JUC"><a href="aa55683f.html">JUC</a></h3><h3 id="Java-gRPC"><a href="db0024fc.html">Java gRPC</a></h3><h3 id="Netty"><a href="1c6ba3e2.html">Netty</a></h3><h3 id="Spring-Security"><a href="7d2eec83.html">Spring Security</a></h3><h2 id="Data-Persistence">Data Persistence</h2><h3 id="MySQL"><a href="c24675b4.html">MySQL</a></h3><h3 id="Redis"><a href="bae4ff13.html">Redis</a></h3><h2 id="Frontend">Frontend</h2><h3 id="HTML"><a href="2eec1551.html">HTML</a></h3><h3 id="JavaScript"><a href="cc1b9611.html">JavaScript</a></h3><h3 id="CSS"><a href="ee69e452.html">CSS</a></h3><h3 id="AJAX"><a href="f3334fd0.html">AJAX</a></h3><h3 id="Vue"><a href="f8e09374.html">Vue</a></h3><h3 id="uni-app"><a href="e19785da.html">uni-app</a></h3><h2 id="Golang">Golang</h2><h3 id="Golang-2"><a href="a8b02095.html">Golang</a></h3><h3 id="Gin"><a href="acec9806.html">Gin</a></h3><h3 id="Go-gRPC"><a href="8f298335.html">Go_gRPC</a></h3><h2 id="Operations">Operations</h2><h3 id="Linux"><a href="53d0684b.html">Linux</a></h3><h3 id="Docker"><a href="f5f9fa9b.html">Docker</a></h3><h3 id="Nginx"><a href="a477be03.html">Nginx</a></h3><h3 id="Kubernetes"><a href="9acacb00.html">Kubernetes</a></h3><h2 id="Project-Management">Project Management</h2><h3 id="Git"><a href="69c3279c.html">Git</a></h3><h3 id="Maven"><a href="7273cdc.html">Maven</a></h3><h3 id="Gradle"><a href="18596a3e.html">Gradle</a></h3><h2 id="C-C">C &amp; C++</h2><h3 id="Linux-System-Programming"><a href="72802800.html">Linux System Programming</a></h3><h3 id="C"><a href="caeaa4a1.html">C++</a></h3><h2 id="Big-Data">Big Data</h2><h3 id="Hadoop"><a href="b3349d42.html">Hadoop</a></h3><h3 id="Data-Mining"><a href="a9ab4cb3.html">Data Mining</a></h3><h2 id="AI">AI</h2><h3 id="Data-Analysis"><a href="">Data Analysis</a></h3><h3 id="Machine-Learning"><a href="">Machine Learning</a></h3>]]></content>
      
      
      <categories>
          
          <category> Computer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理</title>
      <link href="/posts/118b8ca3.html"/>
      <url>/posts/118b8ca3.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-绪论">1 绪论</h2><h3 id="1-1-编译相关的概念">1.1 编译相关的概念</h3><ul><li><p>编译的概念</p><ul><li>编译就是将高级语言(<strong>源语言</strong>)翻译成汇编语言或机器语言(<strong>目标语言</strong>)的过程</li></ul></li><li><p>三种程序</p><ul><li><p><strong>翻译</strong>程序(<strong>Translator</strong>)： 将某一种语言描述的程序(Source Program)翻译成等价的另一种语言描述的程序(Object Program)的程序</p><ul><li><p>翻译程序-<strong>解释</strong>程序(<strong>Interpreter</strong>)：一边解释一边执行的<strong>翻译程序</strong></p><blockquote><p>类似生活中的“口译”</p></blockquote></li><li><p>翻译程序-<strong>编译</strong>程序(<strong>Compiler</strong>)：将源程序完整地转换成机器语言程序或汇编语言程序，然后再处理、执行的<strong>翻译程序</strong></p></li></ul></li></ul></li></ul><h3 id="1-2-编译系统的结构">1.2 编译系统的结构</h3><ul><li><p>编译系统的构成</p><ul><li><strong>编译程序</strong><ul><li>预处理器</li><li>编译器</li><li>汇编器</li><li>链接器/加载器</li></ul></li><li>运行系统</li></ul></li><li><p>编译器的8个模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">                                    |</span><br><span class="line">                                    |SourceProgram</span><br><span class="line">                                    V</span><br><span class="line">------------                ----------------                  ------------</span><br><span class="line">|          |&lt;--------------&gt;|LxicalAnalyzer|&lt;----------------&gt;|          |</span><br><span class="line">|          |                ----------------                  |          |</span><br><span class="line">|          |                        |                         |          |</span><br><span class="line">|          |                        |Tokens                   |          |</span><br><span class="line">|          |                        V                         |          |</span><br><span class="line">|          |                    --------                      |          |</span><br><span class="line">|          |&lt;------------------&gt;|Parser|&lt;--------------------&gt;|          |</span><br><span class="line">|          |                    --------                      |          |</span><br><span class="line">|          |                        |                         |          |</span><br><span class="line">|          |                        |GrammarticalUnit         |          |</span><br><span class="line">|          |                        V                         |          |</span><br><span class="line">|   Form   |   --------------------------------------------   |  Error   |</span><br><span class="line">|Management|&lt;-&gt;|SemanticAnalyzer IntermediateCodeGenerator|&lt;-&gt;|Management|</span><br><span class="line">|          |   --------------------------------------------   |          |  </span><br><span class="line">|          |                        |                         |          |</span><br><span class="line">|          |                        |IntermediateCode         |          |</span><br><span class="line">|          |                        V                         |          |</span><br><span class="line">|          |                 ---------------                  |          |</span><br><span class="line">|          |&lt;---------------&gt;|CodeOptimizer|&lt;----------------&gt;|          |</span><br><span class="line">|          |                 ---------------                  |          |</span><br><span class="line">|          |                        |                         |          |</span><br><span class="line">|          |                        |IntermediateCode         |          |</span><br><span class="line">|          |                        V                         |          |</span><br><span class="line">|          |              ---------------------               |          |</span><br><span class="line">|          |&lt;------------&gt;|ObjectCodeGenerator|&lt;-------------&gt;|          |</span><br><span class="line">------------              ---------------------               ------------</span><br><span class="line">                                    |</span><br><span class="line">                                    |ObjectCode</span><br><span class="line">                                    V</span><br></pre></td></tr></table></figure><ul><li>分析<ol><li>词法分析（lexical analyzer/scanner）</li><li>语法分析（syntax analyzer/parser）</li><li>语义分析</li></ol></li><li>综合<ol><li>中间代码生成</li><li>代码优化</li><li>目标代码生成</li></ol></li><li>辅助<ol><li>表格管理/符号表管理</li><li>出错处理</li></ol></li></ul></li></ul><h3 id="1-3-词法分析概述">1.3 词法分析概述</h3><ul><li><p>功能</p><ul><li>生成token：词法分析器扫描源程序字符串，识别<strong>单词</strong>，确定类型，生成单词(<em><strong>token</strong></em>)串<ul><li>token：**(种别码, 属性值)**序对</li></ul></li><li>表格管理：登记标识符</li><li>错误管理：查词法错误</li></ul></li><li><p>输入与输出</p><ul><li>输入：源程序字符串</li><li>输出：token序列</li></ul></li></ul><h3 id="1-4-语法分析概述">1.4 语法分析概述</h3><ul><li><p>功能</p><ul><li><p>token：从<strong>token序列</strong>中，识别<strong>语法成分/短语</strong>，构造<strong>语法分析树</strong>，指导<strong>翻译</strong>过程</p><ul><li><p>用token组成各类<strong>语法成分/短语</strong>：表达式、因子、项、语句、子程序…</p><blockquote><p>“组词成句”</p></blockquote></li></ul></li><li><p>错误管理：指出<strong>语法错误</strong></p></li></ul></li><li><p>输入与输出</p><ul><li>输入：token序列</li><li>输出：语法分析树（包括<strong>语法成分</strong>）</li></ul></li></ul><h3 id="1-5-语义分析概述">1.5 语义分析概述</h3><ul><li><p>功能</p><ul><li>语法分析树：根据语法分析树，分析由语法分析器识别出来的<strong>语法成分的语义</strong><ul><li>语义分析一般和语法分析同时进行，称为<strong>语法制导翻译(syntax-directed translation)</strong></li><li>高级语言程序中的语句大体分为两类，一类是<strong>声明语句</strong>，一类是<strong>可执行语句</strong>。对于声明语句来说，语义分析的主要任务是<strong>收集标识符的属性信息</strong></li></ul></li><li>表格管理：收集<strong>标识符</strong>属性信息，完善<strong>符号表</strong>；进行子程序和变量的<strong>静态绑定</strong><ul><li>属性信息：种别、类型、值、作用域、…</li><li>子程序：代码的相对地址</li><li>变量：数据的相对地址，大小</li></ul></li><li>错误管理：<strong>语义检查</strong><ul><li>变量或过程<strong>未经声明就使用</strong></li><li>变量或过程名<strong>重复声明</strong></li><li><strong>运算分量</strong>类型不匹配</li><li><strong>操作符</strong>与<strong>操作数</strong>之间的类型不匹配</li></ul></li></ul></li><li><p>输出与输出</p><ul><li>输入：语法分析树（包括<strong>语法成分</strong>）</li><li>输出：语法分析树（包括<strong>语法成分</strong>）</li></ul></li></ul><h3 id="1-6-中间代码生成及编译">1.6 中间代码生成及编译</h3><ul><li><p>功能：</p><ul><li><p>生成与机器无关、易于优化与转化的中间表示形式（常用<strong>三地址码</strong>），以此<strong>实现语义</strong></p><blockquote><p>三地址码又有多种表示形式，其中<strong>四元式</strong>较为常用</p><p>中间代码的<strong>优点</strong>：</p><ul><li>方便通过中间表示形式进行<strong>代码优化</strong></li><li>方便源程序的跨平台<strong>移植</strong></li></ul></blockquote></li></ul></li><li><p>输入与输出</p><ul><li>输入：语法分析树（包括<strong>语法成分</strong>）</li><li>输出：中间表示形式（常用<strong>三地址码</strong>）</li></ul></li></ul><h3 id="1-7-代码优化">1.7 代码优化</h3><ul><li><p>功能</p><ul><li>通过<strong>等价</strong>程序变换对中间代码进行优化，使程序更有效利用机器资源，节省<strong>存储空间</strong>，提高<strong>运行速度</strong>和效率</li></ul></li><li><p>优化方式</p><ul><li>与机器无关的优化<ul><li>局部优化<ul><li>常数合并</li><li>公共子表达式提取</li></ul></li><li>循环优化<ul><li>强度削减</li><li>代码外提</li></ul></li><li>全局优化</li></ul></li><li>与机器有关的优化<ul><li>寄存器的利用</li><li>体系结构</li><li>存储策略</li><li>任务划分</li></ul></li></ul></li></ul><h3 id="1-8-目标代码生成">1.8 目标代码生成</h3><ul><li><p>功能：将<strong>中间代码</strong>转换成<strong>目标机</strong>上的机器指令代码或汇编代码</p><blockquote><p>目标代码的形式：</p><ul><li>具有<strong>绝对地址</strong>的机器指令</li><li>模块结构的机器指令（需要<strong>链接程序</strong>）</li><li>汇编语言</li></ul></blockquote></li><li><p>输入与输出</p><ul><li>输入：中间表示形式（常用<strong>三地址码</strong>）</li><li>输出：目标代码（一般为汇编语言）</li></ul></li></ul><h3 id="1-8-表格管理">1.8 表格管理</h3><p>管理各种<strong>符号</strong>和<strong>符号表</strong>，辅助语法检查、语义检查，完成静态绑定，为编译的各个阶段提供信息</p><h3 id="1-9-错误管理">1.9 错误管理</h3><p>进行各种错误的检查、报告、纠正，以及相应的<strong>续编译处理</strong></p><h3 id="1-10-编译程序的组织与生成">1.10 编译程序的组织与生成</h3><p><em>编译程序设计的目标：</em></p><ul><li><p>程序本身：</p><ul><li>规模小、速度快、诊断能力强、可移植性好，可扩充性好</li></ul></li><li><p>目标程序：</p><ul><li>规模小、速度快</li></ul></li></ul><hr><p><em>前端与后端：</em></p><ul><li><p>前端：</p><ul><li><p>与源语言有关、与目标机无关</p><blockquote><p>词法分析、语法分析、语义分析与中间代码生成、与机器无关的代码优化</p></blockquote></li></ul></li><li><p>后端：</p><ul><li><p>与目标机有关的部分</p><blockquote><p>与机器有关的代码优化、目标代码生成</p></blockquote></li></ul></li></ul><p><em>编译器的实现与T形图：</em></p><ul><li><p>编译器的实现思想：</p><ul><li>自展：先实现<strong>语言子集</strong>编译器，再用子集编译更大的集合，直至整个语言</li></ul></li><li><p>T形图：</p><ul><li><p>内容：描述了<strong>源语言</strong>经编译程序到<strong>目标语言</strong>的过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--------------------------------          </span><br><span class="line">|SourceLanguage  ObjectLanguage|            </span><br><span class="line">---------                -------       </span><br><span class="line">        |CompilingProgram|</span><br><span class="line">        ------------------</span><br></pre></td></tr></table></figure><blockquote><p><strong>编译程序(CompilingProgram)的实现语言</strong>可以是高级语言、汇编语言、机器语言，但终究只有<strong>用机器语言实现</strong>才能运行该程序</p></blockquote></li><li><p>作用：T形图可以直观描述语言<strong>移植</strong>、<strong>新语言编译</strong>等问题</p></li></ul></li></ul><h2 id="2-程序设计语言及其文法">2 程序设计语言及其文法</h2><h3 id="2-1-字母表和串">2.1 字母表和串</h3><ul><li><strong>字母表</strong>及其乘积、幂、闭包等运算</li><li><strong>串</strong>及其连接、幂等运算</li></ul><h3 id="2-2-文法">2.2 文法</h3><p>文法是一个具有<strong>推导</strong>和<strong>归约</strong>功能的<strong>四元组</strong>：</p><ul><li><p><strong>终结符集</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">V_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</p></li><li><p><strong>非终结符集</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）：与终结符集不相交</p></li><li><p><strong>产生式集</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>）</p><ul><li><p>左部属于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>V</mi><mi>T</mi></msub><mo>∪</mo><msub><mi>V</mi><mi>N</mi></msub><msup><mo stretchy="false">)</mo><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">(V_T\cup V_N)^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0213em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>右部属于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>V</mi><mi>T</mi></msub><mo>∪</mo><msub><mi>V</mi><mi>N</mi></msub><msup><mo stretchy="false">)</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">(V_T\cup V_N)^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>所以只有<strong>产生式的右部</strong>可以出现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></p></blockquote></li></ul></li><li><p><strong>开始符号</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>）：至少在产生式左侧出现一次</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">S\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li></ul><p>文法主要包括<strong>语法和词法</strong>：</p><ul><li><strong>语法</strong>：语句的组成规则</li><li><strong>词法</strong>：单词的组成规则</li></ul><h3 id="2-3-语言">2.3  语言</h3><ul><li><p>语言的定义</p><ul><li>由文法<strong>开始符号</strong>推导出的所有<strong>句子</strong>构成的集合称为<strong>文法生成的语言</strong>。</li></ul></li><li><p>语言的表示/描述</p><ul><li>文法解决了<strong>无穷语言的有穷表示</strong>问题。</li></ul></li><li><p>语言的运算</p><ul><li>语言有并、连接、幂、闭包等运算。</li></ul></li></ul><h3 id="2-4-文法的分类">2.4 文法的分类</h3><blockquote><p>从上至下，<strong>要求依次累加</strong></p></blockquote><ul><li><p>无限制文法/短语结构文法（0型文法、图灵机）</p><ul><li>新增的约束：产生式<strong>左部</strong>至少包含一个<strong>非终结符</strong></li></ul></li><li><p>上下文有关文法（1型文法、线性界限自动机）</p><ul><li><p>新增的约束：产生式<strong>左部长度小于右部</strong></p><blockquote><p>当然，也允许<strong>空产生式</strong>的出现，这是个特例</p></blockquote></li></ul></li><li><p>上下文无关文法（2型文法、下推自动机）</p><ul><li><p>新增的约束：产生式<strong>左部仅为非终结符</strong></p><blockquote><p>左部仅有一个非终结符，右部长度大于左部</p></blockquote></li><li><p>应用：识别<strong>语言</strong>（语法、语义分析）</p></li></ul></li><li><p>正则文法（3型文法、有穷自动机）</p><ul><li>新增的约束：仅允许<strong>左线性(非终结符</strong>只能出现在最左边)或<strong>右线性</strong>(<strong>非终结符</strong>只能出现在最右边)<ul><li>产生式右部中，非终结符要么不出现，要么只出现一个</li></ul></li><li>应用：识别<strong>单词</strong>（词法分析）</li></ul></li></ul><h3 id="2-5-CFG的分析树">2.5 CFG的分析树</h3><ul><li><p>分析树是<strong>推导</strong>的图形化表示：</p><ul><li>根节点：文法<strong>开始符号</strong></li><li>内部结点：代表<strong>产生式</strong><ul><li><strong>左部</strong>：该节点</li><li><strong>右部</strong>：子结点从左到右</li></ul></li><li>叶结点：非终结符或终结符</li><li><strong>树的产出/边缘</strong>：从左到右排列叶节点</li></ul></li><li><p>（句型的）短语：分析树中每一棵<strong>子树的边缘</strong>（若干步推导）</p><ul><li><p>直接短语（简单短语）：高度为2的子树的边缘（一步推导）</p><blockquote><p>注意子树的定义，需要从一个节点<strong>延伸直到叶子节点</strong>才叫子树，而且高度要大于等于2</p></blockquote></li><li><p>句柄：句型的<strong>最左直接短语</strong>/最左边高为为2子树的边缘</p><blockquote><p>不同子树的边缘可以相同，但<strong>短语不必重复</strong>。不过，对于出现在树中不同位置的<strong>相同文法符号</strong>，在短语中应当<strong>区别</strong>对待，可以用<strong>下标</strong>来区分它们</p></blockquote></li></ul></li><li><p>二义性文法与消歧规则</p><ul><li>二义性文法：文法可以为某个句子生成多棵分析树</li><li>消歧规则：人为规定一些<strong>优先级</strong>关系</li></ul></li></ul><h3 id="2-6-程序设计语言">2.6 程序设计语言</h3><ul><li>概念<ul><li>程序设计语言(ProgrammingLanguage)：组成程序的<strong>所有语句</strong>的集合</li><li>程序(Program)：满足<strong>语法</strong>规则的<strong>语句序列</strong></li><li>语句(Sentence) ：满足<strong>语法</strong>规则的<strong>单词序列</strong></li><li>单词(Token) ：满足<strong>词法</strong>规则的字符串</li></ul></li></ul><h2 id="3-词法分析">3 词法分析</h2><h3 id="3-1-正则表达式">3.1 正则表达式</h3><ul><li><p>正则表达式是描述<strong>正则语言</strong>的<strong>更紧凑</strong>的表示方法，它可以<strong>递归构建</strong></p></li><li><p>与<strong>正则文法、有穷自动机</strong>等价</p><blockquote><p>正则表达式很<strong>简洁</strong>；</p><p>正则文法方便文法<strong>性质</strong>的证明；</p><p>有穷自动机没那么抽象，方便<strong>实现</strong>；</p></blockquote></li><li><p>有自己的<strong>代数定律</strong></p></li></ul><h3 id="3-2-有穷自动机">3.2 有穷自动机</h3><blockquote><p>核心就是：<code>状态 + 输入 + 转换</code></p></blockquote><ul><li><p>有穷自动机（FA）：</p><ul><li>一种处理系统的数学模型。这种处理系统由<strong>输入带、读头、有穷控制器</strong>构造，可以根据当前<strong>状态</strong>和<strong>输入</strong>转入下一状态。</li><li>FA有其定义/接收的<strong>语言</strong></li><li>FA遵循最长子串匹配</li></ul></li><li><p>DFA：一种代表FA模型的<strong>五元组</strong></p><ul><li><p><strong>有穷状态集</strong>（S）</p></li><li><p><strong>输入字母表</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>）</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo mathvariant="normal">∉</mo><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\epsilon\notin\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span></p></blockquote></li><li><p><strong>转换函数</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi mathvariant="normal">Σ</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S\times\Sigma\rarr S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></p></li><li><p><strong>开始状态</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">s_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</p></li><li><p><strong>接收状态集合</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>）</p></li></ul></li><li><p>NFA：一种代表FA模型的<strong>五元组</strong></p><ul><li><p><strong>有穷状态集</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>）</p></li><li><p><strong>输入字母表</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>）</p></li><li><p><strong>转换函数</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi mathvariant="normal">Σ</mi><mo>→</mo><msup><mn>2</mn><mi>S</mi></msup></mrow><annotation encoding="application/x-tex">S\times\Sigma\rarr 2^S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span></span></span></span>的区别就在于转换函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mo stretchy="false">(</mo><mi mathvariant="normal">Σ</mi><mo>∪</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo stretchy="false">)</mo><mo>→</mo><msup><mn>2</mn><mi>S</mi></msup></mrow><annotation encoding="application/x-tex">S\times(\Sigma\cup\{\epsilon\})\rarr 2^S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">})</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span></p></blockquote></li><li><p><strong>开始状态</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">s_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</p></li><li><p><strong>接收状态集合</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>）</p></li></ul></li></ul><h3 id="3-3-RE与FA的转换">3.3 RE与FA的转换</h3><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>E</mi><mo>→</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">RE\rarr NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span></span></span></span>：<strong>分解、递归</strong></p><ul><li>RE与NFA的对应规则</li></ul></li><li><p>$NFA\rarr DFA $：<strong>状态转换表</strong></p><ul><li>子集构造法</li></ul></li></ul><h3 id="3-4-词法单元token">3.4 词法单元token</h3><ul><li><p>概念：</p><ul><li>词法单元token是源程序中<strong>单词的机内表示</strong>，由<strong>种别码和属性值</strong>构成</li></ul></li><li><p>种别码：</p><ul><li>记录单词<strong>类型</strong></li><li>一词一码：关键字、运算符、界限符</li><li>一型一码：常量、运算符</li><li>多词一码：标识符</li></ul></li><li><p>属性值：</p><ul><li>记录单词<strong>字面值</strong></li><li>一词一码：<strong>不需要属性值</strong></li><li>一型一码：用<strong>属性值区分</strong>同一类型的单词</li><li>多词一码：用属性值记录<strong>无法枚举</strong>的标识符字面值</li></ul></li></ul><h3 id="3-5-词法分析器">3.5 词法分析器</h3><ul><li><p>词法分析器的功能</p><ul><li><p>词法分析器扫描源程序字符串，识别<strong>单词</strong>，确定类型，生成单词(<em><strong>token</strong></em>)串</p><ul><li><p>根据<strong>词法规则</strong>识别及组合单词，进行词法检查</p></li><li><p>对<strong>数字</strong>常数完成数字字符串到<strong>二进制数值</strong>的转换</p></li><li><p>预处理：删去<strong>空格</strong>字符和<strong>注释</strong></p><blockquote><p>给人看的，对<strong>机器</strong>无意义</p></blockquote></li></ul></li></ul></li><li><p>词法分析器的工作</p><ul><li>输入缓冲区（Look ahead）：设置一个单词开始指针和扫描指针，<strong>一前一后</strong>，中间的部分是要识别的单词</li><li>识别出关键字后需要登记符号表</li></ul></li></ul><h3 id="3-6-词法分析阶段的错误处理">3.6 词法分析阶段的错误处理</h3><ul><li><p>错误类型</p><ul><li><strong>单词拼写</strong>错误</li><li><strong>非法字符</strong></li><li>不封闭</li><li>重复声明</li></ul></li><li><p>错误恢复与续编译：错误处理程序</p><ul><li><p>调用时机：<strong>当前状态与当前输入信息为空</strong></p></li><li><p>处理方式：查找已扫描字符串的最后一个<strong>终态字符</strong></p><blockquote><p>终态指的是自动机终态</p></blockquote><ul><li>找到了：识别成一个<strong>单词</strong>，回到初态</li><li>没找到：错误恢复策略（<strong>恐慌模式</strong>）</li></ul></li><li><p>恐慌模式：从<strong>剩余输入中删除字符</strong>直到遇到正确字符</p></li></ul></li></ul><h2 id="4-语法分析">4 语法分析</h2><h3 id="4-1-句法分析概述">4.1 句法分析概述</h3><ul><li><p>主要任务:</p><ul><li>从<em><strong>token</strong></em>序列中，识别<strong>语法成分/短语</strong>，构造<strong>语法分析树</strong>，指导翻译过程</li></ul></li><li><p>基本方法:</p><ul><li>自顶向下: 自顶向下构造语法分析树, 根据<strong>输入符</strong>，选择合适的<strong>产生式</strong>推导<strong>最左非终结符</strong>, 直到推导出完整的输入串<ul><li>递归下降分析法</li><li>预测分析法</li></ul></li><li>自底向上: 自底向上构造语法分析树, 根据<strong>输入符,</strong> 选择合适的<strong>句柄</strong>进行归约, 直至将输入符串归约为文法开始符号<ul><li>算符优先分析法</li><li>LR分析法</li></ul></li></ul></li></ul><h3 id="4-2-自顶向下分析概述">4.2 自顶向下分析概述</h3><p><em>自顶向下分析的基本思想与主要问题：</em></p><ul><li><p>基本思想</p><ul><li>自顶向下构造语法分析树, 根据<strong>输入符</strong>，选择合适的<strong>产生式</strong>推导<strong>最左非终结符</strong>, 直到推导出完整的输入串</li><li>最左非终结符也是当前语法分析树的<strong>最左非终结符节点</strong>, 代表<strong>最左推导</strong></li><li>替换后会在语法分析树上<strong>生成子节点</strong></li></ul></li><li><p>主要问题</p><blockquote><p>本质上是<strong>文法改造问题</strong>，都是基于<strong>上下文无关文法</strong>的改造</p></blockquote><ul><li><p>二义性问题</p><ul><li><p>问题描述：文法中存在句子有不只一棵<strong>语法分析树</strong></p><blockquote><p>注：不存在算法判断一个上下文无关文法是<strong>无二义性</strong>的，但可以给出一组<strong>充分条件</strong>，满足充分条件的文法是无二义性的</p><p>做题的时候尝试去寻找同一句型的多棵分析树即可</p></blockquote></li><li><p>解决方法：改造文法，引入<strong>细粒度的文法变量</strong>；或人为规定优先级</p><blockquote><p>例如：</p><ul><li>解决加法和乘法优先级问题：引入<strong>项</strong>和<strong>因子</strong>的文法符号</li><li>解决 <code>if</code>匹配问题：引入**“匹配”<strong>和</strong>“不匹配”**的文法符号<ul><li><code>if-else</code>的就近原则</li></ul></li></ul></blockquote></li></ul></li><li><p>回溯问题</p><ul><li><p>问题描述：多个<strong>候选式</strong>存在<strong>公共前缀</strong></p></li><li><p>解决方法：改造文法；提取左公因子（本质是在推迟决定）</p><ul><li><p>通过<strong>FIRST集</strong>和<strong>FOLLOW集</strong>判断是否会出现回溯</p></li><li><p>提取左公因子的一般形式：<code>S-&gt;cA|cB ----&gt; S-&gt;cS' S'-&gt;A|B</code></p><blockquote><p>把相同的留着，不同的交给新的文法变量去推</p></blockquote></li></ul></li></ul></li><li><p>左递归问题</p><ul><li><p>问题描述：直接左递归、间接左递归</p></li><li><p>解决方法：消除左递归</p><ul><li><p>消除<strong>直接左递归</strong>的一般形式：$A\rarr A\alpha_1|A\alpha_2|…|A\alpha_n|\beta_1|\beta_2|…|\beta_m $</p><ul><li><p>转化为：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>β</mi><mn>1</mn></msub><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>m</mi></msub><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">A\rarr\beta_1A&#x27;|\beta_2A&#x27;|...|\beta_mA&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">A&#x27;\rarr\alpha_1A&#x27;|\alpha_2A&#x27;|...|\alpha_nA&#x27;|\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣...∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">ϵ</span></span></span></span></p><blockquote><p>把不左递归的先推出来，原左递归的交给新的文法符号改成右递归，再加空</p><p>本质上是将左递归转换成了<strong>右递归</strong>，付出的代价是引入一新的<strong>非终结符</strong>和<strong>空产生式</strong>，注意最后的<strong>空产生式</strong></p></blockquote></li></ul></li></ul></li><li><p>消除<strong>间接左递归</strong>：先代入到最大编号，再消除直接左递归</p><ul><li>给所有产生式<strong>左部编号</strong>，按编号<strong>从小到大遍历</strong></li><li>如果出现<strong>左部编号大于右部开头编号</strong>，则出现左递归</li><li>若出现左递归，将相关产生式<strong>代入到左部编号最大的产生式</strong>中，转换成<strong>直接左递归</strong>，然后消除直接左递归</li></ul></li></ul></li></ul></li></ul></li></ul><hr><p><em>预测分析法的基本思想：</em></p><ul><li><p>预测分析:</p><ul><li>一般的自顶向下分析往往会因为<strong>产生式选择的不确定性</strong>而需要<strong>回溯</strong>，但<strong>预测分析</strong>就不需要回溯，它依据<strong>预测分析表</strong>，是一种<strong>确定的自顶向下分析方法</strong></li></ul></li><li><p>文法改造与检查：</p><ul><li><p>并不是所有文法都直接适用于自顶向下的分析，文法转换就是要<strong>改造这些文法</strong>以使其适合<strong>自顶向下的分析</strong>。</p><ul><li>消除文法的二义性</li><li>消除文法的回溯</li><li>消除文法的左递归</li></ul></li><li><p>改造文法后，还要检查文法是否为LL(1)的</p></li></ul></li></ul><hr><p><em>递归下降分析法的基本思想：</em></p><ul><li>根据文法产生式，定义可以递归调用的函数</li></ul><h3 id="4-3-预测分析法">4.3 预测分析法</h3><blockquote><p>总结</p><ol><li><p>构造与检查文法</p><ol><li>构造一般文法</li><li>改造文法：消除二义性、消除左递归、消除回溯</li><li>检查是否为LL(1)文法</li></ol></li><li><p>设计算法</p><ol><li>构造<strong>预测分析表</strong></li><li>非递归的预测分析：下推自动机</li></ol></li></ol></blockquote><p><em>重要集合的引入与计算：</em></p><ul><li><p>FIRST集</p><ul><li><p>定义：文法符号(串)经过<strong>若干步推导</strong>得到的所有符号(串)的<strong>首终结符</strong>的集合</p><ul><li><p>若干步：零步、一步、多步</p><blockquote><p>后面出现的所有“推导”，若无特殊说明，均指的是“经若干步推导”</p></blockquote></li><li><p>特例：若能推导出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>也加入FIRST集</p></li></ul></li><li><p>计算：不断包含右部“开头”符号的FIRST集</p><ul><li><p>终结符的FIRST集**：**只包含该终结符一个元素的集合</p></li><li><p><strong>非终结符FIRST集</strong>：<strong>不断包含右部“开头”符号的FIRST集</strong></p><ul><li>右部开头是<strong>终结符</strong>或右部为<strong>空</strong>：直接包含终结符或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></li><li>右部开头是<strong>非终结符</strong>：<ul><li>包含该非终结符的FIRST集（先不包括<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>）</li><li>同时若该非终结符能推导出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，则继续加入右边紧邻符号的FIRST集，直到不能推导出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></li><li>若都能推导出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，再将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>加入FIRST集中</li></ul></li></ul><blockquote><p><strong>文法符号串的FIRST集：</strong></p><ul><li>从左向右看，加入<strong>第一个符号的FIRST集</strong></li><li>若第一个符号能推导出$\epsilon <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，就累加下一个</mtext><mo>∗</mo><mo>∗</mo><mtext>符号的</mtext><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mtext>集</mtext><mo>∗</mo><mo>∗</mo><mtext>，直到不能再推出</mtext></mrow><annotation encoding="application/x-tex">，就累加下一个**符号的FIRST集**，直到不能再推出</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">，就累加下一个</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">符号的</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mord cjk_fallback">集</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">，直到不能再推出</span></span></span></span>\epsilon$</li><li>如果都能推导出$\epsilon <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>就再加入</mtext></mrow><annotation encoding="application/x-tex">就再加入</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">就再加入</span></span></span></span>\epsilon $</li></ul></blockquote></li></ul></li></ul></li><li><p>FOLLOW集</p><ul><li>定义：是<strong>非终结符</strong>相关的一种集合，即<strong>推导</strong>过程中可以<strong>紧跟在该非终结符右侧</strong>的<strong>终结符</strong>的集合</li><li>计算：不断包含<strong>右侧的FISRT集</strong>和作为右部结尾时<strong>左部的FOLLOW集</strong><ul><li>将<strong>结束标记</strong>加入开始符号的FOLLOW集中</li><li>加右边的FIRST集：单看<strong>产生式右部</strong>，跟在某一非终结符<strong>后面的符号串的FIRST集</strong>加入该非终结符的FOLLOW集中，但不能加入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></li><li>加左部的FOLLOW集：看<strong>整条产生式</strong>，<strong>右部结尾</strong>的非终结符，以及可能因右方非终结符推导出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>而<strong>变成右部结尾</strong>的非终结符，其FOLLOW集要<strong>包含</strong>左部非终结符的FOLLOW集</li></ul></li></ul></li><li><p>SELECT集</p><ul><li>定义：是产生式相关的一种集合，即推导过程中可以选择该产生式时的<strong>输入符号</strong>的集合</li><li>计算：产生式的SELECT集的计算<ul><li>若是空产生式，则为<strong>左部</strong>非终结符的<strong>FOLLOW集</strong></li><li>若非空产生式，则为<strong>右部</strong>符号串的<strong>FIRST集</strong>，不过若这个FIRST集中包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，就要去掉<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>再并上左部的FOLLOW集</li></ul></li></ul></li></ul><hr><p><em>适合预测分析的文法：</em></p><blockquote><p>目标：构造不需要回溯、可用于预测分析的文法（前提是要先适用于自顶向下分析）</p></blockquote><ul><li><p>S_文法</p><ul><li>产生式<strong>右部</strong>以<strong>终结符</strong>开始（不包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>产生式）</li><li>同一非终结符各个候选式的<strong>首终结符</strong>都不相同</li></ul></li><li><p>q_文法</p><ul><li>产生式<strong>右部</strong>或为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，或以<strong>终结符</strong>开始</li><li>具有相同左部的产生式有<strong>不相交的可选集</strong><ul><li>可选集：可以使用该产生式推导时的<strong>输入符号</strong>集合，称为这个产生式的可选集</li></ul></li></ul></li><li><p>LL(1)文法：同一非终结符各个<strong>产生式</strong>的<strong>SELECT集</strong>互不相交</p><blockquote><p>从<strong>左</strong>向右扫描，构造最<strong>左</strong>推导</p></blockquote><blockquote><p>下面这三条限制就是为了保证“同一非终结符各个产生式的<strong>SELECT集</strong>互不相交”，是<strong>所有非终结符</strong>都要满足的</p></blockquote><ul><li>同一非终结符的候选式的FISRT集互不相交</li><li>只能有一个候选式可以推出空，若存在这样的一个候选式，则还要求左部的FOLLOW集与所有候选式的FIRST集互不相交</li></ul></li></ul><hr><p><em>预测分析法的工作：</em></p><ul><li><p>预测分析的格局/表驱动的下推自动机</p><ul><li><p>控制程序：包含通用的控制<strong>算法</strong></p><blockquote><p>例如接下来要讲的表驱动的预测分析算法</p></blockquote></li><li><p>栈：分析栈，指导<strong>语法分析树</strong>的形成。初始时栈底符号为#，栈顶符号为文法开始符号</p><blockquote><p>预测分析中，栈中的内容就是<strong>句型</strong></p></blockquote></li><li><p>输入：<strong>输入</strong>缓冲区，#为输入串结束符</p></li><li><p>表：<strong>预测分析表M</strong></p><ul><li><p>内容：行是<strong>非终结符</strong>，列是<strong>输入符号和#</strong>，表项是以行非终结符为左部的产生式</p><blockquote><p>列输入符号要包含于表项产生式的SELECT集</p></blockquote></li><li><p>使用：栈顶非终结符作为行，当前输入作为列，找到表项中的产生式进行推导</p></li></ul></li></ul></li><li><p>预测分析表的构建</p><ul><li>对于任意产生式，只要输入符号在右部的FIRST集中，就可以选择</li><li>同时对于右部能推出空的产生式，输入符号在左部的FOLLOW集中时也可以选择</li></ul></li><li><p>**表驱动的预测分析法/**非递归的预测分析法：</p><ul><li><p>借助<strong>下推自动机和预测分析表</strong></p></li><li><p>对比输入符号与栈顶符号，直到<strong>栈顶和输入</strong>都为结束符</p></li><li><p>若栈顶符号为<strong>终结符</strong></p><ul><li>二者<strong>相等</strong>，则弹栈，消耗输入符号，读头后移</li><li>二者不相等，则报错</li></ul></li><li><p>若栈顶符号为<strong>非终结符</strong>：查询预测分析表得到<strong>产生式</strong>，左部弹栈，右部入栈（<strong>自右向左</strong>入栈）不消耗<strong>输入符号</strong></p></li></ul></li></ul><hr><p><em>预测分析法的错误处理：</em></p><ul><li><p>错误检测</p><ul><li>最左/栈顶<strong>终结符</strong>与当前<strong>输入符号不匹配</strong></li><li>最左/栈顶<strong>非终结符</strong>与当前输入符号在<strong>预测分析表</strong>中<strong>无可用产生式</strong></li></ul></li><li><p>错误恢复：恐慌模式</p><ul><li><p>最左/栈顶<strong>终结符</strong>与当前输入不匹配时：直接忽略输入符号（删除）</p></li><li><p>最左/栈顶<strong>非终结符</strong>与当前输入符号在<strong>预测分析表</strong>中无可用产生式：</p><ul><li><p>若输入符号不在该非终结符的<strong>FOLLOW集</strong>中，则忽略输入符号（删除）</p></li><li><p>若输入符号在该非终结符的<strong>FOLLOW集</strong>中（同步词法单元），则忽略/弹出该非终结符</p><blockquote><p>FOLLOW集本质就是非终结符<strong>推出空</strong>时的SELECT集</p></blockquote></li></ul></li></ul></li></ul><h3 id="4-4-递归下降分析法">4.4 递归下降分析法</h3><ul><li><p>文法：要求文法是LL(1)的</p></li><li><p>分析：从文法<strong>开始符号的产生式</strong>开始，遍历右部符号（即<strong>调用文法开始符号的过程</strong>）</p><blockquote><p>遍历符号的过程中，每次取得一个输入，终结符消耗输入，非终结符根据输入选择产生式</p></blockquote><ul><li><p>若为终结符，则必须等于当前输入符号，否则报错</p></li><li><p>若为非终结符，则“递归”调用<strong>该非终结符对应的过程</strong></p><blockquote><p>非终结符对应的过程：</p><ul><li>若有<strong>多条产生式</strong>，先根据输入和SELECT集选择产生式</li><li>遍历产生式右部符号，若是终结符，则当前输入必须与之相等，否则报错；若是非终结符，则调用其过程</li></ul></blockquote></li><li><p>最后一个输入符号必须是终结符</p></li></ul></li></ul><h3 id="4-5-自底向上分析概述">4.5 自底向上分析概述</h3><p><em>自底向上分析的基本思想与主要问题：</em></p><ul><li><p>基本思想</p><ul><li><p>自底向上构造语法分析树, 根据<strong>输入符,</strong> 选择合适的<strong>句柄</strong>进行归约, 直至将输入符串归约为文法开始符号</p><ul><li>句柄：当前句型的<strong>最左直接短语</strong></li><li>归约句柄：<strong>最左归约</strong></li></ul></li><li><p>移入-归约的思想</p><ul><li><p>自底向上分析也叫<strong>移入-归约分析</strong></p><blockquote><p>借助<strong>栈</strong>来理解</p></blockquote></li><li><p>移入：将<strong>输入符号</strong>压入栈</p></li><li><p>归约：从栈中依次<strong>弹出</strong>能构成<strong>产生式右部</strong>的若干个符号，然后将<strong>左部压入栈</strong>（最左归约）</p><blockquote><p>最左归约称为规范归约、最右推导称为规范推导，每次用于归约的符号串称之为<strong>句柄</strong>，也就是<strong>产生式右部</strong></p></blockquote></li></ul></li></ul></li><li><p>主要问题</p><ul><li>何时移入、何时归约、归约时用什么归约</li><li>移入-归约分析中的关键问题是<strong>正确识别句柄</strong></li></ul></li><li><p>系统框架</p><ul><li><p>控制程序</p></li><li><p>栈：分析栈</p><blockquote><p>自底向上分析中，<strong>栈和输入</strong>中的内容组合起来是(规范)句型，栈中的内容只是句型的<strong>前缀</strong></p></blockquote></li><li><p>输入：输入缓冲区</p></li><li><p>表：指导<strong>语法分析树</strong>的形成，确定<strong>移进和归约</strong>的时机</p></li></ul></li></ul><hr><p><em>优先法的基本思想：</em></p><ul><li><p>优先级的概念：优先级指的是<strong>归约的优先级</strong></p></li><li><p>优先级的作用：确定何时移进何时规约</p><ul><li><strong>栈顶</strong>最近的终结符优先级<strong>小于或等于输入</strong>符号：移入</li><li><strong>栈顶</strong>最近的终结符优先级<strong>大于输入</strong>符号：归约<ul><li>归约的句柄是从栈顶到第一次优先级<strong>小于</strong>输入的位置（不包括）</li></ul></li></ul></li><li><p>核心问题：优先级的确定</p></li></ul><hr><p><em>状态法/LR分析的基本思想：</em></p><blockquote><p>从<strong>左</strong>到右扫描，反向构造最<strong>右</strong>推导</p></blockquote><ul><li><p><strong>状态</strong>：</p><ul><li><p>用<strong>状态</strong>表示<strong>句柄识别的进展程度</strong></p><blockquote><p>状态的可视化表示就是在产生式右部插入一个圆点，代表<strong>离可以使用该产生式归约</strong>还差什么符号，<strong>圆点右边的符号</strong>就是需要的符号</p></blockquote></li><li><p>移进状态：圆点后面是终结符</p></li><li><p>待约状态：圆点后面是非终结符</p></li><li><p>归约状态：圆点后面没有符号</p></li></ul></li><li><p><strong>栈</strong>：</p><ul><li>有两个栈，<strong>状态栈与符号栈</strong>，它们是平行的（栈中<strong>元素个数保持相等</strong>）</li></ul></li><li><p><strong>分析表</strong>：</p><ul><li><p>只要构造出正确的<strong>分析表</strong>就可以直观且快速地识别了，分析表的概述如下：</p></li><li><p>内容：</p><ul><li><p><strong>一行</strong>对应一个<strong>状态</strong>，一个状态的<strong>一条边</strong>对应于该行的<strong>一个表项</strong></p><blockquote><p>这里的<strong>边</strong>指的是自动机中的边</p></blockquote></li><li><p><strong>一列</strong>对应一个<strong>文法符号</strong>，终结符和结束符在<strong>ACTION列组</strong>，非终结符在<strong>GOTO列组</strong></p></li></ul></li><li><p>应用：</p><ul><li><p>从状态栈只有初始状态0、符号栈只有结束符$开始，根据**当前状态(行)和输入符号(列)**找到表项，执行对应的操作，直到读取输入后找到的表项为acc或err</p><blockquote><p>acc时，栈中为S，输入缓冲中为#</p></blockquote></li><li><p>表项中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">s_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表将<strong>所在列对应符号和状态n</strong>同时压入栈符号栈和状态栈；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">r_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表使用第n个产生式归约，同时弹出<strong>产生式右部</strong>符号(串)和与其<strong>平行的状态</strong>，并压入<strong>左部非终结符</strong>，再根据<strong>当前栈顶状态</strong>和<strong>该非终结符</strong>找到GOTO列组的项k，这代表着再<strong>将状态k压入栈</strong>；acc代表成功识别，err代表出错</p><blockquote><p>所以，<strong>构造出文法的分析表</strong>是LR分析的关键</p></blockquote></li></ul></li></ul></li></ul><h3 id="4-4-算符优先分析法">4.4 算符优先分析法</h3><p><em>适合算符优先分析的文法：</em></p><ul><li><p>算符文法：</p><ul><li>文法中不存在具有<strong>相邻非终结符</strong>的产生式</li></ul></li><li><p>算符优先文法：</p><ul><li><p>定义：可以根据产生式推断出<strong>不矛盾优先级</strong>关系的<strong>算符文法</strong></p></li><li><p>终结符优先级的确定：</p><ul><li><p><strong>相邻或只间隔一个非终结符</strong>，则优先级相等</p></li><li><p>经由非终结符<strong>推导</strong>至少一步后<strong>相邻或只间隔一个非终结符</strong>，则被推导出的优先级更高，且应当认为<strong>左边</strong>的处于<strong>栈</strong>中，<strong>右边</strong>的处于<strong>输入缓冲</strong>中</p><blockquote><p>对于不能通过产生式判断优先级的算符文法，也可以<strong>人为规定优先级</strong></p></blockquote></li></ul></li></ul></li></ul><hr><p><em>算符优先矩阵：</em></p><ul><li><p>FIRSTOP与LASTOP</p><ul><li>非终结符的FIRSTOP集：该非终结符经过至少一步推导得到的<strong>串首终结符或</strong>去掉串首的<strong>一个非终结符</strong>后成为串首终结符的集合</li><li>非终结符的LASTOP集：该非终结符经过至少一步推导得到的<strong>串尾终结符或</strong>去掉串尾的<strong>一个非终结符</strong>后成为串首终结符的集合</li></ul></li><li><p>算符优先矩阵</p><ul><li><p>内容：</p><ul><li><p>行：栈内符号</p></li><li><p>列：输入符号</p><blockquote><p>注意行列不要颠倒；也可以包括#，栈中的#对应于FIRSTOP，输入中的#对应于LASTOP</p></blockquote></li></ul></li><li><p>填写：</p><ul><li>遍历所有产生式右部的所有相邻符号，确定优先级</li><li>应当认为左边的处于栈中，右边的处于输入缓冲中</li></ul></li></ul></li><li><p>优先函数</p><ul><li><p>构造方法：</p><ul><li>通过算符优先矩阵规定的偏序关系，构造DAG，计算拓扑排序，基于拓扑排序构造优先函数</li></ul></li><li><p>优点：节省存储空间</p></li><li><p>缺点：错误检测能力降低</p><blockquote><p>详见笔记仓库</p></blockquote></li></ul></li></ul><hr><p><em>算符优先法的素短语：</em></p><ul><li>素短语：<strong>含终结符</strong>且不含有更小<strong>含终结符短语</strong>的短语</li><li>算符优先法归约的是<strong>最左素短语</strong>，并非<strong>最左直接短语</strong></li></ul><h3 id="4-5-LR分析法">4.5 LR分析法</h3><blockquote><p>⭐️LR系列的相关概念较多，暂不探讨定义这些概念的内在原因，只要能将其<strong>应用到问题中</strong>即可</p></blockquote><p><em>LR(0)分析：</em></p><ul><li><p>LR(0)相关概念</p><ul><li><p><strong>增广文法</strong>：新增开始符号，它能推导出原开始符号（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S&#x27;\rarr S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>）</p><blockquote><p>增广文法让文法<strong>开始符号</strong>仅出现在一个产生式的<strong>左边</strong>，这样分析器<strong>只有一个接受状态</strong></p></blockquote></li><li><p><strong>项目</strong>：项目描述了<strong>句柄识别的状态</strong></p><ul><li><p>移进项目</p></li><li><p>待约项目</p><blockquote><p>开始符号对应的待约项目称为初始项目（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mo>⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S&#x27;\rarr\cdot S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⋅</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>）</p></blockquote></li><li><p>归约项目</p><blockquote><p>开始符号对应的归约项目称为接收项目（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mi>S</mi><mo>⋅</mo></mrow><annotation encoding="application/x-tex">S&#x27;\rarr S\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">⋅</span></span></span></span>）</p><p>产生式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">A\rarr\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>只生成一个项目<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mo>⋅</mo></mrow><annotation encoding="application/x-tex">A\rarr\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">⋅</span></span></span></span></p></blockquote></li></ul></li><li><p><strong>后继项目</strong>：同属一个产生式但圆点只差一个符号，圆点在后的是后继项目</p></li><li><p><strong>等价的项目/项目集闭包</strong>：对于一个<strong>待约</strong>项目，它的等价项目就是，以该待约项目<strong>圆点后面的符号</strong>为<strong>左部</strong>的所有产生式将圆点放在<strong>右部第一个符号前</strong>得到的项目；被等价推出的<strong>待约</strong>项目可以继续等价推出，直到不能再推出新的待约项目。这样推出的所有项目都放在一个集合中，这个集合就是<strong>项目集闭包</strong>。</p><blockquote><p>对于移进项目和归约项目，它们可以被待约项目等价推出，但不能等价推出别的项目。如果它们不能由某个待约项目等价推出，则它们没有等价项目</p></blockquote></li><li><p>项目集对应于<strong>文法符号X</strong>(包括终结符和非终结符)的<strong>后继项目集闭包</strong>（<code>GOTO(I, X)</code>函数）：项目集中<strong>圆点右紧邻符号为X</strong>的每一个项目的<strong>后继</strong>项目集闭包的并</p></li></ul></li><li><p>LR(0)自动机与分析表</p><ul><li><p>自动机的构造</p><ul><li>初始项目（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mo>⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S&#x27;\rarr\cdot S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⋅</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>）的<strong>项目集闭包</strong>构成<strong>状态0</strong></li><li>对于<strong>每一个现有状态</strong>，求其对于<strong>每一个文法符号(包括终结符和非终结符)<strong>的后继项目集闭包（<code>GOTO(I, X)</code>），若 <code>GOTO(I, X)</code>不为空，则将其作为一个新的状态（如果是已经存在的状态就不必当成新状态了），并生成一条当前状态指向 <code>GOTO(T, X)</code>对应状态的</strong>有向边</strong>，边上的符号为当前文法符号</li><li>循环执行2<strong>直到不再增加有向边</strong></li></ul></li><li><p>分析表的构造</p><ul><li><p>行：所有**状态；**列：ACTION列（所有终结符+结束符）和GOTO列（除了增广的非终结符）</p></li><li><p><strong>接收项目</strong>是单独在一个状态里，对应<strong>接收状态</strong>，在表中与结束符$形成表项acc</p></li><li><p>对于一个状态i（一行）</p><blockquote><p>一个状态中若既有<strong>归约项目</strong>又有其他类型的项目，则会出现冲突，这里暂不考虑</p></blockquote><ul><li>出边上是<strong>非终结符</strong>的，对应该行的<strong>GOTO表项</strong>，为有向边指向的状态编号j</li><li>出边上是<strong>终结符</strong>的，对应该行的<strong>ACTION表项</strong>，为有向边指向的状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">s_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li><li>若<strong>没有出边</strong>，或者说状态中<strong>只有一个归约项目</strong>，则该行的ACTION表项全为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">r_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（k为该归约项目对应的<strong>产生式编号</strong>）</li></ul></li></ul></li></ul></li><li><p>LR(0)会有<strong>移进/归约</strong>冲突和<strong>归约/归约</strong>冲突</p><blockquote><p>总得来说，就是该不该归约的问题</p></blockquote><ul><li>对应到自动机中，就是一个状态中<strong>同时存在归约项目和其他类型项目</strong>，或者同时存在<strong>多个归约项目</strong>，导致遇到下一个输入时无法判断执行什么动作</li><li>对应到分析表中，就是ACTION列组的<strong>一个表项</strong>会有<strong>两个可选值</strong></li><li>出现问题的本质原因是，LR(0)分析没有<strong>向前查看符号</strong>，没考虑<strong>上下文环境</strong></li></ul></li></ul><hr><p><em>SLR分析：</em></p><ul><li><p>SLR分析基本思想</p><blockquote><p>S：Simple，仅通过FOLLOW集化解冲突</p></blockquote><ul><li><p>是对LR(0)分析的改进，<strong>在LR(0)分析的基础上</strong>，不是<strong>子成分</strong>都全了就能归约的，因为归约后左部符号的<strong>FOLLOW集</strong>中可能没有该输入符，也就是归约后的符号可能不是<strong>待分析句子中的一个成分</strong></p></li><li><p>当遇到LR(0)中所述冲突时，要考察两种集合(是两种，不是两个。第一种里只有一个，第二种里可以有多个)：</p><ul><li>第一种是状态中<strong>所有移进/待约项目</strong>圆点右侧符号构成的集合，</li><li>第二种是状态中所有<strong>归约项目</strong>对应产生式左部非终结符的<strong>所有FOLLOW集</strong>。</li></ul></li><li><p>当这些集合两两不相交时：</p><blockquote><p>若不能做到两两不相交，则说明SLR无法解决这种冲突</p></blockquote><ul><li>若<strong>输入符号</strong>在圆点右侧符号构成的集合中，则执行对应的移进ACTION；</li><li>若<strong>输入符号</strong>在某个归约项目左部的FOLLOW集中，则执行对应的归约ACTION。</li><li>其他情况报错</li></ul></li></ul></li><li><p>SLR自动机与分析表</p><ul><li><p>自动机的构造：与LR(0)一样的</p></li><li><p>分析表的构造：在LR(0)构造的分析表基础上，只有<strong>ACTION列的终结符(输入符号)<strong>在对应状态中归约项目左部符号的</strong>FOLLOW集</strong>中时，才进行归约，否则的话，要么是<strong>移进</strong>，要么<strong>表项为空</strong></p><blockquote><p>若这样做之后一个表项中还是会留下多个动作，则说明SLR无法解决这种冲突</p></blockquote></li></ul></li><li><p>SLR分析中的冲突</p><ul><li>上述的两种集合不能做到<strong>两两不相交</strong></li><li>本质原因是，对于归约项目，输入符号在其左部<strong>FOLLOW集</strong>中，只是能归约一个<strong>必要条件</strong>，并非充分条件</li></ul></li></ul><hr><p><em>LR(1)分析：</em></p><ul><li><p>基本思想与概念</p><ul><li><p>在LR分析的<strong>特定位置</strong>，对于非终结符A，并非FOLLOW(A)中的所有符号都可以接在A后面，所以并不是输入符在FOLLOW(A)中了就可以使用以A为左部的这条产生式进行归约，我们需要找到<strong>非终结符A在特定位置的后继符</strong></p><blockquote><p>也就是说，需要考虑程序<strong>上下文</strong>，而LR(1)就是在考虑<strong>下文的第1个符号</strong></p></blockquote></li><li><p>规范LR(1)项目：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>β</mi><mo separator="true">,</mo><mi>a</mi><mtext>（第一分量</mtext><mo separator="true">,</mo><mtext>第二分量）</mtext></mrow><annotation encoding="application/x-tex">A\rarr\alpha\cdot\beta, a（第一分量,第二分量）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">（第一分量</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">第二分量）</span></span></span></span></p><ul><li><p>第一分量：右部带圆点的产生式（就是之前对于项目的定义）</p></li><li><p>第二分量：展望符，代表当前状态下A后面可以紧跟的终结符。对于归约项目（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mo separator="true">,</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">A\rarr\alpha\cdot,a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span></span></span></span>），代表输入符号为a时才能使用该产生式归约</p><blockquote><p>对于移入项目和待约项目（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo>⋅</mo><mi>β</mi><mo separator="true">,</mo><mi>a</mi><mtext>且</mtext><mi>β</mi><mo mathvariant="normal">≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">A\rarr\alpha\cdot\beta, a且\beta\ne\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">且</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>），<strong>展望符与之无关</strong>，但为了定义的完整，把它写出来了</p></blockquote></li></ul></li><li><p><strong>等价</strong>LR(1)项目/<strong>展望符</strong>的计算：</p><ul><li><p>第一分量：就是之前定义过的<strong>等价项目</strong></p></li><li><p>第二分量/展望符：要看等价项目产生式的<strong>左部</strong>在原项目中<strong>右边的符号(串)</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>。若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>能推出空（或者<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>本身就是空的），则直接继承相同的展望符构成项目, 同时，对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>中的每个终结符，都可以再作为<strong>展望符</strong>与相同的<strong>第一分量</strong>构成一个等价的项目</p><blockquote><p>从计算展望符的角度讲，就要从初始项目$S’\rarr\cdot S,$ $出发按照自动机的构造方法去计算了，移进的时候展望符不变；第一分量相同的项目，可以合并到一起写，<strong>展望符用/隔开</strong>，但要知道这是多个项目</p></blockquote></li></ul></li></ul></li><li><p>LR(1)的自动机和分析表</p><blockquote><p>相比于LR(0)，LR(1)对于CLOSURE、GOTO、项集族、自动机、分析表构造算法都做了适合于<strong>展望符与归约项目</strong>的修改</p></blockquote><ul><li><p>自动机的构造：从初始项目$S’\rarr\cdot S,$ $开始，与LR(0)的生成规则类似，只是在计算项目等价的时候要考虑<strong>展望符</strong></p></li><li><p>分析表的构造：</p><ul><li><p>对于不涉及归约项目的状态，处理方法与LR(0)相同</p></li><li><p>对于涉及<strong>归约项目</strong>的状态，只有ACTION列(输入符号)是状态中归约项目的<strong>展望符</strong>时才能规约(且必须归约)</p><blockquote><p>之前构造SLR的时候，是遇到左部FOLLOW集中的符号都能规约</p></blockquote></li></ul></li></ul></li></ul><hr><p><em>LALR分析：</em></p><ul><li><p>LALR基本思想与概念</p><ul><li>LR(1)的状态过多，其中有些状态是可以合并的</li><li><strong>同心项目集</strong>（同心状态）：只保留第一分量时(重复的只留一个)，完全相同的项目集</li><li>同心项目集是可以合并成一个状态的，其实是在对<strong>展望符</strong>进行合并</li></ul></li><li><p>LALR的自动机与状态表</p><ul><li>自动机：在构造出的LR(1)自动机基础上，合并同心项目并修改边</li><li>分析表：与LR(1)的构造方法相同</li></ul></li><li><p>LALR的问题</p><ul><li><p>归约-归约冲突：同一个输入符，不知道该用状态中的哪个产生式归约了，因为它们的<strong>展望符</strong>都相同</p></li><li><p>推迟错误发现：合并同心项集后，虽然不产生冲突，但可能会<strong>推迟错误的发现</strong></p><blockquote><p>LALR分析法可能会作多余的<strong>归约动作</strong>，但绝不会作错误的<strong>移进操作</strong>。因为LALR其实是在合并展望符集合，而展望符与归约有关，与移进无关</p></blockquote></li></ul></li><li><p>LALR的特点</p><ul><li>形式上与LR(1)相同，都有<strong>展望符</strong></li><li>大小上与LR(0)/SLR相当，因为<strong>合并了状态</strong></li><li>分析能力上，SLR&lt;LALR&lt;LR。相比于SLR，LALR细化了状态；相比于LR(1)，LALR会延迟错误的发现。</li></ul></li></ul><hr><p><em>错误处理：</em></p><ul><li><p>当没有可选动作时，在符号栈中寻找上一个<strong>归约出来的非终结符</strong>，然后丢弃输入符号直至当前输入在该非终结符的FOLLOW集中，然后移进该输入，再压入一个与该非终结符平等的状态，继续分析</p><blockquote><p>本质上是找到上一次正确归约的语法分成，跳过当前出错的语法成分，继续分析下一个语法成分</p></blockquote></li></ul><h2 id="5-语法制导翻译">5 语法制导翻译</h2><blockquote><p>对产生式的理解：在编译原理中，产生式往往有着具体到代码层面<strong>实际意义</strong>，产生式的<strong>结构/应用场景</strong>决定了其在翻译过程中的实际意义</p><p>对语义分析的理解：语法分析中用产生式进行推导/规约，其实就是在<strong>分析语法结构</strong>，找到结构后就要做<strong>翻译动作</strong>，进行一些<strong>静态语义检查</strong>和<strong>中间代码生成</strong></p></blockquote><h3 id="5-1-相关概念与基本思想">5.1 相关概念与基本思想</h3><ul><li><p>概念：将<strong>静态语义检查</strong>和<strong>中间代码生成</strong>结合到语法分析中进行的技术称为<strong>语法制导翻译</strong></p></li><li><p>基本思想：语法制导翻译的基本思想是，用<strong>产生式</strong>代表<strong>语法规则</strong>，再为产生式关联<strong>语义规则</strong>，在<strong>构造语法分析树</strong>时通过语义规则<strong>计算语义属性值或执行某些动作</strong></p></li><li><p>语法制导定义SDD：</p><blockquote><p>对上下文无关文法的推广</p></blockquote><ul><li><p><strong>语义属性</strong>：为每个文法符号设置若干<strong>语义属性</strong></p><ul><li><p><strong>语义属性的作用</strong>：在推导/规约过程中<strong>传递信息</strong></p><blockquote><p>不传递的话之后要用就找不到了</p></blockquote></li></ul></li><li><p><strong>语义规则</strong>：为每条产生式关联若干<strong>语义规则</strong>，语义规则用于<strong>计算语义属性值</strong></p></li></ul></li><li><p>语法制导翻译方案SDT：</p><ul><li><p><strong>语义动作</strong>：在SDD的基础上，直接<strong>将语义规则嵌入产生式右部</strong>，称为<strong>语义动作</strong></p><blockquote><p>将<strong>属性值计算</strong>的工作解耦给<strong>语义动作</strong></p></blockquote><ul><li><strong>语义动作的执行：<strong>在产生式中的</strong>位置</strong>决定了其<strong>执行时间</strong></li></ul></li><li><p><strong>SDT与SDD的关系</strong>：SDT可以看作是SDD的<strong>具体实施方案</strong>，有SDT就能按照一定的<strong>工作流程</strong>计算所有语义属性值</p><blockquote><p>SDT通用的实现方法：首先建立一棵<strong>语法分析树</strong>，然后按照<strong>从左到右的深度优先顺序</strong>来执行这些动作</p></blockquote></li></ul></li></ul><h3 id="5-2-语法制导定义">5.2 语法制导定义</h3><ul><li><p>文法符号的属性：</p><ul><li><strong>综合属性</strong>：<ul><li>非终结符的综合属性：只能通过<strong>子结点</strong>或其本身的属性值定义</li><li>终结符的综合属性/<strong>固有属性</strong>：由词法分析器提供的词法值（<strong>token属性值</strong>）</li></ul></li><li><strong>继承属性</strong>：<ul><li>非终结符的综合属性：只能通过<strong>父结点、兄弟结点</strong>或其本身的属性值定义</li><li>终结符没有继承属性</li></ul></li></ul></li><li><p>副作用与属性文法：</p><ul><li><p><strong>副作用</strong>：有的语义规则目的是产生<strong>副作用</strong>，用到其他结点的属性值，但不计算新的属性值，可以理解成在计算<strong>虚属性</strong></p><blockquote><p>比如打印、在符号表中创建记录并设置类型等等</p></blockquote></li><li><p><strong>属性文法</strong>：没有副作用的SDD称为<strong>属性文法</strong>，仅通过其他属性值和常量定义属性值</p></li></ul></li><li><p>属性求值方法：</p><ul><li>属性求值遵循的顺序：<strong>依赖图的拓扑排序</strong></li><li>依赖图：依赖图是描述分析树<strong>结点属性的依赖关系</strong>的有向图，以语法分析树为基础图，若结点X有属性a，则将a也作为依赖图中的结点（画在X旁边）；若属性X.a的值计算依赖于Y.b，则添加一条Y.b指向X.a的有向边；如果有“虚属性”，也可以画在结点旁边。</li><li>求值的可行性：一个SDD不一定存在可行的求值顺序，有可能发生<strong>循环依赖</strong></li></ul></li><li><p>属性定义：</p><ul><li><p>SDD的有用子类，一定存在一个<strong>求值顺序</strong></p></li><li><p><strong>S-属性定义/S-属性文法/S属性的SDD</strong>：只具有<strong>综合属性</strong>的SDD</p><ul><li>属性求值方法：S-SDD可以按照语法分析树<strong>自底向上</strong>的顺序计算各属性值</li><li>在语法分析中的实现：S-SDD可以<strong>在自底向上的语法分析</strong>中实现</li></ul></li><li><p><strong>L-属性定义/L-属性文法/L属性的SDD</strong>：每个属性要么是<strong>综合属性</strong>，要么是只依赖 <strong>父结点继承</strong>属性、<strong>左兄弟</strong>结点属性、<strong>本身</strong>属性 的<strong>继承属性</strong>（但本身的属性不能形成<strong>环路</strong>）</p><blockquote><p>语法分析均为<strong>最左推导或最左归约</strong>，所以要求<strong>左兄弟</strong></p></blockquote><ul><li>属性求值方法：从左到右遍历子结点，在遍历到符号前，计算其<strong>继承属性</strong>，遍历结束后计算父节点<strong>综合属性</strong></li></ul></li></ul></li></ul><h3 id="5-3-语法制导翻译方案">5.3 语法制导翻译方案</h3><ul><li><p>基本思想</p><ul><li>语法制导翻译方案也叫<strong>翻译模式</strong>，给出了使用语义规则进行计算的<strong>顺序</strong></li></ul></li><li><p>SDD向SDT的转换</p><ul><li>S-SDD转换为SDT：<ul><li>将每个语义动作都放在<strong>产生式右部的最右端</strong>，代表在<strong>规约</strong>时计算属性值</li><li>如果S-SDD的<strong>基本文法</strong>可以使用LR分析技术，那它的SDT就可以在LR分析过程中实现</li></ul></li><li>L-SDD转换为SDT：<ul><li>计算产生式左部符号<strong>综合属性</strong>的语义动作放在<strong>产生式右部的最右端</strong></li><li>计算产生式右部非终结符<strong>继承属性</strong>的语义动作插入<strong>非终结符紧邻左边</strong></li></ul></li></ul></li><li><p>S-SDD的自底向上翻译</p><ul><li>扩展LR语法<strong>分析栈</strong>：在分析栈中附加一个域存储<strong>综合属性</strong>（值或指针），与文法符号平行（语义栈）</li><li>分析栈的工作：在<strong>规约</strong>时执行语义动作，找到栈中对应位置的依赖，计算属性值，存入附加域</li></ul></li><li><p>S-SDD的预测分析翻译</p><ul><li><p>文法改造</p><ul><li><p>消除左递归</p><ul><li><p>先消除左递归，再添加语义规则</p></li><li><p>先添加语义规则，再消除左递归，并<strong>添加新的语义规则</strong></p><blockquote><p>这就需要引入<strong>继承属性</strong>并插入<strong>语义动作</strong>，传递信息</p></blockquote></li></ul></li></ul></li><li><p>其他部分与L-SDD的翻译一致</p></li></ul></li><li><p>L-SDD的预测分析翻译</p><ul><li><p>文法改造</p></li><li><p>扩展预测分析栈</p><ul><li>继承属性在即将出现时计算，存放在**与非终结符平行的记录 <code>A</code>**中（横向扩展、语义栈）</li><li>综合属性在子结点分析完后计算，**新增一条综合记录 <code>Asyn</code>**存放（纵向扩展）</li><li>增加一种<strong>动作记录 <code>action</code></strong>，指向要执行的动作（纵向扩展）</li></ul></li><li><p>分析栈的工作</p><ul><li><p>依然按照右部<strong>从右向左</strong>的顺序入栈，<strong>综合记录 <code>syn</code>先</strong>于本身记录入栈，动作记录 <code>action</code>同样按照所处位置入栈</p><blockquote><p>往往会给语义动作对应的动作记录取一个简洁的<strong>别名</strong></p></blockquote></li><li><p>栈内元素的出栈行为：</p><ul><li><p>栈顶为<strong>动作记录</strong>时，直接出栈并执行对应动作；</p></li><li><p>栈顶为<strong>综合记录</strong>时，直接出栈并将<strong>综合属性值传递</strong>给栈内的特定语义动作；</p></li><li><p><strong>变量本身记录</strong>出栈时，若有继承属性，则要将<strong>继承属性值传递</strong>给入栈的特定语义动作；</p></li><li><p><strong>终结符</strong>出栈时要将<strong>综合属性值</strong>传递给栈中的特定语义动作</p><blockquote><p>这里的“传递”具体到程序上就是 <code>stack[top+-n].xxx=stack[top].xxx, top=top+-n</code>，其中 <code>top+-n</code>对应了语义动作出现的位置</p></blockquote></li></ul></li><li><p><strong>综合属性</strong>的计算：综合属性在对应产生式右部<strong>最右端语义动作出栈</strong>时计算</p></li><li><p><strong>继承属性</strong>的计算：变量本身记录的继承属性在对应产生式<strong>紧邻左边动作出栈</strong>时计算</p><blockquote><p>这里的“计算”具体到程序上，也是给 <code>stk[top+-n]</code>赋值，涉及到一些计算，其中 <code>top+-n</code>对应了综合记录或变量本身记录出现的位置</p></blockquote></li></ul></li></ul></li><li><p>L-SDD的递归下降分析翻译</p><ul><li><p>文法改造</p></li><li><p>在<strong>递归下降分析</strong>基础上，将非终结符的过程扩展为<strong>函数</strong>，参数为左部的<strong>继承属性</strong>，返回值为左部的<strong>综合属性</strong></p><blockquote><p>递归的预测分析中过程调用的框架在这里要沿用</p></blockquote></li><li><p>对右部符号的每个属性都设置<strong>局部变量</strong></p><blockquote><p>函数返回值由综合属性的局部变量接收</p></blockquote></li><li><p>将每个<strong>语义动作</strong>的代码依次加入函数体，使用对应的变量书写其动作逻辑</p><ul><li><p>继承属性局部变量的计算：按照<strong>语义动作</strong>计算并赋值给对应局部变量</p></li><li><p>综合属性局部变量的计算：调用非终结符对应的函数</p><blockquote><p>终结符的话直接从token中取值</p></blockquote></li></ul></li></ul></li><li><p>L-SDD的自底向上翻译</p><ul><li><p><strong>修改文法</strong>以适应自底向上</p><ul><li><p>用各个“<strong>标记非终结符</strong>”替换<strong>内嵌</strong>的各个<strong>语义动作</strong>，每个标记非终结符都对应一条空产生式</p></li><li><p>标记非终结符的空产生式最右端添加新语义动作</p><ul><li><p>将原动作依赖的属性作为<strong>标记非终结符的继承属性</strong></p></li><li><p>将原动作要计算的属性作为<strong>标记非终结符的综合属性</strong>来计算</p><blockquote><p>可以证明，如果一个文法是LL的，那么标记非终结符可以插入到产生式的任何位置，并且得到的文法是LR文法</p></blockquote></li></ul></li></ul></li><li><p>分析栈的工作</p><ul><li>与S-SDD基本一致，原继承属性的计算变成了<strong>对标记非终结符综合属性的计算</strong></li><li>计算标记非终结符时，要结合原产生式和继承属性的实际情况确定依赖位置和计算方式</li></ul></li></ul></li></ul><h2 id="6-语义分析与中间代码生成">6 语义分析与中间代码生成</h2><blockquote><p>这一小节十分需要用具体的例子辅助理解，详见编译原理随堂笔记仓库</p></blockquote><h3 id="6-0-中间代码的表示形式">6.0 中间代码的表示形式</h3><ul><li><p>逆波兰表示</p></li><li><p>三地址码</p><ul><li><p>定义： 每条指令最多只能包含<strong>三个地址</strong>， 两个操作数地址和一个结果地址</p></li><li><p>指令类型</p><ul><li><p>算术与赋值：<code>x := y op z</code>、<code>x[i] := y[j]</code>、<code>*x := &amp;y</code></p><blockquote><p><strong>多维数组</strong>需要计算出<strong>一维下标</strong></p></blockquote></li><li><p>跳转</p><ul><li>无条件跳转：<code>goto L</code></li><li>条件跳转：<code>if x relop y goto L</code>、<code>if x goto L</code></li></ul></li><li><p>过程调用与返回</p><ul><li>指明参数：<code>param x</code></li><li>过程调用：<code>y = call p, n</code></li><li>返回：<code>return y</code></li></ul></li></ul></li><li><p>表示形式：四元式</p></li></ul></li></ul><h3 id="6-1-声明语句的翻译">6.1 声明语句的翻译</h3><p><em>主要任务/语义动作的主要内容：</em></p><ul><li><p>类型：通过<strong>类型表达式</strong>，收集<strong>标识符类型</strong>等属性信息</p><ul><li>类型检查</li><li>辅助翻译</li></ul></li><li><p>宽度和相对地址：由类型表达式计算<strong>宽度</strong>，从而为每个标识符分配一个<strong>相对地址</strong></p></li><li><p>符号表：将标识符类型和相对地址等信息保存至对应<strong>符号表</strong>。如果是嵌套声明，还要正确构建内层与外层符号表的访问链。</p></li></ul><hr><p><em>类型表达式(Type Expreessions)：</em></p><ul><li><p><strong>基本类型</strong>是一种类型表达式，常见基本类型有：</p><ul><li><code>integer real char boolean type_error void</code></li></ul></li><li><p>可以给类型表达式命名，<strong>类型名</strong>也是一种类型表达式</p></li><li><p><strong>类型构造符</strong>作用于类型表达式可以构成新的类型表达式</p><ul><li><p>数组构造符 <code>array(elem_num, type)</code></p><blockquote><p>举例：<code>int[2][3]</code>对应于 <code>array(2, array(3, int))</code></p></blockquote></li><li><p>指针构造符 <code>pointer(type)</code></p></li><li><p>笛卡尔乘积构造符<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span>：<code>T1 × T2</code></p></li><li><p>函数构造符<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>：<code>T1 × T2 × ... × Tn → R</code></p><ul><li><code>Ti</code>是类型表达式，相当于参数</li><li><code>R</code>也是类型表达式，相当于返回值</li></ul></li><li><p>记录构造符 <code>record((N1×T1), (N2×T2), ..., (Nn×Tn))</code></p><ul><li><code>Ni</code>是标识符</li><li><code>Ti</code>是类型表达式</li></ul></li></ul></li><li><p>类型的<strong>结构等价</strong></p><ul><li><em>T</em>(1)和<em>T</em>(2)是相同的基本类型</li><li><em>T</em>(1)和<em>T</em>(2)是将同一类型构造符应用于结构等价的类型上形成的</li><li><em>T</em>(1)是表示<em>T</em>(2)的类型名</li></ul></li></ul><hr><p><em>声明语句的SDT：</em></p><ul><li><p>文法符号与综合属性</p><ul><li><p><code>P</code>：开始符号</p></li><li><p><code>D</code>：声明语句</p></li><li><p><code>T</code>：标识符类型</p><ul><li><code>T.type</code>：类型表达式</li><li><code>T.width</code>：类型宽度</li></ul></li><li><p><code>B</code>：基本类型</p><ul><li><code>B.type</code>：基本类型</li><li><code>B.width</code>：基本类型宽度</li></ul></li><li><p><code>C</code>：数组标志</p><ul><li><code>C.type</code>：数组类型</li><li><code>C.width</code>：数组类型宽度</li></ul></li><li><p><code>id</code>：标识符</p><ul><li><p><code>id.lexeme</code>：构成标识符的字符序列</p><blockquote><p>是词法分析器提供的词法值</p></blockquote></li></ul></li><li><p><code>num</code>：整数的正则定义</p><ul><li><code>num.val</code>：整数值</li></ul></li><li><p><code>int</code>：整型</p></li><li><p><code>real</code>：实型</p></li><li><p><code>↑</code>：指针标志</p></li></ul></li><li><p>特殊变量</p><ul><li><p><code>offset</code>：下一个可用的<strong>相对地址</strong>，有初始值，可设为0</p></li><li><p><code>t</code>和 <code>w</code>：将<strong>类型和宽度信息</strong>从语法分析树的B结点传递到产生式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">C\rarr\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>对应的结点</mtext><mo>&gt;</mo><mtext>这里把类型看成由</mtext><mo>∗</mo><mo>∗</mo><mtext>基本类型</mtext><mo>+</mo><mtext>数组标志组成</mtext><mo>∗</mo><mo>∗</mo><mtext>，所以这两部分之间需要传递信息。如果把类型看成</mtext><mo>∗</mo><mo>∗</mo><mtext>基本类型或数组类型两类</mtext><mo>∗</mo><mo>∗</mo><mtext>，就不需要这样传递了</mtext><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">对应的结点&gt; 这里把类型看成由**基本类型+数组标志组成**，所以这两部分之间需要传递信息。如果把类型看成**基本类型或数组类型两类**，就不需要这样传递了&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">对应的结点</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">这里把类型看成由</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">基本类型</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">数组标志组成</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">，所以这两部分之间需要传递信息。如果把类型看成</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">基本类型或数组类型两类</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">，就不需要这样传递了</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span></span></p></li></ul></li><li><p>副作用</p><ul><li><code>enter(name, type, offset)</code>：在符号表中为标识符 <code>name</code>创建记录，将 <code>name</code>的类型设置为 <code>type</code>，相对地址设置为 <code>offset</code></li></ul></li><li><p>语法规则和语义动作(推导角度)</p><ul><li><p>开始：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>→</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">P\rarr\{a_1\}D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~offset=0\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>程序形成前要将 <code>offset</code>置为初始值</p></blockquote></li><li><p><strong>声明语句</strong>的生成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>→</mo><mi>T</mi><mtext> </mtext><mi>i</mi><mi>d</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">D\rarr T~id;\{a_1\}D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace nobreak"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>e</mi><mi>m</mi><mo separator="true">,</mo><mtext> </mtext><mi>T</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo separator="true">,</mo><mtext> </mtext><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>=</mo><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>+</mo><mi>T</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~enter(id.lexem,~T.type,~offset);\\ &amp;~~~~offset=offset+T.width;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>声明语句形成后在<strong>符号表</strong>创建记录，并后移 <code>offset</code></p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">D\rarr\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></p></li></ul></li><li><p><strong>标识符类型</strong>的形成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>→</mo><mi>B</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>C</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T\rarr B\{a_1\}C\{a_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>t</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>w</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>T</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>C</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>T</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo>=</mo><mi>C</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~t=B.type;\\ &amp;~~~~w=B.width;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~T.type=C.type;\\ &amp;~~~~T.width=C.width;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12em;vertical-align:-5.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mpunct">;</span></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p><strong>基本类型</strong>形成后用 <code>t</code>和 <code>w</code>记录<strong>类型和宽度</strong>，以便向后传递；</p><p><strong>标识符类型</strong>形成后要设置<strong>类型表达式和宽度</strong></p></blockquote><blockquote><p>另一种方案(归约角度)：</p><ul><li><code>T -&gt; int &#123;T.type = int, T.width = 4&#125;</code></li><li><code>T -&gt; real &#123;T.type = real, T.width = 8&#125;</code></li><li><code>T -&gt; array[num] of T1 &#123;T.type = array(num.val, T1.type); T.width = num.val * T1.width&#125;</code></li></ul></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>→</mo><mo>↑</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T\rarr\uarr T_1\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→↑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>T</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>T</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>4</mn><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~T.type=pointer(T_1.type);\\ &amp;~~~~T.width=4;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成指针后要设置其<strong>类型和宽度</strong></p></blockquote></li><li><p><strong>基本类型</strong>的形成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>i</mi><mi>n</mi><mi>t</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr int\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>i</mi><mi>n</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>4</mn><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B.type=int;\\ &amp;~~~~B.width=4;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>形成整型后要记录其类型和宽度</p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>r</mi><mi>e</mi><mi>a</mi><mi>l</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr real\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>r</mi><mi>e</mi><mi>a</mi><mi>l</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo>=</mo><mn>8</mn><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~B.type=real;\\ &amp;~~~~B.width=8;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">8</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成实型后要设置其类型和宽度</p></blockquote></li><li><p><strong>数组标志</strong>的形成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>→</mo><mi>ϵ</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C\rarr\epsilon\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϵ</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>C</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>C</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo>=</mo><mi>w</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~C.type=t;\\ &amp;~~~~C.width=w;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>数组标志结束后要从 <code>t</code>和 <code>w</code>中读取信息，以便后续<strong>数组类型和宽度</strong>的计算</p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>→</mo><mo stretchy="false">[</mo><mi>n</mi><mi>u</mi><mi>m</mi><mo stretchy="false">]</mo><msub><mi>C</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C\rarr[num]C_1\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>C</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi mathvariant="normal">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mo separator="true">,</mo><msub><mi>C</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>C</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi mathvariant="normal">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mo>∗</mo><msub><mi>C</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~C.type=array(num.val,C_1.type);\\ &amp;~~~~C.width=num.val*C_1.width;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成数组标志时要用<strong>数组构造符</strong>其设置类型并<strong>计算宽度</strong></p></blockquote></li></ul></li></ul><hr><p><em>嵌套过程声明语句的SDT：</em></p><ul><li><p>特殊变量</p><ul><li><code>tbptr</code>：保存嵌套声明的<strong>外层符号表</strong>的栈</li><li><code>offset</code>：保存嵌套声明的<strong>外层偏移量</strong>的栈</li></ul></li><li><p>副作用</p><ul><li><code>maketable(previous)</code>：创建一个<strong>新的符号表，访问链</strong>指向 <code>previous</code></li><li><code>enter(table, name, type, offset)</code>：向指定符号表中添加变量记录</li><li><code>addwidth(table, width)</code>：将<strong>符号表大小</strong>记录在表头上</li><li><code>enterproc(table, name, newtable)</code>：在 <code>table</code>中为 <code>name</code>建立表项，指向 <code>newtable</code></li></ul></li><li><p>语法规则和语义动作</p><ul><li><p>开始/程序声明：<code>P -&gt; prog id (input,output) M D; S &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">M: &#123;</span><br><span class="line">    t := mktable(nil);</span><br><span class="line">    push(t, tbptl);</span><br><span class="line">    push(0, offset);</span><br><span class="line">&#125;</span><br><span class="line">a: &#123;</span><br><span class="line">    addwidth(top(tblptr), top(offset));</span><br><span class="line">    pop(tblptr);</span><br><span class="line">    pop(offset);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>program形成前，创建根符号表；program形成后，记录宽度于表头，出栈</p></blockquote></li><li><p>声明语句</p><ul><li><p><code>D -&gt; D; D</code></p></li><li><p><code>D -&gt; proc id N D; S &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">N: &#123;</span><br><span class="line">    t = mktbl(top(tbptr));</span><br><span class="line">    push(t, tbptl);</span><br><span class="line">    push(0, offset);</span><br><span class="line">&#125;</span><br><span class="line">a: &#123;</span><br><span class="line">    t := top(tblptr);</span><br><span class="line">    addwidth(t, top(offset));</span><br><span class="line">    pop(tblptr);pop(offset);</span><br><span class="line">    enterproc(top(tblptr), id.name, t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>procedure形成前，创建子符号表，指向父表；procedure形成后，记录宽度于表头，出栈，父表添加指向子表的记录</p></blockquote></li><li><p><code>D -&gt; id : T &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    enter(top(tbptr), id.name, T.type, top(offset));</span><br><span class="line">    top(offset) += T.width</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><hr><p><em>结构体声明语句的SDT：</em></p><blockquote><p>为记录类型单独构造一个符号表，也可以类似过程那样嵌套</p></blockquote><ul><li><p><code>T -&gt; record M D end &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">M: &#123;</span><br><span class="line">    t = mktbl(nil);</span><br><span class="line">    push(t, tblptr);</span><br><span class="line">    push(0, offset);</span><br><span class="line">&#125;</span><br><span class="line">a: &#123;</span><br><span class="line">    T.type = record(top(tblptr)):</span><br><span class="line">    T.width = top(offset);</span><br><span class="line">    pop(tblptr);</span><br><span class="line">    pop(offset);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-2-简单赋值和运算语句的翻译">6.2 简单赋值和运算语句的翻译</h3><p><em>主要任务：</em></p><ul><li><p>生成<strong>对表达式求值</strong>的三地址码</p><blockquote><p>三地址码中地址不直接参与运算，而是<strong>存放在所指向地址的值参与运算</strong></p><p>例如下文中经常出现的 <code>E.addr</code>，如果放到运算表达式中，其实代表的是存放在所指向地址的值</p></blockquote></li><li><p>正确处理<strong>数组元素</strong>等复杂表达式，将多维数组形式转换成<strong>一维下标索引</strong></p><blockquote><p>对于<strong>数组元素</strong>要计算其<strong>地址索引</strong>：</p><ul><li>$addr(a[i_1][i_2]…[i_k])=base+i_1\times w_1+i_2\times w_2+…+i_k\times w_k $</li><li><code>a[i1, i2, i3, i4, ...]</code>相当于 <code>a[w*(...(i1*n2+i2)*n3+i3)*n4+i4)...)]</code></li></ul></blockquote></li><li><p>符号表：检查变量是否已经<strong>声明</strong></p></li></ul><hr><p><em>简单赋值和运算语句的SDT：</em></p><ul><li><p>文法符号与综合属性</p><ul><li><code>S</code><strong>：开始</strong>符号，代表一个<strong>代码块</strong><ul><li><code>S.code</code>：存放代码块的所有<strong>三地址码</strong></li></ul></li><li><code>E</code>：表达式<ul><li><code>E.code</code>：存放<strong>表达式之间赋值</strong>的三地址码</li><li><code>E.addr</code>：表达式<strong>值的存放地址</strong></li></ul></li><li><code>id</code>：标识符<ul><li><code>id.lexeme</code>：构成标识符的字符序列</li></ul></li><li><code>L</code>：<strong>数组元素</strong><ul><li><code>L.type</code>：数组元素的<strong>类型</strong></li><li><code>L.offset</code>：数组元素的<strong>地址偏移量</strong></li><li><code>L.array</code>：数组<strong>入口地址</strong>，也是数组标识符在符号表中记录的地址</li></ul></li></ul></li><li><p>副作用</p><ul><li><p><code>lookup(lexeme)</code>：查询符号表中<strong>标识符</strong>指向的<strong>地址</strong></p><ul><li><p><code>lookup(id.lexeme).type.elem</code>：（如果 <code>id</code>是数组标识符）数组元素<strong>类型</strong></p></li><li><p><code>lookup(id.lexeme).type.elem.width</code>：数组元素<strong>类型的宽度</strong></p><blockquote><p>数组相关信息会提前存放至<strong>内情向量表</strong>中</p></blockquote></li></ul></li><li><p><code>newtemp()</code>：生成<strong>临时变量</strong>并返回其地址</p><blockquote><p>这里虽然叫做“临时变量”，但这个变量依然会被写进<strong>三地址码</strong>中，只是在逻辑上起<strong>临时记录值</strong>的作用。</p><p>临时变量对优化有利，但过多的临时变量会增加符号表负担和运行时存储空间。</p><p>可以基于临时变量的生存期<strong>动态申请并释放临时变量</strong></p></blockquote></li><li><p><code>gen(code)</code>：生成新的<strong>三地址码</strong>（并拼接已生成的三地址码，赋值给综合属性）</p><blockquote><p>⭐️增量翻译：在语义动作中简化类似 <code>E.code=E1.code||E2.code||gen(xxx)</code>的代码，直接写成 <code>gen(xxx)</code>，这样代表了<strong>生成三地址码</strong>后自动将子结点的 <code>code</code>属性与之<strong>顺序拼接</strong>并赋值给父节点的 <code>code</code>属性</p></blockquote></li></ul></li><li><p>语法规则和语义动作（归约角度理解）</p><ul><li><p>文法开始/<strong>完整赋值语句</strong>的形成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>d</mi><mo>=</mo><mi>E</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr id=E;\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>p</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>o</mi><mi>k</mi><mi>u</mi><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>e</mi><mi>m</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>i</mi><mi>f</mi><mtext> </mtext><mi>p</mi><mo>=</mo><mo>=</mo><mi>n</mi><mi>i</mi><mi>l</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>e</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>p</mi><mo>=</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~p=lookup(id.lexeme);\\ &amp;~~~~if~p==nil~then~error;\\ &amp;~~~~gen(p=E.addr);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.5em;vertical-align:-3.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oo</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">ni</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">error</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>形成<strong>单一标识符</strong>赋值语句时，检查是否已经声明，并生成<strong>标识符赋值</strong>的三地址码</p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>L</mi><mo>=</mo><mi>E</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr L=E;\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo stretchy="false">[</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo stretchy="false">]</mo><mo>=</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~gen(L.array[L.offset]=E.addr);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成<strong>数组元素</strong>赋值语句时生成<strong>元素地址索引并给其赋值</strong>的三地址码</p></blockquote></li><li><p><strong>算术表达式</strong>的形成</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><msub><mi>E</mi><mn>1</mn></msub><mo>+</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E\rarr E_1+E_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>+</mo><msub><mi>E</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~E.addr=newtemp();\\ &amp;~~~~gen(E.addr=E_1.addr+E_2.addr);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成加法运算表达式时生成用<strong>临时变量存放运算结果</strong>的三地址码</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E\rarr E_1*E_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>∗</mo><msub><mi>E</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~E.addr=newtemp();\\ &amp;~~~~gen(E.addr=E_1.addr*E_2.addr);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成乘法运算表达式时生成用<strong>临时变量存放运算结果</strong>的三地址码</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mo>−</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E\rarr-E_1\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>u</mi><mi>m</mi><mi>i</mi><mi>n</mi><mi>u</mi><mi>s</mi><mtext> </mtext><msub><mi>E</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mi>r</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~E.addr=newtemp();\\ &amp;~~~~gen(E.addr=uminus~E_1.addrr);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">min</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成取相反数运算表达式时生成用<strong>临时变量存放运算结果</strong>的三地址码</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E\rarr(E_1)\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~E.addr=E_1.addr;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成括号运算表达式时传递变量地址</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>i</mi><mi>d</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E\rarr id\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>o</mi><mi>k</mi><mi>u</mi><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>e</mi><mi>m</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>i</mi><mi>f</mi><mtext> </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mo>=</mo><mi>n</mi><mi>i</mi><mi>l</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>e</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~E.addr=lookup(id.lexeme);\\ &amp;~~~~if~E.addr==nil~then~error;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oo</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">ni</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">error</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>由标识符形成表达式时要检查是否<strong>声明</strong>并<strong>记录标识符地址</strong></p></blockquote></li></ul></li><li><p><strong>数组元素表达式</strong>的形成</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>L</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">E\rarr L\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>=</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo stretchy="false">[</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~E.addr=newtemp();\\ &amp;~~~~gen(E.addr=L.array[L.offset]);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">[</span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mclose">])</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成<strong>完整数组元素表达式</strong>时生成用<strong>临时变量存放数组元素地址索引</strong>的三地址码</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>→</mo><mi>i</mi><mi>d</mi><mo stretchy="false">[</mo><mi>E</mi><mo stretchy="false">]</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L\rarr id[E]\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">]</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>o</mi><mi>k</mi><mi>u</mi><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>e</mi><mi>m</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>i</mi><mi>f</mi><mtext> </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo>=</mo><mo>=</mo><mi>n</mi><mi>i</mi><mi>l</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>e</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>m</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>=</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>∗</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo stretchy="false" lspace="0em" rspace="0em">}</mo></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~L.array=lookup(id.lexeme);\\ &amp;~~~~if~L.array==nil~then~error;\\ &amp;~~~~L.type=L.array.type.elem;\\ &amp;~~~~L.offset=newtemp();\\ &amp;~~~~gen(L.offset=E.addr*L.type.width);\\ \} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.5em;vertical-align:-5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oo</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">ni</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">error</span><span class="mpunct">;</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord">.</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>确定数组<strong>标识符</strong>后，传递<strong>数组名</strong>、数组元素<strong>类型</strong>，计算数组元素<strong>偏移量</strong>，并生成 用类型<strong>宽度</strong>和表达式值计算<strong>偏移量</strong> 的三地址码</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>→</mo><msub><mi>L</mi><mn>1</mn></msub><mo stretchy="false">[</mo><mi>E</mi><mo stretchy="false">]</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L\rarr L_1[E]\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">]</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo>=</mo><msub><mi>L</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mo>=</mo><msub><mi>L</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>m</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>t</mi><mo>=</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo>∗</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>L</mi><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>=</mo><msub><mi>L</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi><mo>+</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo stretchy="false" lspace="0em" rspace="0em">}</mo></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~L.array=L_1.array;\\ &amp;~~~~L.type=L_1.type.elem;\\ &amp;~~~~t=newtemp();\\ &amp;~~~~gen(t=E.addr*L.type.width);\\ &amp;~~~~L.offset=newtemp();\\ &amp;~~~~gen(L.offset=L_1.offset+t);\\ \} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12em;vertical-align:-5.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord">.</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>更高维数组元素形成时，传递<strong>数组名</strong>、数组<strong>类型</strong>，计算数组元素偏移量，生成 借助<strong>临时变量</strong>计算<strong>更深维度偏移量</strong> 的三地址码</p></blockquote></li></ul></li></ul></li></ul><hr><p><em>数组元素的另一种SDT：</em></p><ul><li><p>文法符号与综合属性</p><ul><li><code>L.addr</code>：数组<strong>基址</strong></li><li><code>L.offset</code>：数组元素<strong>偏移量</strong></li><li><code>Elist.array</code>： 指向符号表中<strong>数组名表项</strong></li><li><code>Elist.ndim</code>： Elist中下标表达式的个数， 即<strong>数组当前维数</strong></li><li><code>Elist.addr</code>： 存放下标表达式计算出来的值</li></ul></li><li><p>副作用</p><ul><li><p><code>limit(array, j)</code>：返回 <code>nj</code></p><blockquote><p>代表第 <code>j</code>维的宽度，可以从数组的<strong>内情向量表</strong>中获取</p></blockquote></li></ul></li><li><p>语法规则和语义动作（归约的角度）</p><ul><li><p><code>L -&gt; id &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    L.addr = id.addr;</span><br><span class="line">    L.offset = null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>Elist -&gt; id[E &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    Elist.addr = E.addr;</span><br><span class="line">    Elist.ndim = 1;</span><br><span class="line">    Elist.array = id.addr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数组元素刚开始形成时，记录<strong>下标值、维度、标识符</strong></p></blockquote></li><li><p><code>Elist -&gt; Elist1, E &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    t = newtmp;</span><br><span class="line">    m = Elist1.ndim + 1;</span><br><span class="line">    gencode(t = Elist1.addr * limit(Elist1.array, m));</span><br><span class="line">    gencode(t = t + E.addr);</span><br><span class="line">    Elist.array = Elist1.array;</span><br><span class="line">    Elist.addr = t;</span><br><span class="line">    Elist.ndim = m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>生成临时变量计算<strong>深一维度的偏移量</strong>，传递<strong>下标值</strong>、<strong>维度</strong>、<strong>标识符</strong></p><p><code>a[i1, i2, i3, i4, ...]</code></p><p><code>a[w*(...(i1*n2+i2)*n3+i3)*n4+i4)...)]</code></p></blockquote></li><li><p><code>L -&gt; Elist] &#123;a&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    L.addr = newtmp;</span><br><span class="line">    L.offset = newtmp;</span><br><span class="line">    gencode(L.addr = base(Elist.array)-invariant(Elist.array));</span><br><span class="line">    gencode(L.offset = Elist.addr * w)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数组元素标志形成结束后，计算最终的<strong>数组基址</strong>和<strong>偏移量</strong></p></blockquote></li></ul></li></ul><h3 id="6-3-布尔表达式的翻译">6.3 布尔表达式的翻译</h3><p><em>主要任务：</em></p><ul><li>对布尔表达式进行求值（数值表示法）</li><li>处理布尔表达式在不同逻辑值下的<strong>跳转</strong>（真假出口表示法）</li></ul><hr><p><em>布尔表达式的SDT：</em></p><ul><li><p>文法符号与属性</p><ul><li><code>B</code>：布尔表达式<ul><li><code>B.true</code>：布尔表达式的“真”出口，也就是表达式为真时，下一条要执行的语句</li><li><code>B.false</code>：布尔表达式的“假”出口，也就是表达式为假时，下一条要执行的语句</li><li><code>B.code</code>：布尔表达式翻译出的三地址码</li><li><code>B.addr</code>：布尔表达式的值</li></ul></li><li><code>E</code>：表达式<ul><li>与<strong>赋值语句</strong>中的一致</li></ul></li><li><code>relop</code>：关系运算符的正则定义，包括 <code>&lt;, &lt;=, &gt;, &gt;=, ==, !=</code></li><li><code>or、and、not</code></li><li>优先级：<code>not &gt; and &gt; or</code></li><li>在语法规则中，可以通过人为地限制<strong>使用产生式归约的条件</strong>来实现不同的优先级</li><li><code>true、false</code></li></ul></li><li><p>副作用</p><ul><li><code>newlabel()</code></li><li><code>label(L)</code></li><li><code>gen(code)</code></li><li><code>nextquad</code>：下一条三地址指令的序号</li></ul></li><li><p>语法规则和语义动作（数值表示法、从归约的角度理解）</p><ul><li><p><code>B -&gt; E1 relop E2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    gen(if E1.addr relop E2.addr goto nextquad+3);</span><br><span class="line">    gen(B.addr = 0);</span><br><span class="line">    gen(goto nextquad+2);</span><br><span class="line">    gen(B.addr = 1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; true</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.addr = newtmp;</span><br><span class="line">    gen(B.addr = 1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; false</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.addr = newtmp;</span><br><span class="line">    gen(B.addr = 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; B1 or B2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.addr = newtmp;</span><br><span class="line">    gen(B.addr = B1.addr or B2.addr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; B1 and B2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.addr = newtmp;</span><br><span class="line">    gen(B.addr = B1.addr and B2.addr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; not B1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.addr = newtmp;</span><br><span class="line">    gen(B.addr = not B1.addr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; (B1)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.addr = B1.addr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>语法规则和语义动作（真假出口表示法、从推导的角度理解）</p><ul><li><p>由<strong>关系运算符</strong>形成布尔表达式</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><msub><mi>E</mi><mn>1</mn></msub><mtext> </mtext><mi>r</mi><mi>e</mi><mi>l</mi><mi>o</mi><mi>p</mi><mtext> </mtext><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr E_1~relop~E_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>i</mi><mi>f</mi><mtext> </mtext><msub><mi>E</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mtext> </mtext><mi>r</mi><mi>e</mi><mi>l</mi><mi>o</mi><mi>p</mi><mtext> </mtext><msub><mi>E</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mtext> </mtext><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~gen(if~E_1.addr~relop~E_2.addr~goto~B.ture);\\ &amp;~~~~gen(goto~B.false);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>生成关系运算符的<strong>跳转</strong>三地址码</p></blockquote></li><li><p>由<strong>逻辑值</strong>形成布尔表达式</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr true\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~gen(goto~B.true);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>直接生成跳转到<strong>真出口</strong>的三地址码</p><p>这里所说的“<strong>出口</strong>”指的就是要跳转到的<strong>指令标号</strong></p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr false\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~gen(goto~B.false);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>直接生成跳转到<strong>假出口</strong>的三地址码</p></blockquote></li></ul></li><li><p>通过<strong>逻辑运算符</strong>连接布尔表达式</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mo stretchy="false">(</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B\rarr(\{a_1\}B_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">({</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~B_1.true=B.true;\\ &amp;~~~~B_1.false=B.false;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>计算继承属性，让其<strong>真、假出口</strong>与父表达式保持相等</p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>n</mi><mi>o</mi><mi>t</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><msub><mi>B</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">B\rarr not\{a_1\}B_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~B_1.true=B.false;\\ &amp;~~~~B_1.false=B.true;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><pre><code>&gt; 让其**真、假出口**与父表达式保持相反</code></pre><blockquote></blockquote><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><msub><mi>B</mi><mn>1</mn></msub><mtext> </mtext><mi>o</mi><mi>r</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>B</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">B\rarr\{a_1\}B_1~or~\{a_2\}B_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B_1.false=newlabel();\\ &amp;~~~~B_1.true=B.true;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(B_1.false);\\ &amp;~~~~B_2.true=B.true;\\ &amp;~~~~B_2.false=B.false;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.5em;vertical-align:-6.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mpunct">;</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>计算B1继承属性时，真出口可以确定是父B的真出口，但假出口的代码是B2，还没生成，所以newlabel</p><p>计算B2继承属性时，马上要生成B2的代码了，所以B1的假出口可以确定了，B2的真假出口也可以由父B确定</p></blockquote><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><msub><mi>B</mi><mn>1</mn></msub><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>B</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">B\rarr\{a_1\}B_1~and~\{a_2\}B_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B_1.true=newlabel();\\ &amp;~~~~B_1.false=B.false;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(B_1.true);\\ &amp;~~~~B_2.true=B.true;\\ &amp;~~~~B_2.false=B.false;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.5em;vertical-align:-6.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mpunct">;</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>与 <code>or</code>类似</p></blockquote></li></ul><blockquote></blockquote></li><li><p>语法规则和语义动作（真假出口表示法、仅为L-SDD）</p><ul><li><p><code>B -&gt; E1 relop E2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.code = gen(if E1.addr relop E2.addr goto B.ture)</span><br><span class="line">        ||gen(goto B.false);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; true</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.code = gen(goto B.true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; false</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B.code = gen(goto B.false);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; B1 or B2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B1.true = B.true;</span><br><span class="line">    B1.false = newlabel;</span><br><span class="line">    B2.true = B.true;</span><br><span class="line">    B2.false = B.false;</span><br><span class="line">    B.code = B1.code||gen(B1.false:)||B2.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; B1 and B2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B1.true = newlabel;</span><br><span class="line">    B1.false = B.false;</span><br><span class="line">    B2.true = B.true;</span><br><span class="line">    B2.false = B.false;</span><br><span class="line">    B.code = B1.code||gen(B1.true:)||B2.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; not B1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B1.true = B.flase;</span><br><span class="line">    B1.false = B.true;</span><br><span class="line">    B.code = B1.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>B -&gt; (B1)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a : &#123;</span><br><span class="line">    B1.true = B.true;</span><br><span class="line">    B1.false = B.false;</span><br><span class="line">    B.code = B1.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="6-4-控制流语句的翻译">6.4 控制流语句的翻译</h3><p><em>主要任务：</em></p><ul><li>结合布尔表达式的翻译，生成具有<strong>控制流结构</strong>的三地址码</li><li>正确处理<strong>指令标号</strong>的记录和<strong>跳转</strong>三地址码的生成</li></ul><hr><p><em>控制流语句的代码结构：</em></p><ul><li><p>跳转的逻辑结构很简单，重点是在合适的地方插入 <code>goto</code>语句</p><blockquote><p>详见编译原理随堂笔记仓库</p></blockquote></li></ul><hr><p><em>控制流语句的SDT：</em></p><ul><li><p>文法符号与属性</p><ul><li><p><code>P</code>：开始符号</p></li><li><p><code>S</code>：控制流代码块</p><ul><li><p><code>S.code</code>：综合属性，存放完整的三地址码</p></li><li><p><code>S.next</code>：继承属性，是一个地址，地址中存放了紧跟在 <code>S.code</code>之后的指令标号，即 <code>S</code><strong>后继指令的标号</strong></p><ul><li><blockquote><p><strong>指令标号</strong>可以标识一条<strong>三地址指令</strong></p></blockquote></li></ul></li><li><p><code>S.first</code>：继承属性，是一个地址，地址中存放了在 <code>S.code</code>的<strong>第一条指令的标号</strong></p></li></ul></li><li><p><code>B</code>：布尔表达式</p><ul><li><code>B.ture</code>：继承属性，是一个地址，地址中存放了当 <code>B</code>为真时控制流转向的指令标号</li><li><code>B.false</code>：继承属性，是一个地址，地址中存放了当 <code>B</code>为假时控制流转向的指令标号</li></ul></li><li><p><code>E</code>：表达式</p><ul><li><blockquote><p>与赋值语句中的一致</p></blockquote></li></ul></li><li><p><code>L</code>：数组元素</p><ul><li><blockquote><p>与赋值语句中的一致</p></blockquote></li></ul></li></ul></li><li><p>副作用</p><ul><li><code>newlabel()</code>：生成一个用于<strong>存放标号</strong>的临时变量，返回其<strong>地址</strong></li><li><code>label(L)</code>：将<strong>下一条</strong>三地址指令的<strong>标号</strong>赋值给 <code>L</code>（指向的地址）</li><li><code>gen(code)</code></li></ul></li><li><p>语法规则和语义动作（真假出口表示法、从推导的角度理解）</p><ul><li><p>文法开始/完整控流代码块形成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>→</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>S</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P\rarr\{a_1\}S\{a_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~S.next=newlabel();\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(S.next);\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9em;vertical-align:-4.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>形成代码块前，先生成存放其后继指令的<strong>地址空间</strong>（因为这是继承属性，规定要这么算，而且<strong>代码块内</strong>可能会用到）；</p><p>形成代码块后，将<strong>下一条</strong>三地址指令标号赋值给其<strong>后继指令</strong></p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S\rarr\{a_1\}S_1\{a_2\}S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~S_1.next=newlabel();\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(S_1.next);\\ &amp;~~~~S_2.next=S.next\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.5em;vertical-align:-5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>next继承属性肯定是要在符号出现前计算的，能用父S确定的就直接给父S的next，确定不了的（相应代码结构还没出现）就newlabel</p></blockquote></li><li><p><strong>完整赋值语句</strong>的形成：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>d</mi><mo>=</mo><mi>E</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><mi>a</mi><mo stretchy="false">}</mo><mi mathvariant="normal">∣</mi><mi>L</mi><mo>=</mo><mi>E</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><mi>a</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr id=E;\{a\}|L=E;\{a\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mclose">}</span><span class="mord">∣</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mclose">}</span></span></span></span></p><blockquote><p>上一小节已经讲过，这里省略</p></blockquote></li><li><p>控制流结构的形成</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>f</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>B</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S\rarr if~\{a_1\}B~then~\{a_2\}S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B.true=newlabel();\\ &amp;~~~~B.false=S.next;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(B.ture);\\ &amp;~~~~S_1.next=S.next;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12em;vertical-align:-5.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>形成布尔表达式前计算继承属性，false能用父S确定的，true还没生成，所以要等到S1之前用label赋值，然后S1的next继承属性用父S确定即可</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>f</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>B</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>1</mn></msub><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>4</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S\rarr if~\{a_1\}B~then~\{a_2\}S_1~\{a_3\}else~\{a_4\}S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>3</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>4</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B.true=newlabel();\\ &amp;~~~~B.false=newlabel();\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(B.ture);\\ &amp;~~~~S_1.next=S.next;\\ &amp;\}\\ &amp;a_3:\{\\ &amp;~~~~gen(goto~S.next);\\ &amp;\}\\ &amp;a_4:\{\\ &amp;~~~~label(B.false);\\ &amp;~~~~S_2.next=S.next;\\ &amp;\} \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:22.5em;vertical-align:-11em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:11.5em;"><span style="top:-13.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-12em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-10.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:11em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:11.5em;"><span style="top:-13.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-12.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-10.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal">re</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:4.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:5.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:7.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:11em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>与 <code>if-then</code>类似，要么能用父S.next确定，要么还没生成，先newlabel，到对应的位置再label；必须要注意的是，记得<strong>生成S1之后的goto</strong></p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>w</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>e</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mi>B</mi><mtext> </mtext><mi>d</mi><mi>o</mi><mtext> </mtext><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr while~\{a_1\}B~do~\{a_2\}S_1\{a_3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>e</mi><mi>g</mi><mi>i</mi><mi>n</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>e</mi><mi>g</mi><mi>i</mi><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>e</mi><mi>g</mi><mi>i</mi><mi>n</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>3</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>b</mi><mi>e</mi><mi>g</mi><mi>i</mi><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~S.begin=newlabel();\\ &amp;~~~~label(S.begin);\\ &amp;~~~~B.true=newlabel();\\ &amp;~~~~B.false=S.next;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~label(B.true);\\ &amp;~~~~S_1.next=S.begin;\\ &amp;\}\\ &amp;a_3:\{\\ &amp;~~~~gen(goto~S.begin);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:19.5em;vertical-align:-9.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:10em;"><span style="top:-12em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-10.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:9.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:10em;"><span style="top:-12.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-10.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">in</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">in</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">in</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:4.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">in</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:5.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:9.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>与前面 <code>if</code>的类似，这里单独注意一下 <code>S.begin</code>和 <code>goto</code>，因为 <code>while</code>的特点就是会跳回前面</p></blockquote></li></ul></li><li><p>语法规则和语义动作（真假出口表示法、仅为L-SDD）</p><ul><li><p><code>S -&gt; if B then S1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    B.true = newtmp;</span><br><span class="line">    B.false = S.next;</span><br><span class="line">    S1.next = S.next;</span><br><span class="line">    S.code = B.code||gen(B.true:)||S1.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>S -&gt; if B then S1 else S2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    B.true = newtmp;</span><br><span class="line">    B.false = newtmp;</span><br><span class="line">    S1.next = S.next;</span><br><span class="line">    S2.next = S.next;</span><br><span class="line">    S.code = B.code||gen(B.true:)||S1.code</span><br><span class="line">        ||gen(goto S.next)</span><br><span class="line">        ||gen(B.false:)||S2.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>S -&gt; while B do S1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    S.begin = newtmp;</span><br><span class="line">    B.true = newtmp;</span><br><span class="line">    B.false = S.next;</span><br><span class="line">    S1.next = S.begin;</span><br><span class="line">    S.code = gen(S.begin:)||B.code</span><br><span class="line">        ||gen(B.true:)||S1.code</span><br><span class="line">        ||gen(goto S.begin)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>S -&gt; S1; S2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a: &#123;</span><br><span class="line">    S1.next = newtmp;</span><br><span class="line">    S2.next = S.next;</span><br><span class="line">    S.code = S1.code||gen(S1.next)||S2.code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><em><code>switch-case</code>语句的翻译：</em></p><ul><li><p><code>switch-case</code>的直观翻译方式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>w</mi><mi>i</mi><mi>t</mi><mi>c</mi><mi>h</mi><mtext> </mtext><mi>E</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>V</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>V</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>4</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>5</mn></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>V</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>e</mi><mi>f</mi><mi>a</mi><mi>u</mi><mi>l</mi><mi>t</mi><mtext> </mtext><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mi>n</mi></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">switch~E\{a_1\}\\ case~V_1:\{a_2\}S_1\{a_3\}\\ case~V_2:\{a_4\}S_2\{a_5\}\\ ...\\ case~V_{n-1}:\{a_{2n-2}\}S_{n-1}\{a_{2n-1}\}\\ default~:\{a_{2n}\}S_n\{a_{2n+1}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">lt</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><ul><li><p>新增特殊变量</p><ul><li><code>Vk</code>：第 <code>k</code>个分支的<strong>入口值</strong></li><li><code>Lk</code>：存放第 <code>k+1</code>个分支<strong>第一条指令标号</strong>的地址空间</li><li><code>t</code>：存放分支依据<strong>表达式的值</strong></li><li><code>next</code>：存放整体代码块<strong>下一条指令标号</strong>的地址空间</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>t</mi><mo>=</mo><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><msub><mi>L</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>L</mi><mi>k</mi></msub><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>i</mi><mi>f</mi><mtext> </mtext><mi>t</mi><mtext> </mtext><mo stretchy="false">!</mo><mo>=</mo><msub><mi>V</mi><mi>k</mi></msub><mtext> </mtext><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><msub><mi>L</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><msub><mi>L</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~t=newtemp();\\ &amp;~~~~gen(t=E.addr);\\ &amp;~~~~next=newlabel();\\ &amp;\}\\ &amp;a_{2k-2}:\{\\ &amp;~~~~label(L_{k-1});\\ &amp;~~~~L_k=newlabel();\\ &amp;~~~~gen(if~t~!=V_k~goto~L_k);\\ &amp;\}\\ &amp;a_{2k-1}:\{\\ &amp;~~~~gen(goto~next);\\ &amp;\}\\ &amp;a_{2n}:\{\\ &amp;~~~~label(L_{n-1});\\ &amp;\}\\ &amp;a_{2n+1}:\{\\ &amp;~~~~label(next);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:28.5em;vertical-align:-14em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:14.5em;"><span style="top:-16.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-15em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-13.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-12em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-10.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:10.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:14em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:14.5em;"><span style="top:-16.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-15.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">wt</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-13.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-12.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-10.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">wl</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mspace nobreak"> </span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:4.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:5.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:7.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:8.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:10.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:14em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><code>switch-case</code>语句开始分支测试前，生成将依据<strong>表达式值</strong>保存至临时变量的三地址码，并为存放<strong>整体代码块下一条指令的标号</strong>开辟内存空间</p><blockquote><p>那个 <code>next=newlabel()</code>放在第一次使用 <code>next</code>前也可以</p></blockquote></li><li><p>每个测试分支中，形成代码块前，先给该<strong>分支对应标号赋值</strong>，再生成<strong>不满足条件跳转</strong>至下一个分支标号的三地址码；形成代码块后，生成跳转至整体代码块下一条指令的三地址码</p><blockquote><p>第一个测试分支不需要给自己的标号赋值，只需要生成不满足条件的跳转三地址码</p></blockquote></li><li><p>默认分支中，形成代码块前，给该<strong>分支对应标号赋值</strong>；形成代码块后，给<strong>整体代码块下一条指令对应</strong>的标号赋值</p></li></ul></li><li><p><code>switch-case</code>的<strong>分支测试代码集中</strong>翻译方式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>w</mi><mi>i</mi><mi>t</mi><mi>c</mi><mi>h</mi><mtext> </mtext><mi>E</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>V</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>V</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>4</mn></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>5</mn></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>V</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>e</mi><mi>f</mi><mi>a</mi><mi>u</mi><mi>l</mi><mi>t</mi><mtext> </mtext><mo>:</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub><mo stretchy="false">}</mo><msub><mi>S</mi><mi>n</mi></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">switch~E\{a_1\}\\ case~V_1:\{a_2\}S_1\{a_3\}\\ case~V_2:\{a_4\}S_2\{a_5\}\\ ...\\ case~V_{n-1}:\{a_{2n-2}\}S_{n-1}\{a_{2n-1}\}\\ default~:\{a_{2n}\}S_n\{a_{2n+1}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">lt</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p></li><li><p>新增特殊变量</p><ul><li><p><code>test</code>：分支集中测试块的第一条指令标号地址</p></li><li><p>新增副作用</p></li><li><p><code>map</code>：记录分支测试<strong>入口值</strong>与分支测试<strong>标号</strong>的映射关系，方便批量生成<strong>分支测试代码</strong></p></li></ul>  \begin{align**} &a_1:\{\\ &~~~~t=newtemp();\\ &~~~~gen(t=E.addr);\\ &~~~~test=newlabel();\\ &~~~~gen(goto~test);\\ &~~~~next=newlabel();\\ &\}\\ &a_{2k-2}:\{\\ &~~~~L_k=newlabel();\\ &~~~~label(L_{k});\\ &~~~~map(V_k,L_k);\\ &\}\\ &a_{2k-1}:\{\\ &~~~~gen(goto~next);\\ &\}\\ &a_{2n}:\{\\ &~~~~L_n=newlabel();\\ &~~~~label(L_{n});\\ &\}\\ &a_{2n+1}:\{\\ &~~~~gen(goto~next);\\ &~~~~label(test);\\ &~~~~gen(if~t=V_k~goto~L_k);\\ &\}\\ \end{align**}</li><li><p><code>switch-case</code>语句开始分支测试前，生成将依据<strong>表达式值</strong>保存至临时变量的三地址码，生成<strong>跳转至集中分支测试</strong>的三地址码，并为存放<strong>整体代码块下一条指令的标号</strong>开辟内存空间</p><ul><li><p>每个测试分支中，形成代码块前，开辟该分支对应的标号，并给<strong>标号赋值</strong>为下一条指令，再将该分支测试<strong>入口值</strong>与<strong>标号</strong>的添加至映射表；形成代码块后，生成跳转至整体代码块下一条指令的三地址码</p></li><li><p>默认分支中，形成代码块前，开辟该分支对应的标号，并给<strong>标号赋值</strong>为下一条指令；形成代码块后，生成跳转至整体代码块下一条指令的三地址码，再给<strong>集中分支测试的标号</strong>赋值，然后根据<strong>映射表</strong>批量生成分支<strong>入口值对比并跳转至对应标号</strong>的三地址码</p><blockquote><p>可以增加一种 <code>case</code>指令，<code>case t V L</code>等同于 <code>if t==V goto L</code>，但 <code>case</code>指令更容易被最终的代码生成器<strong>探测</strong>到，从而对这些指令进行<strong>特殊处理</strong></p></blockquote></li></ul><blockquote></blockquote></li></ul><hr><p><em><code>for-to-step-do</code>语句的翻译：</em></p><ul><li>再说 吧</li></ul><hr><p><em><code>repeat-until</code>语句的翻译：</em></p><ul><li>再说 吧</li></ul><h3 id="6-5-过程调用语句的翻译">6.5 过程调用语句的翻译</h3><p><em>主要任务：</em></p><ul><li>解析过程调用的参数，生成<strong>设置实参和调用过程</strong>的三地址码</li></ul><hr><p><em>过程调用语句的代码结构：</em></p><ul><li><p>语句模式：<code>id(E1, E2, ..., En)</code></p></li><li><p>代码流程</p><ul><li><p>运算各表达式的三地址码，计算参数值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">id(</span><br><span class="line">E1.code,</span><br><span class="line">E2.code,</span><br><span class="line">...</span><br><span class="line">En.code</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>通过 <code>param</code>指令将各表达式的值作为函数的实参：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">param E1.addr</span><br><span class="line">param E2.addr</span><br><span class="line">...</span><br><span class="line">param En.addr</span><br></pre></td></tr></table></figure><blockquote><p>这种是 <code>param</code>指令集中的形式。也可以让 <code>param Ek.addr</code>指令紧跟在 <code>Ek.code</code>后面，就是分散形式。</p><p>分散形式下，需要使用一种数据结构（通常是队列 <code>q</code>）来存放 <code>Ek.addr</code>，以便集中生成 <code>param</code>指令</p></blockquote></li><li><p>调用函数：<code>call id.addr n</code></p><blockquote><p><code>n</code>代表参数个数</p></blockquote></li></ul></li></ul><hr><p><em>过程调用语句的SDT：</em></p><ul><li><p>文法符号与属性</p><ul><li><code>S</code>：文法开始符号/过程调用代码结构</li><li><code>Elist</code>：参数列表</li><li><code>E</code>：参数表达式<ul><li><code>E.addr</code>：表达式<strong>值的存放地址</strong></li></ul></li></ul></li><li><p>副作用</p><ul><li><code>gen(code)</code></li></ul></li><li><p>语法规则和语义动作</p><ul><li><p>文法开始/形成<strong>过程调用</strong>框架：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mtext> </mtext><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>E</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr call~id(Elist)\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mspace nobreak"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">El</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>n</mi><mo>=</mo><mn>0</mn><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>f</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>q</mi><mtext>中的每个</mtext><mi>t</mi><mtext> </mtext><mi>d</mi><mi>o</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>        </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>p</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>m</mi><mtext> </mtext><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>        </mtext><mi>n</mi><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mtext> </mtext><mi>i</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~n=0;\\ &amp;~~~~for~q中的每个t~do\\ &amp;~~~~~~~~gen(param~t);\\ &amp;~~~~~~~~n=n+1;\\ &amp;~~~~gen(call~id.addr,n);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.5em;vertical-align:-5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">中的每个</span><span class="mord mathnormal">t</span><span class="mspace nobreak"> </span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">;</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mspace nobreak"> </span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>过程调用框架形成后，根据队列 <code>q</code>集中生成所有<strong>设置实参</strong>的 <code>param</code>三地址指令，最后再生成一条<strong>过程调用</strong>的三地址指令</p></blockquote></li><li><p>形成<strong>参数列表</strong></p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>→</mo><mi>E</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Elist\rarr E\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">El</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    将</mtext><mi>q</mi><mtext>初始化为只包含</mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mtext>的队列</mtext><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~将q初始化为只包含E.addr的队列;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord cjk_fallback">将</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">初始化为只包含</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">的队列</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>参数列表开始形成时初始化队列 <code>q</code></p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>→</mo><mi>E</mi><mi>l</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Elist\rarr Elist_1,E\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">El</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">El</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    将</mtext><mi>E</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mtext>添加到</mtext><mi>q</mi><mtext>的队尾</mtext><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~将E.addr添加到q的队尾;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord cjk_fallback">将</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">添加到</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">的队尾</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>参数列表中每增加一个参数就添加一个参数地址至队列 <code>q</code>中</p></blockquote></li></ul></li></ul><h3 id="6-6-回填">6.6 回填</h3><p><em>基本思想：</em></p><ul><li>生成<strong>跳转</strong>三地址码时，暂不指定跳转的<strong>目标标号</strong>，并将这样的指令放入<strong>列表</strong>中，同一个列表中所有跳转指令的<strong>目标相同</strong>，待能确定目标时，再<strong>填充</strong>列表中指令的目标标号</li><li>待填充跳转指令组成的<strong>列表</strong>会通过文法符号<strong>综合属性</strong>进行传递，不再需要使用 <code>next true false</code>这类<strong>继承属性</strong>了，更符合<strong>归约</strong>的思想</li></ul><blockquote><p>如果不使用回填，可以两遍扫描，先把<strong>语法分析树</strong>建好，再遍历树，确定标号。但这样效率较低</p></blockquote><hr><p><em>布尔表达式的回填：</em></p><ul><li><p>有改动或新增的文法符号及其综合属性</p><ul><li><code>B</code>：布尔表达式<ul><li><code>B.truelist</code>：指向包含待填充跳转指令的<strong>列表</strong>，列表中的跳转指令<strong>目标均为 <code>B</code>的真出口</strong></li><li><code>B.falselist</code>：指向包含待填充跳转指令的<strong>列表</strong>，列表中的跳转指令<strong>目标均为 <code>B</code>的假出口</strong></li></ul></li><li><code>M</code>：辅助记录的符号<ul><li><code>M.quad</code>：会将下一条指令的标号暂存至该综合属性，之后会用到</li></ul></li></ul></li><li><p>新增的特殊变量</p><ul><li><code>nextquad</code>：即将生成的下一条三地址码的标号</li></ul></li><li><p>新增的副作用</p><ul><li><code>makelist(i)</code>：创建一个只包含跳转指令 <code>i</code>的列表，返回列表<strong>指针</strong></li><li><blockquote><p>这里的 <code>i</code>是这条跳转指令本身的标号，不是目标标号</p></blockquote></li><li><code>merge(p1, p2)</code>：将 <code>p1</code>和 <code>p2</code>指向的两个列表合并，返回合并后列表<strong>指针</strong></li><li><code>backpatch(p, i)</code>：将 <code>i</code>作为<strong>目标标号</strong>填充 <code>p</code>指向的列表中的所有<strong>跳转指令</strong></li></ul></li><li><p>有改动的语法规则和语义动作</p><ul><li><p>由<strong>关系运算符</strong>形成布尔表达式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><msub><mi>E</mi><mn>1</mn></msub><mtext> </mtext><mi>r</mi><mi>e</mi><mi>l</mi><mi>o</mi><mi>p</mi><mtext> </mtext><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr E_1~relop~E_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>i</mi><mi>f</mi><mtext> </mtext><msub><mi>E</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mtext> </mtext><mi>r</mi><mi>e</mi><mi>l</mi><mi>o</mi><mi>p</mi><mtext> </mtext><msub><mi>E</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>r</mi><mtext> </mtext><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B.truelist=makelist(nextquad);\\ &amp;~~~~B.falselist=makelist(nextquad+1);\\ &amp;~~~~gen(if~E_1.addr~relop~E_2.addr~goto~\_);\\ &amp;~~~~gen(goto~\_);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9em;vertical-align:-4.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">mak</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">mak</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mord mathnormal">dd</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>先设置待<strong>填充跳转指令列表</strong>，把<strong>即将生成的两条指令</strong>分别加入真假出口对应的两个列表，再生成关系运算符的<strong>待填充跳转三地址码</strong></p></blockquote></li><li><p>由<strong>逻辑值</strong>形成布尔表达式</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr true\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B.truelist=makelist(nextquad);\\ &amp;~~~~gen(goto~\_);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">mak</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>先设置待<strong>填充跳转指令列表</strong>，把<strong>即将生成的指令</strong>加入真出口对应的列表，再生成<strong>待填充的跳转三地址码</strong></p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr false\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~B.falselist=makelist(nextquad);\\ &amp;~~~~gen(goto~\_);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">mak</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>先设置待<strong>填充跳转指令列表</strong>，把<strong>即将生成的指令</strong>加入假出口对应的列表，再生成<strong>待填充的跳转三地址码</strong></p></blockquote></li><li><p>通过<strong>逻辑运算符</strong>连接布尔表达式</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr(B_1)\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B_1.truelist=B.truelist;\\ &amp;~~~~B_1.falselist=B.falselist;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>子表达式形成后，让其<strong>真、假出口列表</strong>与父表达式保持相等</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><mi>n</mi><mi>o</mi><mi>t</mi><mtext> </mtext><msub><mi>B</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr not~B_1\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~B_1.truelist=B.falselist;\\ &amp;~~~~B_1.falselist=B.truelist;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>相反子表达式形成后，让其<strong>真、假出口列表</strong>与父表达式保持相反</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><msub><mi>B</mi><mn>1</mn></msub><mtext> </mtext><mi>o</mi><mi>r</mi><mtext> </mtext><mi>M</mi><mtext> </mtext><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr B_1~or~M~B_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>→</mo><mi>ϵ</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">M\rarr\epsilon\{a_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϵ</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>M</mi><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>M</mi><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(B_1.falselist,M.quad);\\ &amp;~~~~B.truelist=merge(B_1.truelist,B_2.truelist);\\ &amp;~~~~B.falselist=B_2.falselist;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~M.quad=nextquad;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12em;vertical-align:-5.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mpunct">;</span></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>子表达式形成并连接后：</p><ul><li><p>处理不短路的跳转位置：用记录下的第二个布尔表达式的<strong>第一条指令标号</strong>回填第一个子表达式的<strong>假出口列表</strong></p></li><li><p>处理B的出口列表</p><ul><li>真出口合并：将两个子表达式的<strong>真出口列表合并</strong>至父表达式的真出口列表</li><li>假出口：将第二个子表达式的<strong>假出口列表</strong>赋值给父表达式的假出口列表</li></ul></li></ul><p>父表达式的真假出口列表待<strong>控制流语句</strong>形成后回填</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>→</mo><msub><mi>B</mi><mn>1</mn></msub><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><mi>M</mi><mtext> </mtext><msub><mi>B</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">B\rarr B_1~and~M~B_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>→</mo><mi>ϵ</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">M\rarr\epsilon\{a_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϵ</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>M</mi><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><msub><mi>B</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>2</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>M</mi><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(B_1.truelist,M.quad);\\ &amp;~~~~B.falselist=merge(B_1.falselist,B_2.falselist);\\ &amp;~~~~B.truelist=B_2.truelist;\\ &amp;\}\\ &amp;a_2:\{\\ &amp;~~~~M.quad=nextquad;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12em;vertical-align:-5.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mpunct">;</span></span></span><span style="top:2.09em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>子表达式形成并连接后：</p><ul><li>处理不短路的跳转位置：用记录下的第二个布尔表达式的<strong>第一条指令标号</strong>回填第一个子表达式的<strong>真出口列表</strong></li><li>处理B的出口列表<ul><li>假出口合并：将两个子表达式的<strong>假出口列表合并</strong>至父表达式的真出口列表</li><li>真出口：将第二个子表达式的<strong>真出口列表</strong>赋值给父表达式的假出口列表</li></ul></li></ul><p>父表达式的真假出口列表待<strong>控制流语句</strong>形成后回填</p></blockquote></li></ul></li></ul></li></ul><hr><p><em>控制流语句的回填：</em></p><ul><li><p>有改动或新增的文法符号及其综合属性</p><ul><li><code>S</code>：控制流代码块<ul><li><code>S.nextlist</code>：指向包含待填充跳转指令的<strong>列表</strong>，列表中的跳转指令<strong>目标均为 <code>S</code>的下一条指令</strong></li></ul></li><li><code>M</code>：辅助记录的符号<ul><li><code>M.quad</code>：会将下一条指令的标号暂存至该综合属性，之后会用到</li></ul></li><li><code>N</code>：辅助记录的符号<ul><li><code>N.nextlist</code>：会将包含<strong>下一条跳转指令</strong>的列表指针标号暂存至该综合属性，之后会用到</li></ul></li></ul></li><li><p>新增的特殊变量</p><ul><li><code>nextquad</code></li></ul></li><li><p>新增的副作用</p><ul><li><code>makelist(i)</code></li><li><code>merge(p1, p2)</code></li><li><code>backpatch(p, i)</code></li></ul></li><li><p>有改动的语法规则和语义动作</p><ul><li><p>文法开始/完整控流代码块形成：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>→</mo><mi>S</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P\rarr S\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(S.nextlist,nextquad);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><blockquote><p>形成代码块后，用<strong>下一条</strong>三地址指令标号回填整体代码块的<strong>后继列表</strong>；</p><p>这条回填产生式是我自己猜的，我希望是对的</p></blockquote><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><msub><mi>S</mi><mn>1</mn></msub><mtext> </mtext><mi>M</mi><mtext> </mtext><msub><mi>S</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr S_1~M~S_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>M</mi><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">  \begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(S_1.nextlist, M.quad)\\ &amp;~~~~S.nextlist=S_2.nextlist\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>两个代码块拼接完成后，先用记录下的第二个代码块的<strong>第一条指令标号</strong>回填第一个代码块的<strong>后继列表</strong>，再将第二个代码块的后继列表赋值给整体代码块的后继列表</p></blockquote></li></ul><blockquote></blockquote><ul><li><p><strong>完整赋值语句</strong>的形成：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>d</mi><mo>=</mo><mi>E</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><mi>a</mi><mo stretchy="false">}</mo><mi mathvariant="normal">∣</mi><mi>L</mi><mo>=</mo><mi>E</mi><mo separator="true">;</mo><mo stretchy="false">{</mo><mi>a</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr id=E;\{a\}|L=E;\{a\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mclose">}</span><span class="mord">∣</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>a</mi><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>n</mi><mi>u</mi><mi>l</mi><mi>l</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a:\{\\ &amp;~~~~S.nextlist=null;\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mpunct">;</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>完整赋值语句形成后，直接让代码块<strong>后继列表为空</strong>即可；</p><p>因为赋值语句只是顺序执行，不需要特殊的跳转</p></blockquote></li><li><p>控制流结构的形成</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>f</mi><mtext> </mtext><mi>B</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>M</mi><mtext> </mtext><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr if~B~then~M~S_1\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>M</mi><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(B.truelist, M.quad);\\ &amp;~~~~S.nextlist=merge(B.falselist,S_1.nextlist);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>单分支控制流形成后：</p><ul><li>真出口：回填子代码块<strong>第一条指令</strong></li><li>假出口：与子代码块的 <code>nextlist</code>合并，给到父代码块。因为 <code>S.next</code>完全没出现在这条产生式中</li></ul></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>i</mi><mi>f</mi><mtext> </mtext><mi>B</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><msub><mi>M</mi><mn>1</mn></msub><mtext> </mtext><msub><mi>S</mi><mn>1</mn></msub><mtext> </mtext><mi>N</mi><mtext> </mtext><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mtext> </mtext><msub><mi>M</mi><mn>2</mn></msub><mtext> </mtext><msub><mi>S</mi><mn>2</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr if~B~then~M_1~S_1~N~else~M_2~S_2\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace nobreak"> </span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>→</mo><mi>ϵ</mi><mo stretchy="false">{</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">N\rarr\epsilon\{a_3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϵ</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>M</mi><mn>1.</mn><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>M</mi><mn>2.</mn><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mo stretchy="false">(</mo><mi>m</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>N</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>3</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>N</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(B.truelist,M1.quad);\\ &amp;~~~~backpatch(B.falselist,M2.quad);\\ &amp;~~~~S.nextlist=merge(merge(S_1.nextlist,N.nextlist),S_2.nextlist);\\ &amp;\}\\ &amp;a_3:\{\\ &amp;~~~~N.nextlist=makelist(nextquad);\\ &amp;~~~~gen(goto~\_);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.5em;vertical-align:-6.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-7.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">1.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">2.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">mak</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">tq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>双分支控制流形成后：</p><ul><li>真出口：回填第一个子代码块<strong>第一条指令</strong></li><li>假出口：回填第二个子代码块<strong>第一条指令</strong></li><li>中途跳转出口：与两个<strong>子代码块</strong>的 <code>nextlist</code>合并然后给到父代码块</li></ul></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>→</mo><mi>w</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>e</mi><mtext> </mtext><msub><mi>M</mi><mn>1</mn></msub><mtext> </mtext><mi>B</mi><mtext> </mtext><mi>d</mi><mi>o</mi><mtext> </mtext><msub><mi>M</mi><mn>2</mn></msub><mtext> </mtext><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S\rarr while~M_1~B~do~M_2~S_1\{a_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace nobreak"> </span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>a</mi><mn>1</mn></msub><mo>:</mo><mo stretchy="false">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>M</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>S</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>B</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>    </mtext><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>g</mi><mi>o</mi><mi>t</mi><mi>o</mi><mtext> </mtext><msub><mi>M</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*} &amp;a_1:\{\\ &amp;~~~~backpatch(S_1.nextlist,M_1.quad);\\ &amp;~~~~backpatch(B.truelist,M_2.quad);\\ &amp;~~~~S.nextlist=B.falselist;\\ &amp;~~~~gen(goto~M_1.quad);\\ &amp;\}\\ \end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9em;vertical-align:-4.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal">ba</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">.</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mpunct">;</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>循环控制流形成后：</p><ul><li>真出口：回填子代码块<strong>第一条指令</strong></li><li>假出口：产生式中没出现，给到父代码块，待之后回填</li><li>子代码块 <code>nextlist</code>：回填布尔代码块<strong>第一条指令</strong></li><li>中途跳转：跳回布尔表达式</li></ul></blockquote></li></ul></li></ul></li></ul><h2 id="7-运行存储分配">7 运行存储分配</h2><h3 id="7-1-运行存储分配概述">7.1 运行存储分配概述</h3><p><em>运行存储分配策略：</em></p><ul><li><p>编译器要为源程序中出现的一些<strong>数据对象</strong>分配<strong>运行时的存储空间</strong></p></li><li><p>静态存储分配策略：对于在编译时可以确定大小的<strong>数据对象</strong>，可以在<strong>编译时</strong>就静态地分配存储空间</p><blockquote><p><strong>静态</strong>指的是<strong>编译时、空间上</strong></p></blockquote></li><li><p>动态存储分配策略：对于不能在编译时完全确定大小的<strong>数据对象</strong>，仅在编译时产生必要信息，而在<strong>运行时</strong>动态地分配存储空间</p><blockquote><p><strong>动态</strong>指的是<strong>运行时、时间上</strong></p></blockquote><ul><li>栈式存储分配</li><li>堆式存储分配</li></ul></li></ul><hr><p><em>名字与变量：</em></p><ul><li><p>概念问题：</p><ul><li>名字：编译时的名字</li><li>变量/左值：运行时的内存位置</li><li>标识符：名字的一种，指示数据对象的入口</li><li>右值：运行时某一时刻变量的值</li></ul></li><li><p>名字到值的映射</p><ul><li><code>名字 --环境--&gt; 左值/变量 --状态--&gt; 值/右值</code></li><li>绑定：<strong>环境</strong>将<strong>名字</strong>绑定到<strong>左值/变量</strong>上</li></ul></li></ul><hr><p><em>作用域：</em></p><ul><li><p>静态作用域</p><ul><li><p>定义：编译时即可确定声明的作用域，即<strong>编译</strong>时就可以确定每个变量<strong>来自于哪个声明</strong></p></li><li><p>寻找变量规则：</p><ul><li><p>声明语句在一个程序块内，则作用域就是这个<strong>程序块</strong></p></li><li><p>如果允许嵌套，那么在寻找变量时首先找本层，然后找<strong>最近的外层</strong>，即<strong>最近作用域规则</strong></p><blockquote><p><strong>空间</strong>上最近</p></blockquote></li></ul></li></ul></li><li><p>动态作用域</p><ul><li><p>定义：不是静态作用域，即有些变量只能在<strong>运行时</strong>确定其<strong>来自于哪个声明</strong></p></li><li><p>寻找变量规则：找到最近被调用的过程中的声明</p><blockquote><p><strong>时间</strong>上最近</p></blockquote></li></ul></li></ul><hr><p><em>内存划分与过程活动：</em></p><ul><li><p>运行时内存划分：</p><ul><li><strong>静态代码</strong>区</li><li><strong>静态数据</strong>区</li><li><strong>动态数据</strong>区域<ul><li><strong>栈区</strong></li><li>空闲内存</li><li>堆区</li></ul></li></ul></li><li><p>活动记录：</p><ul><li><p>概念：</p><ul><li><p>活动(activation)：过程体的<strong>每次执行</strong>称为该过程的一个活动</p></li><li><p>活动记录(activation record)：编译器以<strong>过程</strong>为单位、为<strong>活动</strong>分配的、用来管理<strong>一次执行所需信息</strong>的连续<strong>存储空间</strong></p><blockquote><p>活动记录的体积在编译时是可以确定的</p></blockquote></li></ul></li><li><p>一般形式/构成</p><ul><li>实参</li><li>返回值</li><li>控制链/动态链：指向<strong>调用者</strong>的活动记录</li><li>访问链/静态链：用于访问<strong>非局部数据</strong></li><li>保存的<strong>机器状态</strong>/机器状态字段：各种<strong>寄存器</strong>值和其他<strong>状态信息</strong></li><li>局部数据</li><li>临时变量：中间代码生成时需要的临时变量</li></ul></li></ul></li><li><p>参数传递方式</p><ul><li>传值：新开变量，传右值</li><li>传地址：如果实参是左值，则传左值；如果实参不是左值，则创建<strong>临时变量</strong>充当左值，设置其右值，然后传左值</li><li>传值结果：同时传左值和右值，在主体中<strong>只使用右值</strong>，在<strong>结束</strong>前修改<strong>左值状态</strong></li><li>传名：过程体中用到形参的地方直接替换成一模一样的实参左值（包括运算符）</li></ul></li></ul><h3 id="7-2-静态存储分配">7.2 静态存储分配</h3><blockquote><p>静态数据和静态代码无疑是静态存储分配的，所以该小节主要讲<strong>活动记录的静态存储分配</strong></p></blockquote><p><em>静态存储分配的规则与条件：</em></p><ul><li><p>规则：</p><ul><li><strong>编译器</strong>为每个<strong>活动记录</strong>直接指定<strong>存储位置</strong></li><li>因此，过程中<strong>标识符的存储位置</strong>可以确定，每次都绑定到同样的存储单元，可以将这些地址编译到目标代码中</li></ul></li><li><p>条件：</p><ul><li><p><strong>数组上下界</strong>必须是常数</p></li><li><p>不允许<strong>递归调用</strong></p></li><li><p>不允许<strong>动态建立</strong>数据实体</p><blockquote><p>满足这些条件的语言有BASIC、FORTRAN等</p></blockquote></li></ul></li></ul><hr><p><em>顺序分配法：</em></p><ul><li><p>特点：</p><ul><li>按照过程出现的先后顺序<strong>逐段分配</strong>存储空间</li><li>各过程的活动记录占用<strong>互不相交</strong>的存储空间</li></ul></li><li><p>优点：处理简单</p></li><li><p>缺点：对内存空间的使用不够经济合理</p></li></ul><hr><p><em>层次分配法：</em></p><ul><li><p>层次分配的特点：</p><ul><li>构建<strong>过程调用图</strong>，确保图中不出现<strong>环</strong></li><li>无相互调用关系的<strong>并列过程</strong>尽量使其局部数据<strong>共享存储空间</strong></li></ul></li><li><p>层次分配的算法：</p><ul><li><p>依据过程调用图，<strong>从下至上</strong>分配</p></li><li><p><strong>同层</strong>可以互相“<strong>覆盖</strong>”</p></li><li><p><strong>上层</strong>从子过程的<strong>最高地址</strong>开始分配</p><blockquote><p>代码实现的算法详见编译原理笔记仓库</p></blockquote></li></ul></li></ul><h3 id="7-3-栈式存储分配与调用返回序列">7.3 栈式存储分配与调用返回序列</h3><p><em>栈式存储分配与活动树：</em></p><ul><li><p>栈式存储分配的概念：</p><ul><li>将过程的<strong>活动记录</strong>以<strong>栈</strong>的形式进行管理</li><li>当过程被<strong>调用</strong>时，活动记录<strong>入栈</strong>；当过程<strong>结束</strong>时，活动记录<strong>出栈</strong></li></ul></li><li><p>栈式存储分配的优点：</p><ul><li><p>允许<strong>活跃时段不交叠</strong>的过程调用<strong>共享存储空间</strong></p></li><li><p>非局部变量的相对地址固定，与调用序列无关</p><blockquote><p>关于非局部变量会在后面讲到</p></blockquote></li></ul></li><li><p>活动树与控制栈：</p><ul><li>活动树的概念：描述程序运行期间控制<strong>进入和离开各个活动</strong>的情况的树</li><li>活动树的结构：<ul><li>每个<strong>结点</strong>对应一个<strong>活动</strong>，根结点是<strong>程序入口</strong>过程的活动</li><li><strong>子结点</strong>表示被父结点活动<strong>调用的活动</strong>，按被调用的顺序自左向右排列</li><li>一个子结点活动必须在其右兄弟结点活动开始之前结束</li></ul></li><li>活动树与控制栈的关系：<ul><li>活动树<strong>根的活动记录</strong>位于<strong>栈底</strong>，程序控制所在的活动记录位于<strong>栈顶</strong></li><li><strong>控制栈</strong>中全部活动记录的<strong>序列</strong>对应于<strong>活动树</strong>中从<strong>根结点</strong>到达<strong>当前控制</strong>所在活动结点的<strong>路径</strong></li></ul></li></ul></li><li><p>设计活动记录的原则：</p><ul><li><strong>传递的项</strong>：调用者和被调用者之间<strong>传递的值</strong>放置在被调用活动记录的<strong>起始位置</strong></li><li><strong>固定长度项</strong>：固定长度的项放置在活动记录的<strong>中间位置</strong>，包括<strong>控制链、访问链、机器状态字段</strong></li><li><strong>不定长度项</strong>：初期不确定长度的项放置在活动记录的<strong>尾部</strong></li><li><strong>栈顶指针</strong>：栈顶指针寄存器 <code>top_sp</code>指向活动记录中<strong>局部数据开始的位置</strong>，以该位置作为<strong>基地址</strong></li></ul></li></ul><hr><p><em>调用序列与返回序列：</em></p><ul><li><p>调用序列与返回序列概述：</p><ul><li>过程<strong>调用</strong>和过程<strong>返回</strong>都需要执行一些<strong>代码</strong>来管理<strong>活动记录栈</strong>，保存或恢复机器状态字等</li><li><strong>调用序列</strong>：实现<strong>过程调用</strong>的<strong>代码段</strong>。为活动记录<strong>分配栈空间</strong>，并填写活动记录的<strong>字段</strong></li><li><strong>返回序列</strong>：实现<strong>过程返回</strong>的<strong>代码段</strong>。回收活动记录的栈空间，<strong>恢复机器状态</strong>，使<strong>调用者过程</strong>能继续执行</li><li>调用序列和返回序列中的代码段通常被<strong>分割到调用者过程和被调用者过程</strong>中</li></ul></li><li><p><strong>调用</strong>序列的主要内容：</p><ul><li><p>参数：<strong>调用者</strong>计算实际参数的值</p></li><li><p>返回地址：<strong>调用者</strong>将返回地址（当前程序计数器的值）存到被调用活动记录的<strong>机器状态字段</strong>中</p></li><li><p><code>top_sp</code>：<strong>调用者</strong>将 <code>top_sp</code>的值存到被调用活动记录的<strong>控制链</strong>中，并<strong>增加</strong> <code>top_sp</code>的值，使其指向被调用活动记录<strong>局部数据开始的位置</strong></p></li><li><p>机器状态：<strong>被调用者</strong>保存寄存器值和其他状态信息（<strong>保存现场</strong>）</p></li><li><p>局部数据：<strong>被调用者</strong>初始化其<strong>局部数据</strong>并开始执行</p></li><li><p>访问链：<strong>调用者</strong>设置被调用活动记录的<strong>访问链</strong></p><blockquote><p>关于访问链会在后面讲到</p></blockquote></li></ul></li><li><p><strong>返回</strong>序列的主要内容：</p><ul><li><p>返回值：<strong>被调用者</strong>将<strong>返回值</strong>存到与<strong>参数</strong>相邻的位置</p></li><li><p><code>top_sp</code>：<strong>被调用者</strong>根据<strong>控制链</strong>中的数据恢复 <code>top_sp</code></p><blockquote><p>虽然 <code>top_sp</code>的值被减小，但调用者依然可以知道<strong>返回值</strong>的位置</p></blockquote></li><li><p>机器状态：<strong>被调用者</strong>根据<strong>机器状态字段</strong>中的信息恢复寄存器值和其他状态信息（<strong>恢复现场</strong>）</p></li><li><p>返回：<strong>被调用者</strong>根据<strong>机器状态字段</strong>中的信息跳转到<strong>返回地址</strong></p></li></ul></li></ul><hr><p><em>变长数据的存储分配：</em></p><ul><li><p>变长数据的栈分配策略：</p><ul><li><p>编译时刻不能确定大小的过程<strong>局部对象</strong>可以分配到<strong>运行时刻栈</strong>中</p><blockquote><p>这样的局部对象不算作活动记录的一部分</p></blockquote></li><li><p>可以避免对变长数据空间的主动垃圾回收，减少相应开销</p><blockquote><p>现代程序设计语言中，编译时不能确定大小的对象往往分配在<strong>堆区</strong>，但如果是局部对象也可以分配到栈区</p></blockquote></li></ul></li><li><p>动态数组的分配：</p><ul><li><p>在活动记录的局部数据中存放<strong>数组指针</strong></p><blockquote><p><strong>数组指针</strong>在<strong>编译时</strong>可以确定大小，属于<strong>活动记录</strong>的一部分</p></blockquote></li><li><p><strong>运行</strong>时在栈中<strong>当前活动记录之下</strong>开辟变长数组空间，存放数组元素</p><blockquote><p>变长数组虽然出现在栈中，但并不是<strong>活动记录</strong>的一部分，因为在<strong>编译时</strong>无法确定大小，需要在<strong>运行时</strong>动态分配</p></blockquote></li></ul></li></ul><h3 id="7-4-非局部数据与访问链">7.4 非局部数据与访问链</h3><p><em>非局部数据相关概念：</em></p><ul><li><p>非局部数据的概念：</p><ul><li><p>语言可分为<strong>支持过程嵌套</strong>声明的和<strong>不支持过程嵌套</strong>声明的</p><blockquote><p>支持过程嵌套：Pascal，不支持过程嵌套：C</p></blockquote></li><li><p>支持过程嵌套的语言中，过程可以使用<strong>过程外定义的非局部数据</strong></p><blockquote><p>过程本就可以使用<strong>过程自身定义</strong>的局部数据和<strong>全局定义</strong>的数据。</p></blockquote><ul><li><strong>全局</strong>变量被分配在<strong>静态区</strong>，使用<strong>静态</strong>确定的地址访问它们</li><li><strong>局部</strong>变量被分配在<strong>栈区</strong>，在栈顶活动，通过<strong>运行时</strong>栈的 <code>top_sp</code>访问</li></ul></li></ul></li><li><p>嵌套深度的概念：</p><ul><li><strong>过程</strong>的嵌套深度：<ul><li>不内嵌在任何其他过程中的过程，其嵌套深度为1</li><li>如果一个过程p在一个嵌套深度为i的过程中定义，则过程p的嵌套深度为i+1</li></ul></li><li><strong>变量</strong>的嵌套深度：<ul><li>变量<strong>声明所在过程</strong>的嵌套深度即为该变量的嵌套深度</li></ul></li></ul></li></ul><hr><p><em>访问链及其建立：</em></p><ul><li><p>访问链的概念：</p><ul><li>静态作用域规则：只要过程b嵌套在过程a的声明中，过程b就可以访问过程a中声明的对象</li><li>访问链指针：在相互<strong>嵌套</strong>的过程的<strong>活动记录</strong>之间建立一种称为<strong>访问链</strong>的指针，使得内嵌的过程可以访问外层过程中声明的对象</li></ul></li><li><p>访问链的建立：</p><ul><li><p>建立规则：如果<strong>过程b</strong>在源代码中<strong>直接嵌套</strong>在<strong>过程a</strong>中，那么<strong>b的任何活动</strong>中的访问链都指向最近的<strong>a的活动</strong></p><blockquote><p>直接嵌套：过程b声明在过程a中且b的嵌套深度比a的嵌套深度大1</p><p>注意区分过程和活动，一个过程在运行时可以有多个活动</p></blockquote></li><li><p>建立步骤：建立访问链，其实就是在<strong>调用序列</strong>中加入相关代码，由<strong>调用者</strong>负责建立访问链</p><p>假设嵌套深度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">n_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的过程x调用嵌套深度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">n_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的过程y（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x\rarr y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>）</p><ul><li><p>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub><mo>&lt;</mo><msub><mi>n</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">n_x&lt;n_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，即<strong>外层调用内层</strong>，那么需要在y的访问链中放置一个指向x的活动记录的指针</p><blockquote><p>这种情况下y一定是<strong>直接定义</strong>在x中的，因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>y</mi></msub><mo>=</mo><msub><mi>n</mi><mi>x</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_y=n_x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p>因为外层<strong>无法进一步深入内层</strong>访问内层中的数据</p><p>外调内，内指外</p></blockquote></li><li><p>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub><mo>=</mo><msub><mi>n</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">n_x=n_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，即<strong>本层调用本层</strong>，那么被调用活动记录的访问链与调用者活动记录相同，可以直接<strong>复制</strong></p><blockquote><p>递归调用自己也是同理</p><p>同级调，<strong>复制</strong></p></blockquote></li><li><p>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub><mo>&gt;</mo><msub><mi>n</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">n_x&gt;n_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，即<strong>内层调用外层</strong>，那么从x的活动记录开始，沿着访问链经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub><mo>−</mo><msub><mi>n</mi><mi>y</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_x-n_y+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>步找到的活动记录，就是y的访问链要指向的活动记录</p><blockquote><p>这种情况下，一定存在一个过程z，满足过程x<strong>嵌套</strong>在过程z中，且z中<strong>直接定义</strong>了过程y。在上述过程中经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub><mo>−</mo><msub><mi>n</mi><mi>y</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n_x-n_y+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>步找到的活动记录就是离栈顶最近的z的活动记录</p><ul><li>这里说的“嵌套”不包括z直接定义x的情况，一定要存在一个嵌套的<strong>中间过程</strong></li></ul><p>内调外，指向最近<strong>公共祖先</strong>（不包括二者本身）</p></blockquote></li></ul></li></ul></li></ul><h3 id="7-5-符号表的组织">7.5 符号表的组织</h3><blockquote><p>由于本校考试不考查此部分，所以暂时没有知识总结</p></blockquote><h3 id="7-6-堆式存储分配">7.6 堆式存储分配</h3><blockquote><p>由于本校考试不考查此部分，所以暂时没有知识总结</p></blockquote><h2 id="8-代码优化">8 代码优化</h2><blockquote><p>由于本校考试不考查此部分，所以暂时没有知识总结</p></blockquote><h2 id="9-代码生成">9 代码生成</h2><h3 id="9-1-代码生成的主要任务">9.1 代码生成的主要任务</h3><p><em>指令选择：</em></p><ul><li><p>选择适当的<strong>目标机指令</strong>来实现中间表示（<strong>IR</strong>）语句</p></li><li><p>目标代码形式</p><ul><li>绝对机器语言代码</li><li>可重定位的机器语言代码</li><li>汇编语言代码</li></ul></li></ul><hr><p><em>寄存器分配和指派：</em></p><ul><li>选择适当的寄存器存放从内存中加载的值</li></ul><hr><p><em>指令排序：</em></p><ul><li>选择适当的顺序安排指令的执行</li></ul><h3 id="9-2-目标机与指令选择">9.2 目标机与指令选择</h3><p><em>目标机模型：</em></p><ul><li><p>特性：</p><ul><li><p>指令集：有加载、保存、运算、跳转等操作。指令之间可以有标号</p></li><li><p>内存编址：内存按字节寻址</p></li><li><p>寄存器：有n个通用寄存器</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub><mtext>、</mtext><msub><mi>R</mi><mn>1</mn></msub><mtext>、</mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>、</mtext><msub><mi>R</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">R_0、R_1、...、R_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord">...</span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span></p></li></ul></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><ul><li><p>运算：所有运算分量都是整数</p></li><li><p>主要指令：</p><ul><li><p>加载指令：<code>LD dst, addr</code></p></li><li><p>保存指令：<code>ST x, r</code></p></li><li><p>运算指令：<code>OP dst, src1, src2</code></p></li><li><p>无条件跳转指令：<code>BR L</code></p></li><li><p>条件跳转指令：<code>Bcond r, L</code></p><blockquote><p>例：<code>BLTZ r, L</code></p><p>LTZ：Less then Zero</p></blockquote></li></ul></li><li><p>寻址模式：</p><blockquote><p><code>contents(x)</code>表示取出地址 <code>x</code>上的数据，<code>conteents(R)</code>表示取出寄存器 <code>R</code>中的数据（有时也可以直接用 <code>R</code>代替）</p></blockquote><ul><li><p><strong>变量名</strong>：直接用一个变量名表示<strong>地址</strong></p><blockquote><p>例：<code>LD R1, a // R1 = contents(a)</code></p></blockquote></li><li><p>偏移：用 <code>基址(偏移量)</code>的方式表示地址</p><ul><li><p><code>a(r)</code>：<code>a</code>是变量，<code>r</code>是寄存器</p><blockquote><p>例：<code>LD R1 a(R2) // R1 = contents(a + contens(R2))</code></p></blockquote></li><li><p><code>c(r)</code>：<code>a</code>是常整数，<code>r</code>是寄存器</p><blockquote><p>例：<code>LD R1 100(R2) // R1 = contents(100 + contens(R2))</code></p></blockquote></li></ul></li><li><p>间接：<strong>指出的地址</strong>中并不存放目标数据，而是又<strong>存放着目标数据所在地址</strong></p></li><li><p><code>*</code>运算符可以理解成把地址中存放的数据取出来。在寻址模式中意思就是，<strong>指出的地址中存放的数据</strong>是真正要访问的地址</p><ul><li><p><code>*r</code>：在寄存器 <code>r</code>指示的地址中存放着目标数据所在地址</p><blockquote><p>例：<code>LD R1, *R2 // R1 = contents(contents(R2))</code></p></blockquote></li><li><p><code>*c(r)</code>：寄存器 <code>r</code>中的值再加上常整数 <code>c</code>所指示的地址中存放着目标数据所在地址</p><blockquote><p>例：<code>LD R1, *100(R2) // R1 = contents(contents(100 + contents(R2)))</code></p></blockquote></li></ul></li><li><p>立即数：<code>#c</code>表示立即数整数 <code>c</code></p><blockquote><p>例：<code>LD R1, #100 // R1 = 100</code></p></blockquote></li></ul></li></ul><hr><p><em>指令选择：</em></p><ul><li><p><strong>运算</strong>三地址语句：<code>x = y - z</code></p><ul><li><p>目标代码：</p><ul><li><code>LD R1, y</code></li><li><code>LD R2, z</code></li><li><code>SUB R1, R1, R2</code></li><li><code>ST x, R1</code></li></ul><blockquote><p>上面列出的4条指令一定能实现运算语句，但在特定情况下可以省略一些指令，例如：</p><ul><li>所需的运算分量已经在寄存器中了</li><li>运算结果不需要放回内存</li></ul></blockquote></li></ul></li><li><p><strong>数组寻址</strong>三地址语句：</p><blockquote><p><code>a</code>是一个实数数组，每个实数占8字节</p></blockquote><ul><li><code>b = a[i]</code>的目标代码：<ul><li><code>LD R1, i</code></li><li><code>MUL R1, R1, 8</code></li><li><code>LD R2, a(R1) // R2 = contents(a + contents(R1))</code></li><li><code>ST b, R2</code></li></ul></li><li><code>a[j] = c</code>的目标代码：<ul><li><code>LD R1, c</code></li><li><code>LD R2, j</code></li><li><code>MUL R2, R2, 8</code></li><li><code>ST a(R2), R1 // contents(a + contents(R2)) = R1</code></li></ul></li></ul></li><li><p><strong>指针存取</strong>三地址语句：</p><ul><li><code>x = *p</code>的目标代码：</li><li><code>LD R1, p</code></li><li><code>LD R2, 0(R1) // R2 = contents(0 + contents(R1))</code></li><li><code>ST x, R2</code></li><li><code>*p = y</code>的目标代码：</li><li><code>LD R1, p</code></li><li><code>LD R2, y</code></li><li><code>ST 0(R1), R2 // contents(0 + contents(R1)) = R2</code></li></ul></li><li><p><strong>条件跳转</strong>三地址语句：<code>if x &lt; y goto L</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LD R1, x</span><br><span class="line">LD R2, y</span><br><span class="line">SUB R1, R1, R2</span><br></pre></td></tr></table></figure></li><li><p><code>BLTZ R1, M</code></p><blockquote><p><code>M</code>是标号为 <code>L</code>的三地址语句所产生的若干条目标代码中的第一条指令标号</p></blockquote></li><li><p><strong>过程调用</strong>三地址语句</p><ul><li><p>静态存储分配：<code>call callee</code>的目标代码</p><ul><li><p><code>ST callee.staticArea, #here + 20 // 存放返回地址</code></p></li><li><p><code>BR callee.codeArea // 控制流转向被调用过程</code></p><blockquote><p><code>callee.staticArea</code>：<code>callee</code>的活动记录在静态区中的起始位置</p><p><code>callee.codeArea</code>：<code>callee</code>的目标代码在静态代码区中的起始位置</p></blockquote></li></ul></li><li><p>栈式存储分配：<code>call callee</code>的目标代码</p><ul><li><code>ADD SP, SP, #caller.recordsize</code></li><li><code>ST 0(SP), #here + 16</code></li><li><code>BR callee.codeArea</code></li></ul></li></ul></li><li><p><strong>返回</strong>三地址语句</p><ul><li>静态存储分配：<code>return</code>的目标代码<ul><li><code>BR *callee.staticArea</code></li></ul></li><li>栈式存储分配：<code>return</code>的目标代码<ul><li><code>BR *0(SP) // 由被调用者执行</code></li><li><code>SUB SP, SP, #caller.recoredsize // 由调用者执行</code></li></ul></li></ul></li></ul><hr><p><em>指令开销：</em></p><ul><li>概念：存储开销，包括存储<strong>指令本身</strong>和指令涉及的其他<strong>地址</strong><ul><li>涉及立即数和变量地址寻址会额外增加一个开销</li><li>立即数会额外增加一个开销</li><li>其中寄存器不需要额外增加开销</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Compile Principle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Database System</title>
      <link href="/posts/27633ee8.html"/>
      <url>/posts/27633ee8.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-数据库系统概述">1 数据库系统概述</h2><h3 id="1-1-数据库系统的概念与功能">1.1 数据库系统的概念与功能</h3><h4 id="数据库系统的构成与功能："><em>数据库系统的构成与功能：</em></h4><blockquote><p>Everything Over DB</p></blockquote><ul><li><p><u>数据库系统的构成</u></p><ul><li>数据库(DB)：DataBase，相互之间有关联关系的表的集合</li><li>数据库管理系统(DBMS)：DataBase Management System，管理数据库的系统软件</li><li>数据库应用(DBAP)：DataBase APplication，完成某种数据库相关功能的应用程序</li><li>数据库管理员(DBA)：DataBase Administrator</li><li>计算机基本系统</li></ul></li><li><p><u>数据库系统的功能</u></p></li><li><p>数据库可以实现<strong>信息的积累与运用</strong></p><ul><li>积累：<strong>形成数据库</strong><ul><li>运用：将积累的信息转换为<strong>效益</strong></li><li>提供数据库的<strong>管理与控制</strong>功能</li></ul></li><li>数据库是<strong>大数据</strong>技术的基础<ul><li>只求<strong>关系</strong>，不求因果</li></ul></li><li>从<strong>部分数据集</strong>上的分析，到<strong>全数据集</strong>上的分析</li></ul></li></ul><hr><h4 id="数据库与表的概念："><em>数据库与表的概念：</em></h4><ul><li><p><u>数据库的概念</u>：</p><ul><li>数据库是<strong>电子化信息</strong>的集合</li><li>数据库是相互之间<strong>有关联关系的表</strong>的集合，存放若干表的大型<strong>文件</strong></li></ul></li><li><p><u>表的概念</u>：以<strong>按行按列</strong>形式组织及展现的数据</p><blockquote><p>表也可以称之为<strong>关系</strong></p></blockquote></li><li><p><u>表的构成</u>：</p><ul><li>表名</li><li>表标题（格式）</li><li>表内容（值）</li><li>表结构<ul><li>行(row)/元组(tuple)/记录(record)</li><li>列(column)/字段(field)/属性(attribute)/数据项(data item)t</li></ul></li></ul></li><li><p><u>表的作用</u>：</p><ul><li>表中描述了一批相互有<strong>关联关系</strong>的数据</li><li>基于表提出了<strong>关系及关系模型</strong>，提出了<strong>关系数据库</strong></li></ul></li></ul><hr><h4 id="数据库管理系统的概念与功能："><em>数据库管理系统的概念与功能：</em></h4><ul><li><p><u>概述</u>：数据库管理系统一种系统软件，它通过<strong>结构化数据库语言</strong>提供基本的数据库操作功能，运行程序<strong>解析</strong>语言并<strong>执行</strong>对数据库的具体操作</p></li><li><p><u>提供数据库语言(SQL, Structured Query Language)</u></p><blockquote><p>主要从<strong>用户使用</strong>的角度讲解</p></blockquote><blockquote><p>数据库语言：DBMS提供的用于<strong>指示DBMS操作数据库</strong>的语言，相当于高级语言的一个或多个循环程序，可以嵌入高级语言（宿主语言）中使用</p></blockquote><ul><li><p>数据<strong>定义</strong>语言(DDL, Data Definition Language)：<strong>定义</strong>数据库中表的名称、标题（包括属性名及对属性值的要求）等<strong>格式</strong>，<strong>创建</strong>数据库和表</p><blockquote><p>也包括对数据库和表的删除、更改、查询</p></blockquote></li><li><p>数据<strong>操纵</strong>语言(DML, Data Manipulation Language)：对数据库中的表进行<strong>增加、删除、更改、检索</strong>等操作</p></li><li><p>数据<strong>控制</strong>语言(DCL, Data Control Language)：规定<strong>用户</strong>操作<strong>数据</strong>的<strong>权限</strong>，实施对数据库的<strong>控制</strong></p></li><li><p>数据库<strong>维护</strong>程序：提供对数据库维护的功能，包括转储、恢复、重组、性能检测、分析等，一般由DBA使用</p></li></ul></li><li><p><u>运行系统例行程序</u></p><blockquote><p>主要从<strong>系统实现</strong>的角度讲解</p></blockquote><blockquote><p>这些例行程序本质上是用<u><strong>形式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>构造<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>自动化</strong></u>的思想<strong>实现</strong>数据库管理系统</p></blockquote><ul><li><strong>编译</strong>与执行控制程序<ul><li>将数据库语言翻译成DBMS可执行的命令（DDL编译器、DML编译器、DCL编译器等）</li></ul></li><li><strong>查询</strong>优化与查询实现程序<ul><li>提高数据库<strong>检索速度</strong></li><li>执行引擎<strong>实现查询</strong></li></ul></li><li><strong>存储与索引</strong>程序<ul><li>提供数据在<strong>外存</strong>上的<strong>高效存取</strong>手段</li><li>实现存储管理器、缓冲区管理器、索引/文件和记录管理器等</li></ul></li><li><strong>事务</strong>处理程序<ul><li>提高可靠性，避免并发错误</li></ul></li><li>各种<strong>控制</strong>程序<ul><li>通信控制：提供网络环境下数据操作与传输手段</li><li>故障恢复、安全性和完整性控制</li><li>数据库维护和数据字典管理</li><li>应用程序接口</li></ul></li></ul><blockquote><p>详见数据库系统笔记仓库</p></blockquote></li></ul><h3 id="1-2-数据库系统的抽象结构">1.2 数据库系统的抽象结构</h3><h4 id="三级模式两层映像："><em>三级模式两层映像：</em></h4><ul><li><p>⭐️<u><strong>三级模式两层映像</strong>是数据库系统的标准结构</u></p></li><li><p><u>DBMS管理<strong>数据</strong>的三个层次</u>：</p><ul><li><p>外部层次/用户层次：某一<strong>用户</strong>能处理的数据，是全局数据的<strong>一部分</strong></p><blockquote><p>强调<strong>局部性</strong></p></blockquote></li><li><p>概念层次/逻辑层次：<strong>全局</strong>管理的数据，包含<strong>关联约束</strong></p><blockquote><p>强调<strong>全局性</strong></p></blockquote></li><li><p>内部层次/物理层次：<strong>存储</strong>在介质上的数据，包含存储路径、存储方式、存储索引等</p><blockquote><p><strong>强调物理存储</strong></p></blockquote></li></ul></li><li><p><u><strong>模式、视图、映像</strong>的概念</u>：</p><ul><li>模式(Schema)：对数据库中数据的<strong>结构性描述</strong>，表现数据的<strong>结构信息</strong></li><li>视图(View)/数据(Data)：某一种<strong>结构</strong>下数据库中的<strong>数据</strong></li><li>映像(Mapping)：一种结构到另一种结构的<strong>映射</strong></li></ul></li><li><p><strong><u>三级模式</u></strong>：</p><ul><li><p>局部/外部/外/用户/子 模式(External Schema)：某一<strong>用户</strong>能处理的<strong>数据的结构描述</strong></p><ul><li><p>局部/外部/外/用户/子 视图(External View)：某一用户能处理的<strong>数据</strong></p><blockquote><p>可以简称为<strong>视图</strong></p></blockquote></li></ul></li><li><p>全局/概念/逻辑 模式(Conceptual Schema)：<strong>全局</strong>管理的<strong>数据的结构描述</strong></p><blockquote><p>可以简称为<strong>模式</strong></p></blockquote><ul><li>全局/概念/逻辑 视图(Conceptual View)：<strong>全局</strong>管理的<strong>数据</strong></li></ul></li><li><p>内部/物理 模式(Internal Schema)：<strong>存储</strong>在介质上的<strong>数据的结构描述</strong></p><ul><li>内部/物理 视图(Internal View)：<strong>存储</strong>在介质上的<strong>数据</strong></li></ul></li></ul></li><li><p><strong><u>两层映像</u></strong>：</p><ul><li>E-C Mapping (External Schema-Conceptual Schema Mapping)<ul><li>概念：将<strong>外部模式</strong>映射为<strong>概念模式</strong>，从而实现<strong>概念视图</strong>向<strong>外部视图</strong>的转换</li><li>优点：便于<strong>用户</strong>观察和使用</li></ul></li><li>C-I Mapping (Conceptual Schem-Internal Schema Mapping)<ul><li>概念：将<strong>概念模式</strong>映射为<strong>内部模式</strong>，从而实现<strong>概念视图</strong>向<strong>内部视图</strong>的转换</li><li>优点：便于<strong>计算机</strong>进行存储和处理</li></ul></li></ul></li><li><p><u><strong>两个独立性</strong></u>：</p><blockquote><p>两个独立性是三级模式两层映像的重要优点</p></blockquote><ul><li>逻辑数据独立性：当<strong>概念模式</strong>变化时，只需改变<strong>E-C Mapping</strong>，无需改变<strong>外部模式</strong>，从而无需改变<strong>应用程序</strong></li><li>物理数据独立性：当<strong>内部模式</strong>变化时，只需改变<strong>C-I Mapping</strong>，无需改变<strong>概念模式</strong>，从而无需改变<strong>外部模式和应用程序</strong></li></ul><blockquote><p>三级模式两层映像本质上定义了一组<strong>接口规范</strong>，由用户按照接口定义三级模式，由DBMS程序自动实现两层映像，从而实现抽象、屏蔽变化</p></blockquote></li></ul><hr><h4 id="数据模型："><em>数据模型：</em></h4><ul><li><p><u>数据模型的概念</u>：</p><ul><li>数据模型是<strong>对模式的抽象</strong></li><li>数据模型规定了<strong>模式统一描述方式</strong>，包括数据结构、操作和约束</li></ul></li><li><p><u>数据模型的常见种类</u>：</p><ul><li><p><strong><u>关系模型</u></strong>：</p><ul><li>以表的形式组织数据</li><li>规定所有模式都遵循<strong>表的数据结构</strong>，每个具体的模式都是拥有某些<strong>属性</strong>的表</li><li>规定对表形式<strong>数据的操作和约束</strong></li></ul></li><li><p><u>层次模型</u>：</p><ul><li><p>以树的形式组织数据</p></li><li><p>用<strong>实体型</strong>作为数据记录</p><blockquote><p>相当于树中的结点</p></blockquote></li><li><p>用<strong>系型</strong>表示数据之间的联系，由<strong>指针</strong>实现</p><blockquote><p>相当于树中的边</p></blockquote></li><li><p>规定所有模式都要描述<strong>实体型的含义</strong>并规定<strong>实体型之间的系型</strong></p></li></ul></li><li><p><u>网状模型</u>：</p><ul><li>以图的形式组织数据，同样有实体型和系型</li></ul></li></ul></li></ul><hr><h4 id="数据库系统的发展："><em>数据库系统的发展：</em></h4><ul><li><p><u>四个阶段</u>：</p><ul><li><p>数据库技术探索</p></li><li><p>数据库技术确立</p></li><li><p>数据库技术成熟</p><blockquote><p>在该阶段提出了标准化数据库系统结构模型，也就是三级模式两层映像</p></blockquote></li><li><p>数据库技术深化发展</p></li></ul></li><li><p><u>从<strong>文件系统</strong>到<strong>数据库</strong></u>：</p><blockquote><p>详见数据库系统笔记仓库</p></blockquote><ul><li>文件系统<ul><li>概述：文件系统是<strong>操作系统</strong>管理数据的方式，以<strong>记录</strong>为单位，提供各种存取方法</li><li>优点：用户不必考虑<strong>物理存储</strong>，不需要处理物理设备存取的复杂性</li><li>缺点：<ul><li><strong>数据与程序</strong>耦合度较高，数据的组织和语义依赖于程序的具体实现</li><li>共享差；不一致性高</li><li>文件、记录之间<strong>联系性</strong>较差</li><li>冗余大</li></ul></li></ul></li><li>数据库<ul><li>概述：由DBMS统一存取，维护数据组织形式及语义，以<strong>记录</strong>为单位，也可以<strong>数据项</strong>和<strong>记录集合</strong>为单位</li><li>优点：<ul><li>DBMS 数据及数据结构的定义和描述，让<strong>数据与应用程序</strong>解耦合，具有<strong>两个独立性</strong>，查询和统计高效</li><li><strong>统一的数据控制</strong>，共享性高；自动检查安全性、完整性、并发正确性</li><li>文件（Table）、记录之间有关联</li><li>冗余小，易扩充</li></ul></li></ul></li></ul></li><li><p><u>从层次模型、网状模型数据库到<strong>关系模型数据库</strong></u>：</p><ul><li><p>第一代数据库系统：层次模型与网状模型数据库</p><blockquote><p>重要的特点：<strong>指针</strong></p></blockquote><ul><li>数据的<strong>结构</strong>：数据之间的关联关系由<strong>指针系统</strong>维护，结构描述复杂</li><li>数据的<strong>操作</strong>：<ul><li>数据检索操作依赖于<strong>指针系统</strong>指示的<strong>路径</strong></li><li>需要逐一记录操作，不能有效支持<strong>记录集合</strong>的操作</li></ul></li></ul></li><li><p>第二代数据库系统：关系模型数据库</p><blockquote><p><strong>消除</strong>了网状、层次模型的<strong>指针</strong></p></blockquote><ul><li>数据的<strong>结构</strong>：数据之间的关联关系由<strong>表</strong>的属性值来表征，结构描述简单</li><li>数据的操作：<ul><li>数据检索操作不依赖于路径或过程信息，支持<strong>非过程化的数据操作</strong></li><li>有效支持<strong>记录集合</strong>的操作</li></ul></li><li>理论：有较为完善的理论基础</li></ul></li></ul></li><li><p><u>从<strong>关系</strong>数据库到<strong>对象-关系</strong>数据库、<strong>面向对象</strong>数据库</u>：</p><ul><li>关系数据库<ul><li>按<strong>行列</strong>组织数据，遵循<strong>关系第一范式</strong>，要求<strong>数据项不可再分</strong></li><li>支持各种<strong>关系运算</strong>，有较为完善的关系数据库设计理论</li></ul></li><li>对象-关系数据库（新一代数据库系统）<ul><li>通过<strong>行对象、列对象</strong>组织数据</li><li>可以不满足第一范式，支持<strong>复合属性</strong>（结构对象）和<strong>多值属性</strong>（聚集对象）</li></ul></li><li>面向对象数据库（新一代数据库系统）<ul><li>结合面向对象技术（O-O）和集合/聚集操作技术（SQL）</li><li>支持复杂数据类型，支持<strong>面向对象特性</strong></li></ul></li><li>XML数据库（新一代数据库系统）<ul><li>半结构化数据库</li><li>将<strong>数据</strong>与<strong>数据的语义</strong>合并在一起进行存储和管理</li><li>面向<strong>数据交换</strong></li></ul></li></ul></li><li><p><u>从单一数据库到多数据库互联</u>：</p><ul><li><strong>ODBC作为接口</strong>，规范程序书写，解开应用程序与数据库管理系统的耦合</li><li>实现多种多样数据库的<strong>开放式互联</strong></li></ul></li></ul><h2 id="2-关系模型">2 关系模型</h2><h3 id="2-1-关系模型概述">2.1 关系模型概述</h3><h4 id="关系模型三要素："><em>关系模型三要素：</em></h4><ul><li><u>基本结构</u>：Relation/Table<ul><li>描述数据库各种<strong>数据的基本结构</strong>形式</li></ul></li><li><u>基本操作</u>：Relation Operator<ul><li>描述数据库<strong>表之间</strong>可能发生的各种操作（<strong>关系运算</strong>）</li></ul></li><li><u>完整性约束</u>：Integrity Constraints<ul><li>描述<strong>基本结构与操作</strong>应当遵循的<strong>约束条件</strong></li></ul></li></ul><hr><h4 id="关系的数学定义："><em>关系的数学定义：</em></h4><ul><li><p><u>关系/表的定义</u></p><ul><li><p>域（Domain）：</p><ul><li>域的概念：一组<strong>相同数据类型值</strong>的集合</li><li>基数（Cardinality）：集合中的<strong>元素个数</strong></li><li>域在关系中的作用：是关系中某<strong>列的取值范围</strong></li></ul></li><li><p>笛卡尔积（Cartesian Product）：</p><ul><li><strong>元组</strong>和<strong>笛卡尔积</strong>：从<strong>一组域中各取一个元素</strong>构成的序对称为<strong>元组</strong>，所有这样可能的<strong>不重复的元组的集合</strong>称为这组域的<strong>笛卡尔积</strong></li><li>笛卡尔积的<strong>分量</strong>：一个元组中的某一元素</li><li>笛卡尔积的<strong>基数</strong>：笛卡尔积中元组的总数</li></ul></li><li><p>关系（Relation）</p><ul><li><p>关系的概念：一组域的<strong>笛卡尔积的子集</strong>，具有某方面意义的<strong>元组的集合</strong></p></li><li><p><strong>属性名</strong>：关系中每一列的名字</p><blockquote><p>关系的不同列可能来自同一域，用属性名加以区分</p></blockquote></li></ul></li><li><p>关系模式/表标题（Shcema/Head）</p><ul><li><p>关系模式的概念：关系的一种描述方式，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo>:</mo><msub><mi>D</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo>:</mo><msub><mi>D</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo>:</mo><msub><mi>D</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(A_1:D_1,A_2:D_2,...,A_n:D_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><ul><li>R：关系的名字</li><li>A：属性</li><li>D：域（有时可以省略D）</li><li>n：关系的度/目（degree）</li></ul></li><li><p>DBMS中的关系模式：<code>关系模式(属性名 域名, ...)</code></p><ul><li><code>域名</code>的描述方式：<code>属性类型(长度)</code></li></ul><blockquote><p>举例：<code>Student(S# char(8), Sname char(10), Sage integer(9))</code></p></blockquote></li><li><p>关系模式与关系：</p><ul><li>关系模式是<strong>关系的结构</strong>，关系是关系模式下的<strong>数据集合</strong></li><li>同一关系模式下可以有很多关系</li></ul></li></ul></li></ul></li><li><p><u>关系/表的特性</u></p><ul><li><p><strong>列同质</strong>：每一列中的分量来自<strong>同一域</strong></p></li><li><p><strong>属性名不冲突</strong>：关系模式中各<strong>属性名必须不同</strong>，对应的域可以相同</p></li><li><p><strong>行列位置互换性</strong>：用<strong>属性名</strong>区分列，用某<strong>属性值</strong>区分行，而不依靠位置区分</p><blockquote><p>仅仅是<strong>行列位置互换</strong>的两个关系是<strong>相同</strong>的关系</p></blockquote></li><li><p><strong>元组不重复</strong>：关系中的任意两个元组不能完全相同，即不能<strong>每个分量都相同</strong></p><blockquote><p>现实应用中，<strong>表</strong>可能不完全遵守此特性</p></blockquote></li><li><p><strong>第一范式</strong>：属性不可再分</p></li></ul></li><li><p><u>特殊的属性(组)</u></p><ul><li><p><em>候选码/候选键（Candidate / Alternative Key）</em>：关系中的一个<strong>属性组</strong>，其值能<strong>唯一标识一个元组</strong>，若去掉其中任何一个属性则不能唯一标识元组</p><blockquote><p>具有“极小性”</p></blockquote></li><li><p><em>主码/主键（Primary Key）</em>：被选定为主要线索的候选码/候选键</p></li><li><p><em>主属性与非主属性</em>：包含在任何一个<strong>候选码</strong>中的属性称为<strong>主属性</strong>，其他属性称为<strong>非主属性</strong></p></li><li><p><em>外码/外键（Foreign Key）</em>：与<strong>另一个关系的候选码</strong>相对应的<strong>属性组</strong></p><blockquote><p>两个关系通常是靠<strong>外码连接</strong>起来的</p></blockquote></li></ul></li></ul><hr><h4 id="关系模型中的完整性约束："><em>关系模型中的完整性约束：</em></h4><ul><li><strong>实体完整性</strong>：<strong>主键</strong>中的属性值不能为空</li><li><strong>参照完整性</strong>：若<strong>外键</strong>对应的候选键是<strong>主键</strong>，则其属性值要么与其对应<strong>主键的某一值</strong>相等，要么为<strong>空值</strong></li><li><strong>用户自定义</strong>的完整性：用户针对具体的应用环境定义的完整性约束条件<ul><li>可以在域的基础上加约束</li><li>可以对属性或属性组联合约束</li></ul></li><li>DBMS对完整性的支持：<ul><li><strong>实体完整性和参照完整性</strong>由DBMS系统自动支持</li><li>用户可以<strong>自定义</strong>完整性约束</li><li>有<strong>更新</strong>操作发生时，<strong>DBMS自动检查</strong>是否符合完整性</li></ul></li></ul><h3 id="2-2-关系代数">2.2 关系代数</h3><h4 id="关系代数运算概述："><em>关系代数运算概述：</em></h4><ul><li><p><strong>基本概念</strong>：基于关系代数的运算，就是<strong>基于集合的运算</strong></p></li><li><p><strong>输入输出</strong>：<strong>一个或多个关系</strong>为输入，输出<strong>一个新的关系</strong></p></li><li><p><strong>作用</strong>：一种<strong>抽象语言</strong>，是其他<strong>数据库语言</strong>如SQL的基础</p></li><li><p><strong>运算思想</strong>：先实现<strong>基本操作</strong>，再组合成<strong>扩展操作</strong></p><ul><li>下述扩展操作均可由5个基本操作组合完成</li></ul></li><li><p>关系代数运算的约束/<strong>并相容性</strong>：参与运算的关系<strong>属性数目（目数、度数）相同</strong>，对应<strong>属性的域相同</strong></p><ul><li>关系代数某些操作都要满足<strong>并相容性</strong></li></ul></li></ul><hr><h4 id="关系代数的基本操作："><em>关系代数的基本操作：</em></h4><ul><li><p>**并（Union）**操作</p><ul><li>概念：出现在<strong>关系R或关系S</strong>中的所有<strong>不重复</strong>元组集合<ul><li>要满足并相容性</li></ul></li><li>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∪</mo><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mo>∈</mo><mi>R</mi><mo>∨</mo><mi>t</mi><mo>∈</mo><mi>S</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>t</mi><mtext>是元组</mtext></mrow><annotation encoding="application/x-tex">R\cup S=\{t|t\in R\vee t\in S\},t是元组</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">是元组</span></span></span></span></li></ul></li><li><p>**差（Difference）**操作</p><ul><li>概念：出现在关系R中但不出现在关系S中的所有元组集合<ul><li>要满足并相容性</li></ul></li><li>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>−</mo><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mo>∈</mo><mi>R</mi><mo>∧</mo><mi>t</mi><mo mathvariant="normal">∉</mo><mi>S</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>t</mi><mtext>是元组</mtext></mrow><annotation encoding="application/x-tex">R-S=\{t|t\in R\wedge t\notin S\},t是元组</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">是元组</span></span></span></span></li></ul></li><li><p>**广义笛卡尔积（Cartesian Product）**操作</p><ul><li><p>概念：关系R与关系S中元组所有可能的<strong>拼接</strong>构成的元组集合</p></li><li><p>数学描述：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>R</mi><mo>×</mo><mi>S</mi><mo>=</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">{</mo><mo>&lt;</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>b</mi><mi>n</mi></msub><mo>&gt;</mo><mi mathvariant="normal">∣</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&lt;</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo>&gt;</mo><mo>∈</mo><mi>R</mi><mtext>  </mtext><mo>∧</mo><mo>&lt;</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>b</mi><mi>n</mi></msub><mo>&gt;</mo><mo>∈</mo><mi>S</mi><mo stretchy="false">}</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp;R\times S=\\&amp;\{&lt;a_1,a_2,...,a_n,b_1,b_2,...,b_n&gt;|\\&amp;&lt;a_1,a_2,...,a_n&gt;\in R~~\wedge&lt;b_1,b_2,...,b_n&gt;\in S\}\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">{</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord">∧</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p></li><li><p>满足的性质：</p><ul><li>交换律</li><li>度数相加</li><li>基数相乘</li></ul></li><li><p>应用：<strong>检索多个表</strong></p></li></ul></li><li><p>**选择（Select）**操作</p><ul><li>概念：从关系R中选择出满足给定条件condition的<strong>元组</strong></li><li>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mo>∈</mo><mi>R</mi><mo>∧</mo><mi>c</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\sigma_{con}(R)=\{t|t\in R\wedge con(t)=true\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mclose">}</span></span></span></span><ul><li><strong>条件 <code>con(t)</code><strong>的描述：由</strong>逻辑运算符</strong>连接<strong>比较表达式</strong>组成<ul><li>逻辑运算符：<code>and or not</code></li><li>比较表达式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mtext> </mtext><mi>θ</mi><mtext> </mtext><mi>Y</mi></mrow><annotation encoding="application/x-tex">X~\theta~Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，其中X和Y是<strong>分量、常量或简单函数</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>是比较运算符，<code>&gt; &gt;= &lt; &lt;= = !=</code></li><li><strong>分量</strong>的描述：设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(A_1,A_2,...A_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<code>t</code>是 <code>R</code>的元组，<code>t</code>的分量记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo stretchy="false">[</mo><msub><mi>A</mi><mi>i</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">t[A_i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li></ul></li></ul><blockquote><p>与SQL中常用的 <code>select</code>不同，这里选择的是<strong>元组</strong>，是行</p></blockquote></li><li><p>**投影（Project）**操作</p><ul><li>概念：关系R中属性包含在A中的<strong>列</strong>构成的关系<ul><li>要去掉重复元组</li></ul></li><li>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><msub><mi>A</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>A</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>A</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>&lt;</mo><mi>t</mi><mo stretchy="false">[</mo><msub><mi>A</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">[</mo><msub><mi>A</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">[</mo><msub><mi>A</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo stretchy="false">]</mo><mo>&gt;</mo><mi mathvariant="normal">∣</mi><mi>t</mi><mo>∈</mo><mi>R</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Pi_{A_{i1},A_{i2},...,A_{ik}}(R)=\{&lt;t[A_{i1}],t[A_{i2}],...,t[A_{ik}]&gt;|t\in R\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">...</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">}</span></span></span></span></li><li>应用：用户可以通过<strong>投影、选择操作</strong>查询关心的数据信息</li></ul><blockquote><p>对应了SQL中常用的 <code>select</code>，选择的是<strong>属性</strong>，是列</p><p>当然关系会去重，表可以不去</p></blockquote></li><li><p><strong>更名</strong>操作</p><ul><li><p>概念：为关系代数式中的<strong>同一个关系取别名</strong>以区分</p></li><li><p>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ρ</mi><msub><mi>R</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\rho_{R_1}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0077em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><blockquote><p>将关系R更名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">R_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></blockquote></li></ul></li></ul><hr><h4 id="关系代数的扩展操作："><em>关系代数的扩展操作：</em></h4><ul><li><p>**交（Intersection）**操作</p><ul><li>概念：同时出现在<strong>关系R和关系S</strong>中的所有元组集合<ul><li>要满足并相容性</li></ul></li><li>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∩</mo><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mo>∈</mo><mi>R</mi><mo>∧</mo><mi>t</mi><mo>∈</mo><mi>S</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>t</mi><mtext>是元组</mtext></mrow><annotation encoding="application/x-tex">R\cap S=\{t|t\in R\wedge t\in S\},t是元组</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">是元组</span></span></span></span></li><li>与基本操作的关系：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>∩</mo><mi>S</mi><mo>=</mo><mi>R</mi><mo>−</mo><mo stretchy="false">(</mo><mi>R</mi><mo>−</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mo>−</mo><mo stretchy="false">(</mo><mi>S</mi><mo>−</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R\cap S=R-(R-S)=S-(S-R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></li></ul></li><li><p>**<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\theta-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span>）**操作：</p><ul><li><p>概念：关系R和关系S的笛卡尔积中，R中属性A与S中属性B满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>条件的元组集合</p><blockquote><p>也叫 <em>内连接（Inner Join）</em></p></blockquote></li><li><p>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo><munder><mo><mo>⋈</mo></mo><mrow><mi>A</mi><mtext> </mtext><mi>θ</mi><mtext> </mtext><mi>B</mi></mrow></munder></mo><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>t</mi><mo stretchy="false">[</mo><mi>A</mi><mo stretchy="false">]</mo><mtext> </mtext><mi>θ</mi><mtext> </mtext><mi>s</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R\underset{A~\theta~B}\bowtie S=\sigma_{t[A]~\theta~s[B]}(R\times S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4404em;vertical-align:-0.7571em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.505em;"><span style="top:-2.3429em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⋈</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7571em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">A</span><span class="mclose mtight">]</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathnormal mtight">s</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>A</mi><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R(A_1,A_2,...,A_n),~A\in\{A_1,A_2,...,A_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>B</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>B</mi><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>B</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S(B_1,B_2,...,B_n),~B\in\{B_1,B_2,...,B_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li><li>t是关系R中的元组，s是关系S中的元组</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>是比较运算符，属性A和属性B具有可比性</li></ul></li><li><p>应用：与投影、选择操作联用</p></li><li><p>DBMS的实现：DBMS可以<strong>直接进行连接操作</strong>，降低中间结果的保存量，而不必先形成笛卡尔积</p></li></ul></li><li><p>**等值连接（Equi-Join）**操作</p><ul><li><p>概念：关系R和关系S的笛卡尔积中，R中属性A与S中属性B<strong>相等</strong>的元组集合</p><ul><li><p>一种特殊的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接</p><blockquote><p>是一种内连接</p></blockquote></li><li><p><strong>合并</strong>参与等值连接的<strong>重复的属性列</strong>，因为值完全相同，保留一列即可</p><blockquote><p>普通的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span> 连接是不需要合并的</p></blockquote></li></ul></li><li><p>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo><munder><mo><mo>⋈</mo></mo><mrow><mi>A</mi><mo>=</mo><mtext> </mtext><mi>B</mi></mrow></munder></mo><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>t</mi><mo stretchy="false">[</mo><mi>A</mi><mo stretchy="false">]</mo><mo>=</mo><mi>s</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R\underset{A=~B}\bowtie S=\sigma_{t[A]=s[B]}(R\times S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4327em;vertical-align:-0.7493em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.505em;"><span style="top:-2.3507em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⋈</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7493em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">A</span><span class="mclose mtight">]</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">s</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></p></li></ul></li><li><p><strong>自然连接</strong>操作</p><ul><li><p>概念：关系R和关系S的笛卡尔积中，<strong>相同属性组B</strong>上的值都<strong>相等</strong>的元组集合</p><ul><li><p>一种特殊的等值连接</p><blockquote><p>是一种内连接</p></blockquote></li><li><p>要求关系R和关系S有相同的属性组B</p></li><li><p><strong>合并</strong>参与等值连接的<strong>重复的属性列</strong>，因为值完全相同，保留一列即可</p></li></ul></li><li><p>数学描述：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>⋈</mo><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>t</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><mi>s</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo>×</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R\bowtie S=\sigma_{t[B]=s[B]}(R\times S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6883em;vertical-align:-0.005em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">]</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">s</span><span class="mopen mtight">[</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></p></li></ul></li><li><p>**除（Divison）**操作</p><ul><li><p>前提条件：关系S的属性集是关系R的属性集的<strong>真子集</strong></p></li><li><p>概念：关系R除关系S，得到关系中，<strong>属性集</strong>是关系R属性集<strong>差</strong>关系S属性集，<strong>元组</strong>是与S中每一个元组<strong>连接</strong>后的新元组都在关系R中的元组</p></li><li><p>数学描述：</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>÷</mo><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><mi>t</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mo>∈</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>R</mi><mo>−</mo><mi>S</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>∧</mo><mi mathvariant="normal">∀</mi><mi>u</mi><mo>∈</mo><mi>S</mi><mo stretchy="false">(</mo><mi>t</mi><mi>u</mi><mo>∈</mo><mi>R</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R\div S=\{t|t\in\Pi_{R-S}(R)\wedge\forall u\in S(tu\in R)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">t</span><span class="mord">∣</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)}</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>÷</mo><mi>S</mi><mo>=</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>R</mi><mo>−</mo><mi>S</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>R</mi><mo>−</mo><mi>S</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>R</mi><mo>−</mo><mi>S</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>×</mo><mi>S</mi><mo stretchy="false">)</mo><mo>−</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R\div S=\Pi_{R-S}(R)-\Pi_{R-S}((\Pi_{R-S}(R)\times S)-R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></p><blockquote><p>如何记忆？</p><ul><li>差运算保证并相容性，所以投影的是 <code>R-S</code>中的属性</li><li>通过 <code>差R</code>的操作找到连接后不在R中的元组</li></ul></blockquote></li></ul></li><li><p>应用：带有“全部”、“所有”字样的检索</p><blockquote><p>“全部”体现在**“商”与S中元组连接全部都在R中**</p></blockquote></li></ul></li><li><p>**外连接（Outer-Join）**操作</p><ul><li><p>概念：两个关系连接时，若无匹配元组，则与<strong>全为空值</strong>的次关系元组连接</p><blockquote><p>是对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接（Inner-Join）的扩展</p></blockquote></li><li><p>外连接的形式：外连接  =  自然连接（或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接）+  失配元组（与<strong>全空元组</strong>的连接）</p><ul><li><p>左外连接  =  自然连接（或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接）+  左侧表失配元组（与右侧表全空元组的连接）</p><blockquote><p>Left Outer Join</p></blockquote></li><li><p>右外连接  =  自然连接（或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接）+  右侧表失配元组（与左侧表全空元组的连接）</p><blockquote><p>Right Outer Join</p></blockquote></li><li><p>全外连接  =  自然连接（或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接）+  两侧表失配元组（与对侧表全空元组的连接）</p><blockquote><p>Full Outer Join</p></blockquote></li></ul></li><li><p>应用：避免连接时丢失元组信息</p></li></ul></li></ul><hr><h4 id="关系代数操作的应用经验："><em>关系代数操作的应用经验：</em></h4><ul><li>基本操作的书写思路/集合思维<ol><li>先写出 <code>R</code>，即找出要操作的关系</li><li>写<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{con}()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>，即进行<strong>选择</strong>运算保留所需的行/元组</li><li>写<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><msub><mi>A</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>A</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>A</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{A_{i1},A_{i2},...,A_{ik}}()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">...</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>，即进行投影运算保留所需的的列/属性</li><li>进行<strong>并差积交</strong>运算</li></ol></li><li>扩展操作相关思路<ul><li>涉及<strong>多表</strong>时才需要考虑扩展操作</li><li>在<strong>连接</strong>步骤中，依次尝试下列操作，直到满足需求<ol><li>自然连接</li><li>等值连接与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo></mrow><annotation encoding="application/x-tex">\theta-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">−</span></span></span></span>连接</li><li>广义笛卡尔积</li></ol></li></ul></li></ul><h2 id="3-Database-Language-SQL">3 Database Language - SQL</h2><h3 id="3-1-Basic-SQL">3.1 Basic SQL</h3><h4 id="Overview："><em>Overview：</em></h4><ul><li><u>Proposal &amp; Development:</u><ol><li>1975 - 1979: SQL</li><li>1992: <strong>SQL-92 / SQL2</strong><ul><li><strong>Standard</strong> relation database language</li></ul></li><li>1999: SQL-99 / SQL3<ul><li>Object-oriented: row object and column object …</li></ul></li></ol></li><li><u>Functions:</u><ul><li><p><em>DDL</em>: <code>Create</code>, <code>Alter</code>, <code>Drop</code></p><ul><li>Definition and removal of schema, including <strong>DB, table, view, index, integrity constraint, …</strong></li></ul></li><li><p><em>DML</em>: <code>Insert</code>, <code>Delete</code>, <code>Update</code>, <code>Select</code></p><ul><li><strong>Query, update, aggregate operation</strong></li></ul></li><li><p><em>DCL</em>: <code>Grant</code>, <code>Revoke</code></p><ul><li><strong>Security</strong> control</li></ul></li></ul></li></ul><hr><h4 id="SQL-Manipulating-Database："><em>SQL Manipulating Database：</em></h4><ul><li><p><u>Set up database:</u></p><ol><li><p>Create database:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database databaseName;</span><br></pre></td></tr></table></figure></li><li><p>Specify database:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use databaseName;</span><br></pre></td></tr></table></figure><ul><li>Many DBMS allows operating multiple databases</li></ul></li><li><p><strong>Create table</strong>:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableName(</span><br><span class="line">    columnName dataType [<span class="keyword">Default</span> defaultValue<span class="operator">|</span><span class="keyword">NULL</span>] [<span class="keyword">Primary</span> key<span class="operator">|</span><span class="keyword">Unique</span>] [<span class="keyword">Not</span> <span class="keyword">null</span>]</span><br><span class="line">    [, columnName dataType ...]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><code>Primary key</code>: primary key constraint, <strong>only one</strong> per table</li><li><code>Unique</code>: uniqueness constraint, namely <strong>candidate / alternative key</strong>, multiple per table</li><li><code>Not null</code>: not null constraint, allow <strong>no null value</strong> in this column</li><li><code>dataType</code>: <code>char(n) varchar(n) int numeric(p, q) real date time ...</code></li></ul><blockquote><p><code>create data</code> can define <strong>schema, integrity constraints and physical storage</strong></p></blockquote></li><li><p>(Append records into table: explained below …)</p></li><li><p>(Close database: <code>close databaseName</code>)</p></li></ol></li><li><p><u>Amend database:</u></p><ul><li><p>Amend table:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tableName</span><br><span class="line"><span class="keyword">add</span> columnName dataType[, ...]<span class="operator">|</span></span><br><span class="line"><span class="keyword">drop</span> integrityConstraintName[, ...]<span class="operator">|</span></span><br><span class="line">modify columnName dataType[, ...]</span><br></pre></td></tr></table></figure><ul><li>Add new columns</li><li>Drop integrity constraints</li><li>Modify definition of columns</li></ul></li><li><p>Drop table:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tableName</span><br></pre></td></tr></table></figure><ul><li><p><code>drop</code> revoke the whole table, including <strong>schema, records and views</strong> from this table</p><blockquote><p>But <code>delete from</code> only deletes the records</p></blockquote></li></ul></li><li><p>Drop database:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database databaseName</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h4 id="SQL-Manipulating-Table："><em>SQL Manipulating Table：</em></h4><ul><li><p><u>Single table query:</u></p><ul><li><p>Simple query:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName</span><br><span class="line">[<span class="keyword">Where</span> queryCondition];</span><br></pre></td></tr></table></figure><ul><li><p>Math description:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>c</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>m</mi><mi>n</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy="false">[</mo><mo separator="true">,</mo><mi>c</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>m</mi><mi>n</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>q</mi><mi>u</mi><mi>e</mi><mi>r</mi><mi>y</mi><mi>C</mi><mi>o</mi><mi>n</mi><mi>d</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{columnName[,columnName]}(\sigma_{queryCondition}(tableName))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">mn</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight">e</span><span class="mopen mtight">[</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">mn</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight">e</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ery</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ab</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span><span class="mclose">))</span></span></span></span></span></p></li><li><p>Clause: <code>Select From Where</code> and components after are called as their <strong>clauses</strong></p><blockquote><p>The whole query statement can be a <strong>subquery</strong> in a larger statement’s clause</p></blockquote></li><li><p><code>queryCondition</code>: Just like conditions below <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>, use <code>and or not</code>, notice <strong>operator precedence</strong> and comprehension of natural <strong>semantic</strong> meaning</p></li></ul></li><li><p>Duplicate removal query:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> <span class="keyword">DISTINCT</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName</span><br><span class="line">[<span class="keyword">Where</span> queryCondition];</span><br></pre></td></tr></table></figure><ul><li><p><code>DISTINCT</code>: DBMS allow <strong>duplicate</strong> records in <strong>query result</strong>, which can be removed by <code>DISTINCT</code></p><blockquote><p><strong>Duplicate</strong> records in <strong>table</strong> can be removed by <code>Primary key</code> and <code>Unique</code></p></blockquote></li></ul></li><li><p>Sorting query:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName</span><br><span class="line">[<span class="keyword">Where</span> queryCondition]</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> columnName [<span class="keyword">asc</span><span class="operator">|</span><span class="keyword">desc</span>];</span><br></pre></td></tr></table></figure><ul><li><code>order by</code>: Query result are sorted by <code>columnName</code> according to specified order, <strong>ascending</strong> if omitted</li></ul></li><li><p>Fuzzy query:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName</span><br><span class="line"><span class="keyword">Where</span> columnName [<span class="keyword">not</span> ]<span class="keyword">like</span> &quot;regex&quot;;</span><br></pre></td></tr></table></figure><ul><li><p><code>%</code>: Match zero to multiple characters</p></li><li><p><code>_</code>: Match one character</p><blockquote><p>Sometimes we use two <code>_</code> to represent one Chinese character</p></blockquote></li><li><p><code>\</code>: escape character</p></li></ul></li></ul></li><li><p><u>Multi-table joint query:</u></p><ul><li><p>Simple join:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName1, tableName2[, ...]</span><br><span class="line">[<span class="keyword">Where</span> queryCondition];</span><br></pre></td></tr></table></figure><ul><li><p>Math description:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><mi>c</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>m</mi><mi>n</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy="false">[</mo><mo separator="true">,</mo><mi>c</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>m</mi><mi>n</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo stretchy="false">]</mo></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>q</mi><mi>u</mi><mi>e</mi><mi>r</mi><mi>y</mi><mi>C</mi><mi>o</mi><mi>n</mi><mi>d</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mn>1</mn><mo>×</mo><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{columnName[,columnName]}(\sigma_{queryCondition}(tableName1\times tableName2))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">mn</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight">e</span><span class="mopen mtight">[</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">mn</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight">e</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ery</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ab</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">ab</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span><span class="mord">2</span><span class="mclose">))</span></span></span></span></span></p></li><li><p><code>columnName</code>: <code>tableName.attributeName</code> can be used to specify an <strong>attribute</strong> in <code>select</code></p></li><li><p><code>queryCondition</code>: <strong>Join condition</strong> should be contained</p><blockquote><p>But in this way, <strong>join condition screening</strong> will be done after <strong>Cartesian product</strong> in <code>from</code>, which has lower efficiency than <code>join</code> keyword</p></blockquote></li></ul></li><li><p>Table alias:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName1 [<span class="keyword">as</span>] alias1, tableName2 [<span class="keyword">as</span>] alias2[, ...]</span><br><span class="line">[<span class="keyword">Where</span> queryCondition];</span><br></pre></td></tr></table></figure><ul><li>Alias can be used to <strong>specify attributes</strong>, simplify long table name</li></ul></li></ul></li><li><p><u>Table update:</u></p><ul><li><p>Append records into table:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableName[(columnName[, columnName ...])] <span class="keyword">values</span>(columnValue[, columnValue ...]);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tableName[(columnName[, columnName ...])]</span><br><span class="line">subquery;</span><br></pre></td></tr></table></figure><ul><li><code>columnValue</code>s should stay the same order as <code>columnName</code>s<ul><li>If <code>columnName</code>s are omitted, <code>columnValue</code>s should stay the same order as all the columns in table</li></ul></li><li><code>subquery</code> is the query result of a query statement</li><li><strong>Integrity constraint</strong>: DBMS automatically check integrity constraints and prevent inserting operations against constraints</li></ul></li><li><p>Delete records from table:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Delete</span> <span class="keyword">from</span> tableName</span><br><span class="line">[<span class="keyword">Where</span> deleteCondition];</span><br></pre></td></tr></table></figure><ul><li><code>deleteCondition</code>: If omitted, all the records will be deleted</li><li><strong>Integrity constraint</strong>: DBMS automatically check integrity constraints and prevent deleting operations against constraints</li></ul></li><li><p>Update <strong>attribute value</strong> of records in table:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Update</span> tableName</span><br><span class="line"><span class="keyword">Set</span> columnName <span class="operator">=</span> expression <span class="operator">|</span> (subquery)</span><br><span class="line">[, columnName <span class="operator">=</span> expression <span class="operator">|</span> (subquery) ...]</span><br><span class="line">[<span class="keyword">Where</span> updateCondition]</span><br></pre></td></tr></table></figure><ul><li><code>updateCondition</code>: If omitted, all the records will be updated</li><li><strong>Integrity constraint</strong>: DBMS automatically check integrity constraints and prevent updating operations against constraints</li></ul></li></ul></li></ul><h3 id="3-2-Extended-SQL-View">3.2 Extended SQL &amp; View</h3><h4 id="Subquery-in-Where："><em>Subquery in Where：</em></h4><ul><li><p><u>Overview:</u></p><ul><li><p>Definition: <strong><code>select</code> statement</strong> in <strong><code>where</code> clause</strong>, part of <strong>query condition</strong></p></li><li><p>Function: Return query result set , implement various <strong>set operations</strong></p><ul><li>Set member qualification</li><li>Set comparison</li><li>Set cardinality test</li></ul></li><li><p>Subquery <strong>correlation</strong>: <code>select</code> statement with subquery can be divided into the <strong>inner and outer layers</strong></p><ul><li><p>Non-related subquery: The inner query is independent</p><blockquote><p>In this case, the inner query executes only once, which is more efficient</p></blockquote></li><li><p>Related subquery: The inner query is dependent on <strong>values of the outer query</strong></p><blockquote><p>In this case, the inner query executes multiple times along with <strong>outer query loop</strong> for the <strong>dependent values</strong>.</p><p>It’s better to try <strong>transforming</strong> related subquery into non-related subquery by adjust <strong>query condition</strong> to outer</p></blockquote></li></ul></li></ul></li><li><p><code>[not] in</code></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Where</span> expression [<span class="keyword">not</span> ]<span class="keyword">in</span> (subquery)</span><br></pre></td></tr></table></figure><ul><li><p><code>expression</code>: a <strong>column name</strong>, a <strong>constant</strong> or their arithmetic operations</p></li><li><p>Semantics: Judge whether the <code>expression</code>’s value is in the <code>subquery</code>’s result set</p><blockquote><p>Naturally it’s like multiple <code>or</code></p></blockquote></li></ul></li><li><p><code>θ-some/all</code></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Where</span> expression θ <span class="keyword">some</span> (subquery)</span><br><span class="line"><span class="keyword">Where</span> expression θ <span class="keyword">all</span> (subquery)</span><br></pre></td></tr></table></figure><ul><li><p><code>θ</code>: comparison operator like <code>&lt; &gt; &lt;= &gt;= = &lt;&gt;</code></p></li><li><p>Semantics: Judge whether the <code>expression</code>’s value satisfy <code>θ</code> comparison with <strong>someone or everyone</strong> of subquery result set</p><blockquote><p>The <strong>existential</strong> quantifier or the <strong>universal</strong> quantifier.</p><p>Equivalency:</p><ul><li><code>= some</code> is equivalent to <code>in</code></li><li><code>&lt;&gt; all</code> is equivalent to <code>not in</code></li></ul></blockquote></li></ul></li><li><p><code>[not] exists</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Where</span> [<span class="keyword">not</span> ]<span class="keyword">exists</span> (subquery)</span><br></pre></td></tr></table></figure><ul><li><p>Semantics: Judge whether the <code>subquery</code>’s result set is empty</p><blockquote><p>Always used in “all” condition, which can be explained by “It does <strong>not exist</strong> that there is <strong>something not</strong> doing or done”, <strong>double negation</strong></p></blockquote></li><li><p>Subquery train of thoughts：</p><ol><li>Find the projected <strong>attributes</strong> and related <strong>tables</strong> for the outer layer</li><li><strong>Divide query conditions</strong>. If subquery is required, find new projected attributes and related tables layer by layer, and then continue dividing query conditions</li></ol></li></ul></li></ul><hr><h4 id="Grouping-Aggregation："><em>Grouping &amp; Aggregation：</em></h4><ul><li><p><u>Arithmetic operations &amp; Aggregation functions:</u></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName<span class="operator">|</span>expression<span class="operator">|</span>agfunc(columnName)[, columnName<span class="operator">|</span>expression<span class="operator">|</span>agfunc(columnName) ...]</span><br><span class="line"><span class="keyword">From</span> tableName1[, tableName2 ...]</span><br><span class="line">[<span class="keyword">Where</span> queryCondition];</span><br></pre></td></tr></table></figure><ul><li><code>agfunc</code>: Aggregation function like <code>Count() Sum() AVG() Max() Min()</code></li><li><code>expression</code>:  a <strong>column name</strong>, a <strong>constant</strong> or their <strong>arithmetic</strong> operations including <strong>aggregation</strong> functions</li></ul></li><li><p><u>Grouping query:</u></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName<span class="operator">|</span>expression<span class="operator">|</span>agfunc(columnName)[, columnName<span class="operator">|</span>expression<span class="operator">|</span>agfunc(columnName) ...]</span><br><span class="line"><span class="keyword">From</span> tableName1[, tableName2 ...]</span><br><span class="line">[<span class="keyword">Where</span> queryCondition]</span><br><span class="line">[<span class="keyword">Group</span> <span class="keyword">by</span> groupCondition]</span><br></pre></td></tr></table></figure><ul><li><code>groupCondition</code>: one or multiple column name(s) divided by <code>,</code></li><li>Semantics: Classify query result sets by some attribute. Records having <strong>the same attribute value</strong> are grouped into the same group, so SQL can process multiple groups at the same time.</li></ul></li><li><p><u>Grouping filter:</u></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName<span class="operator">|</span>expression<span class="operator">|</span>agfunc(columnName)[, columnName<span class="operator">|</span>expression<span class="operator">|</span>agfunc(columnName) ...]</span><br><span class="line"><span class="keyword">From</span> tableName1[, tableName2 ...]</span><br><span class="line">[<span class="keyword">Where</span> queryCondition]</span><br><span class="line">[<span class="keyword">Group</span> <span class="keyword">by</span> groupCondition [<span class="keyword">Having</span> groupFilterCondition]]</span><br></pre></td></tr></table></figure><ul><li><p><code>Having</code> clause: Also called grouping filter clause, appear with <code>Group by</code>, filter out <strong>groups</strong> satisfying the <code>groupFilterCondition</code></p><blockquote><p>Only grouping related attribute(s), constants and their arithmetic operations are allowed in <code>groupFilterCondition</code></p></blockquote><blockquote><p>Aggregation operations are not allowed in <code>Where</code> clause, for <strong>groups are not formed</strong> when <code>Where</code> clause is executing</p></blockquote></li></ul></li></ul><hr><h4 id="Relation-Algebra-Operations："><em>Relation Algebra Operations：</em></h4><ul><li><p><u><code>union intersect except</code>:</u></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subquery [<span class="keyword">Union</span> [<span class="keyword">All</span>] <span class="operator">|</span> <span class="keyword">Intersect</span> [<span class="keyword">All</span>] <span class="operator">|</span> <span class="keyword">Except</span>[<span class="keyword">All</span>] subquery]</span><br></pre></td></tr></table></figure><ul><li><p><code>subquery</code>: A <code>select</code> statement</p></li><li><p><code>All</code>: If not set, “duplicate” records will be removed.</p><p>Assume that a same record appears <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> times in <code>subquery1</code>, appears <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> times in <code>subquery2</code>, then:</p><ul><li>Appears <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> times in <code>subquery1 Union All subquery2</code></li><li>Appears <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">min(m,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> times in <code>subquery1 Intersect All subquery2</code></li><li>Appears <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max(0, m-n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> times in <code>subquery1 Except All subquery2</code></li></ul></li><li><p>Semantics: Relation algebra operation between subquery results</p><blockquote><p>Sometimes <strong>relation algebra operations</strong> can be substituted by <strong>logic operations and subquery</strong>:</p><ul><li><code>union</code> and <code>or</code>: <code>union</code> have a <strong>better expression</strong> ability than <code>or</code></li><li><code>intersect</code> and <code>and</code>: <code>intersect</code> has the same expression ability with <code>and</code>, but is <strong>more concise</strong></li><li><code>except</code> and <code>not in | not exists</code>:  <code>except</code> has the same expression ability, but is <strong>more concise</strong></li></ul></blockquote></li></ul></li><li><p><u>Null value problem</u>:</p><ul><li><p>Null value detection:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Where</span> columnName <span class="keyword">is</span> [<span class="keyword">not</span>] <span class="keyword">null</span></span><br></pre></td></tr></table></figure><ul><li><p><code>null</code>: Judge whether the attribute value is null</p><blockquote><p>Notice that it can’t be written as <code>= null</code>, for <code>null</code> can’t be operated simply</p></blockquote></li></ul></li><li><p>Null value operations:</p><ul><li><code>null</code> doesn’t satisfy any <strong>query condition</strong> except <code>is [not] null</code></li><li>The value of arithmetic expression is null if <code>null</code> is involved in operation</li><li>The value of logic expression is <code>false</code> if <code>null</code> is involved in operation</li><li>The aggregation function ignores <code>null</code> except <code>count(*)</code></li></ul></li></ul></li><li><p><u><code>Join</code> / Extension of <code>From</code>:</u></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> columnName[, columnName ...]</span><br><span class="line"><span class="keyword">From</span> tableName1 [<span class="keyword">natural</span>]</span><br><span class="line">[<span class="keyword">Inner</span> <span class="operator">|</span> [<span class="keyword">Left</span><span class="operator">|</span><span class="keyword">Right</span><span class="operator">|</span><span class="keyword">Full</span>] [<span class="keyword">Outer</span>]] <span class="keyword">Join</span> tableName2</span><br><span class="line">[<span class="keyword">On</span> joinCondition <span class="operator">|</span> <span class="keyword">Using</span>(columnName1[, ColumnName2 ...])]</span><br><span class="line">[<span class="keyword">Where</span> queryCondition];</span><br></pre></td></tr></table></figure><ul><li><p>Join semantics:</p><ul><li><p><code>Inner Join</code>: namely <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\theta-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span> in relation algebra.</p><blockquote><p>The default <code>Join</code> is <code>Inner Join</code></p></blockquote></li><li><p><code>Left Outer Join</code>: namely <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>f</mi><mi>t</mi><mtext> </mtext><mi>O</mi><mi>u</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Left~Outer-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span> in relation algebra.</p></li><li><p><code>Right Outer Join</code>: namely <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mtext> </mtext><mi>O</mi><mi>u</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Right~Outer-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span> in relation algebra.</p></li><li><p><code>Full Outer Join</code>: namely <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>u</mi><mi>l</mi><mi>l</mi><mtext> </mtext><mi>O</mi><mi>u</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Full~Outer-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mspace nobreak"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span> in relation algebra.</p></li></ul></li><li><p>Join conditions:</p><ul><li><code>Natural</code>: namely <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>l</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Natural-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span> in relation algebra.</li><li><code>On joinConidition</code>:  simple join conditions</li><li><code>Using(columnName1[, columnName2 ...])</code>:  partial <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>l</mi><mo>−</mo><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Natural-Join</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span></span></span></span> with only subset of common attributes specified by <code>columnName</code></li></ul></li></ul></li></ul><hr><h4 id="View："><em>View：</em></h4><ul><li><p>Concept &amp; Structure:</p><ul><li><p>Concept: <strong>View</strong> in SQL is the <strong>data</strong> of <em>external schema(external view)</em>, including <em>external schema</em> and <em>E-C mapping</em>, used to <strong>simplify query</strong></p><blockquote><p><strong>Table</strong> in SQL is <em>conceptual schema</em></p></blockquote></li><li><p>Structure: <strong>View</strong> in SQL actually just stores <em>E-C mapping</em> rather than including the data</p><blockquote><p><strong>Table</strong> in SQL stores the real data</p></blockquote></li></ul></li><li><p>Definition &amp; Dropping</p><ul><li><p>Definition:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">View</span> viewName [columnName[, columnName ...]]</span><br><span class="line"><span class="keyword">as</span> subquery [<span class="keyword">with</span> <span class="keyword">check</span> option]</span><br></pre></td></tr></table></figure><ul><li><code>columnName</code>: Default is attribute name in subquery result, or specify all the names explicitly</li><li><code>with check option</code>: Whether to check whether <strong>records satisfy conditions in subquery</strong> when <code>insert/update/delete</code> about view</li></ul></li><li><p>Drop:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Drop</span> <span class="keyword">View</span> viewName</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Query &amp; Update</p><ul><li><p>Query: Use view just like table in SQL for query</p><ul><li>Query in view in ultimately transformed into query in table, combining statements of creating view and query</li></ul></li><li><p>Update: It’s complex, and should follow some rules. Cases where update is not allowed:</p><ul><li>View statement contains <code>agfunc</code>, <code>Group by</code> or arithmetic operations</li><li>View statement contains <code>Distinct</code></li><li>View statement about a single table doesn’t contain the primary key</li></ul><blockquote><p>Update in view in ultimately transformed into update in table</p></blockquote></li></ul></li></ul><h3 id="3-3-Database-Integrity">3.3 Database Integrity</h3><h4 id="Overview：-2"><em>Overview：</em></h4><ul><li><p><u><strong>Concept</strong> of Integrity &amp; <strong>Reasons</strong> of Integrity Problem:</u></p><ul><li><p>DB Integrity: A <strong>DB feature</strong> ensured by DBMS, that DB should maintain <strong>correctness, validity and consistency</strong> anytime</p><ul><li><p>Broad integrity: semantic integrity, concurrence control, security control, DB failure recovery</p></li><li><p>Narrow integrity: specifically <strong>semantic integrity</strong>, for which DBMS has special <strong>integrity management</strong> mechanism and programs</p><blockquote><p>For example, integrity constraints in relation model:</p><ul><li>Entity integrity</li><li>Referential integrity</li><li>User-Defined integrity</li></ul></blockquote></li></ul></li><li><p>DB Integrity problem <strong>reasons</strong>:</p><ul><li><strong>Wrong DB operations</strong>, like input error, operating error, program processing error</li></ul></li><li><p>Effect of DB <strong>Integrity management</strong>:</p><ul><li><p>Prevent and avoid <strong>unreasonable data</strong> in DB</p></li><li><p><strong>DBMS</strong> should prevent unreasonable semantics <strong>automatically</strong></p><blockquote><p>It is <strong>automation</strong> that DBMS should focus on, rather than user notice the integrity problems every time</p></blockquote></li></ul></li></ul></li><li><p><u>Implementation of Integrity:</u></p><ul><li><p><strong>Integrity constraint conditions/rules</strong>: <code>Integrity Constraint ::= (O, P, A, R)</code></p><ul><li>O: data set, <strong>constrained object</strong></li><li>P: predicate condition, <strong>what constraint</strong></li><li>A: trigger condition, <strong>when to check</strong></li><li>R: response action, <strong>how to do when unsatisfied</strong></li></ul><p>For <code>O</code>, after triggered in condition <code>A</code>, check <code>P</code>, do <code>R</code> if unsatisfied</p><blockquote><p>Defined by SQL-DDL</p></blockquote></li><li><p><strong>Integrity control programs</strong>: DBMS automatically check integrity constraints to ensure semantic integrity when <strong>updating DB</strong></p></li></ul></li><li><p><u>Classification of Integrity:</u></p><ul><li><p>Classified by constraint <strong>object</strong>:</p><ul><li><strong>Domain</strong> integrity constraint: Check <strong>one column</strong> when updating</li><li><strong>Relation</strong> integrity constraint: Check <strong>multiple columns</strong> or  the whole <strong>records</strong> (maybe between tables)</li></ul></li><li><p>Classified by constraint <strong>source</strong>:</p><ul><li><p><strong>Structure</strong> constraint: from model constraint</p><blockquote><p>For example, <strong>functional dependency constraint</strong>, primary key constraint, foreign key constraint,</p></blockquote></li><li><p><strong>Content</strong> constraint: from user’s constraint, user-defined constraint</p><blockquote><p>For example, caring about <strong>value range</strong></p></blockquote></li></ul></li><li><p>Classified by constraint <strong>status</strong>:</p><ul><li><p><strong>Static</strong> constraint: satisfied by DB <strong>anytime</strong></p><blockquote><p>SQL support:</p><ul><li><strong>Column</strong> integrity (domain integrity constraint)</li><li><strong>Table</strong> integrity (relation integrity constraint)</li></ul></blockquote></li><li><p><strong>Dynamic</strong> constraint: satisfied by DB when <strong>transforming from one status to another</strong></p><blockquote><p>SQL support:</p><ul><li><strong>Trigger</strong></li></ul></blockquote></li></ul></li></ul></li></ul><hr><h4 id="Static-Integrity-in-SQL："><em>Static Integrity in SQL：</em></h4><ul><li><p>SQL <strong>static</strong> constraint model:</p></li><li><p><code>Create Table</code>:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure><ul><li><code>columnConstraint</code>:<ul><li><code>Not Null</code>:</li><li><code>Check(searchCondition)</code>:</li><li><code>References</code>:</li></ul></li><li><code>tableConstraint</code><ul><li><code>,</code>:</li><li><code>Foreign Key</code></li></ul></li></ul></li><li><p><code>Alter Table</code>:</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure><ul><li><code>Add</code></li><li><code>Drop</code></li><li><code>Modify</code></li></ul></li><li><p><code>Create Assersion</code></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    ```</span><br><span class="line"></span><br><span class="line">    <span class="operator">-</span>   Semantics:</span><br><span class="line">    <span class="operator">-</span>   Effects:</span><br><span class="line"></span><br><span class="line"><span class="comment">---</span></span><br><span class="line"></span><br><span class="line">#### <span class="operator">*</span><span class="keyword">Dynamic</span> Integrity <span class="keyword">in</span> <span class="keyword">SQL</span>：<span class="operator">*</span></span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> <span class="keyword">SQL</span> <span class="operator">*</span><span class="operator">*</span><span class="keyword">dynamic</span><span class="operator">*</span><span class="operator">*</span> <span class="keyword">constraint</span> model:</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> <span class="operator">*</span><span class="operator">*</span><span class="keyword">Trigger</span><span class="operator">*</span><span class="operator">*</span> overview</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `<span class="keyword">create</span> <span class="keyword">trigger</span>`</span><br><span class="line">  </span><br><span class="line">  ```<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><ul><li>Event</li><li>Alias</li></ul></li></ul><h3 id="3-4-Database-Security">3.4 Database Security</h3><h4 id="Overview：-3"><em>Overview：</em></h4><ul><li><p><u>Concept of Security</u>:</p><ul><li>security grade</li></ul></li><li><p><u>Classification of Security:</u></p><ul><li><strong>Discretionary</strong> security mechanism:</li><li><strong>Enforcing</strong> security mechanism:</li><li>Inference control mechanism</li><li>Data encryption storage mechanism</li></ul></li><li><p><u>DBA responsibilities and obligations about DB security:</u></p></li></ul><hr><h4 id="Database-Discretionary-Security-Mechanism："><em>Database Discretionary Security Mechanism：</em></h4><ul><li><p><u>Concept:</u></p></li><li><p><u>DBMS <strong>Implementation</strong> of discretionary security:</u></p></li><li><p><u>Discretionary security access <strong>rule</strong> and implementation <strong>form</strong>:</u></p><ul><li>Rule: <code>AccessRule ::= (S, O, t, P)</code></li><li>Forms:<ul><li>Storage matrix</li><li>View</li></ul></li></ul></li><li><p><u><strong>Process</strong> and <strong>problems</strong> of discretionary security <strong>authorization</strong>:</u></p><ul><li>Process</li><li>Problems<ul><li>Range</li><li>Revoking</li></ul></li></ul></li></ul><hr><h4 id="SQL-Implementation-of-Discretionary-Security："><em>SQL Implementation of Discretionary Security：</em></h4><ul><li><p><strong>User</strong> and <strong>authority</strong> in SQL</p><ul><li>Three levels of user</li><li>Three levels of authority</li></ul></li><li><p><code>grant</code></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    ```</span><br><span class="line"></span><br><span class="line">    <span class="operator">-</span>   <span class="keyword">View</span></span><br><span class="line"></span><br><span class="line"><span class="operator">-</span> `<span class="keyword">revoke</span>`</span><br><span class="line"></span><br><span class="line">    ```<span class="keyword">sql</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Footnote: enforcing security mechanism</p></blockquote><h2 id="4-Data-Modeling">4 Data Modeling</h2><h3 id="4-1-Three-Worlds-With-Levels-of-Abstraction">4.1 Three Worlds With Levels of Abstraction</h3><h4 id="Real-world"><em>Real world:</em></h4><ul><li><p><u>Abstraction level</u>: No Abstraction</p></li><li><p><u>Key</u> of this level: <strong>Demand</strong></p><ul><li><p><strong>Comprehension and Expression</strong> of demand</p></li><li><p>The kinds of demand:</p><ul><li><p><strong>Data</strong> demand</p><blockquote><p><strong>Data demand</strong> is even more essential</p></blockquote></li><li><p><strong>Processing Rules</strong> demand</p></li></ul></li></ul></li></ul><hr><h4 id="Conceptual-Information-world"><em>Conceptual / Information world:</em></h4><ul><li><p><u>Ways abstracting</u> from <em>real world</em> to <em>conceptual world</em>: <strong>Data Modeling</strong></p></li><li><p><u>Abstraction level</u>: <strong>Conceptual</strong> Level</p></li><li><p><u>Key</u> of this level: <strong>Conceptual Data Model</strong></p><ul><li><p><strong>Concept</strong> of conceptual model: the model <strong>expressing information world</strong></p><blockquote><p>Conceptual model is short for conceptual data model</p></blockquote></li><li><p><strong>Independence</strong>: independent of <strong>computer system</strong></p></li><li><p>Representing the <strong>essential relationship of information</strong></p></li></ul></li></ul><hr><h4 id="Data-Computer-world"><em>Data / Computer world:</em></h4><ul><li><u>Ways abstracting</u> from <em>conceptual world</em> to <em>computer world</em>: <strong>Database Design</strong></li><li><u>Abstraction level</u>: <strong>Implement</strong> Level</li><li><u>Key</u> of this level: <strong>Data Model</strong><ul><li><strong>Concept</strong> of data model: the model <strong>expressing computer world</strong></li><li><strong>Independence</strong>: independent of <strong>physical system</strong></li></ul></li><li>Two levels in computer world itself:<ul><li><strong>Logic level</strong>, which contains <strong>data model</strong></li><li><strong>Physical level</strong>, arrived from logic level</li></ul></li></ul><blockquote><p>Some thoughts about abstraction:</p><ul><li>Comprehend, Distinguish, Name, Express</li><li>Type &amp; Value<ul><li>Methodology and methodology application</li><li>Model and meta model</li></ul></li></ul></blockquote><h3 id="4-2-Entity-Relationship-Model">4.2 Entity-Relationship Model</h3><h4 id="Conceptual-Framework"><em>Conceptual Framework:</em></h4><ul><li><u>Basic view:</u></li><li><u>Entity:</u></li><li><u>Attribute &amp; Keyword:</u></li><li><u>Relationship:</u><ul><li>Degree:</li><li>Cardinality &amp; Role:<ul><li>1:m, specially 1:0 of 1:1</li><li>m:n, specially 0:0 of 1:1</li></ul></li></ul></li></ul><hr><h4 id="Chen-Method"><em>Chen Method:</em></h4><ul><li><u>Basic components:</u><ul><li>Entity:</li><li>Attribute:<ul><li>Multi-value</li><li>Exported</li><li>Composite</li></ul></li><li>Keyword:<ul><li>Composite</li><li>Multi</li></ul></li><li>Relationship:<ul><li>Cardinality</li></ul></li><li>Connectivity<ul><li>Connection between entity and attribute(keyword)</li><li>Connection between relationship and entity</li><li>Connection between relationship and attribute(keyword)</li></ul></li></ul></li><li><u>Cardinality &amp; Role:</u></li><li><u>Data modeling steps with E-R diagram:</u></li></ul><hr><h4 id="Crow’s-Foot-Method"><em>Crow’s Foot Method:</em></h4><ul><li><u>Basic components:</u><ul><li>Entity</li><li>Attribute</li><li>Keyword</li><li>Relationship</li></ul></li><li><u>Cardinality &amp; Role:</u></li></ul><h3 id="4-3-IDEF1x">4.3 IDEF1x</h3><h4 id="Conceptual-Framework-2"><em>Conceptual Framework:</em></h4><ul><li><u>Concept:</u></li><li><u>IDEF1x vs E-R diagram:</u></li><li><u>Components:</u><ul><li>Relationship<ul><li>1:m attribute inheritance partial or full</li><li>m:n intersection entity</li></ul></li></ul></li></ul><hr><h4 id="Entity-and-Attribute"><em>Entity and Attribute:</em></h4><ul><li><u>Entity:</u><ul><li>Identifier-Independent entity</li><li>Identifier-Dependent entity</li><li>Intersection entity</li></ul></li><li><u>Attribute:</u><ul><li>Primary key</li><li>Candidate / Alternate  key</li><li>Foreign key</li><li>Non-prime attribute</li></ul></li></ul><hr><h4 id="Connection-Relationship"><em>Connection Relationship:</em></h4><ul><li><u>Identifying connection relationship:</u></li><li><u>Non-identifying connection relationship:</u></li></ul><hr><h4 id="Non-Specific-Relationship"><em>Non-Specific Relationship:</em></h4><ul><li><u>Concept:</u></li><li><u>Intersection / Associative entity:</u><ul><li>Identifying or Non-identifying</li><li>Only one or multiple times / Whether to add sequence number in PK</li></ul></li></ul><hr><h4 id="Categorization-Relationship"><em>Categorization Relationship:</em></h4><ul><li><u>Concept:</u></li><li><u>Specialization &amp; Generalization:</u></li><li><u>Perfect &amp; Imperfect categorization:</u></li></ul><h2 id="5-Database-Design">5 Database Design</h2><h3 id="5-1-Process-of-Database-Design">5.1 Process of Database Design</h3><blockquote><ol><li>Demand analysis</li><li>…</li></ol></blockquote><h4 id="Demand-Analysis："><em>Demand Analysis：</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Steps:</u></li></ul><hr><h4 id="Conceptual-Database-Design"><em>Conceptual Database Design:</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Steps:</u><ul><li>Local and global thought:</li><li>Conflicts:</li></ul></li></ul><hr><h4 id="Logical-Database-Design"><em>Logical Database Design:</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Transform:</u><ul><li>E-R</li><li>IDEF1x</li></ul></li><li><u>Steps:</u><ul><li>Problems</li></ul></li></ul><hr><h4 id="Physical-Database-Design"><em>Physical Database Design:</em></h4><ul><li><u>Goals:</u></li><li><u>Submissions:</u></li><li><u>Steps:</u></li></ul><h3 id="5-2-Database-Design-Theories">5.2 Database Design Theories</h3><blockquote><ul><li>Data dependency theory<ul><li>Functional dependency</li><li>Multi-value dependency</li><li>Join dependency</li></ul></li><li>Relation normal from theory<ul><li>1NF 2NF 3NF BCNF <code>&lt;=&gt;</code> Functional dependency</li><li>4NF <code>&lt;=&gt;</code> Multi-value dependency</li><li>5NF <code>&lt;=&gt;</code> Join dependency</li></ul></li><li>Schema decomposition theory<ul><li>Lossless join</li><li>Preserve dependency</li></ul></li></ul><p>According to <em><strong>Data Dependence</strong></em>, judge the <em><strong>Relation Normal Form</strong></em>, then apply the <em><strong>Schema Decomposition</strong></em> if necessary</p></blockquote><h4 id="Functional-Dependency-Theory"><em>Functional Dependency Theory:</em></h4><ul><li><u>Concepts:</u><ul><li>Functional dependency</li><li>Full &amp; Partial functional dependency</li><li>Transitive functional dependency</li><li>Candidate /Alternative key<ul><li>Primary key</li><li>Prime &amp; Non-prime attribute</li><li>Super key</li></ul></li></ul></li><li><u>Deduction:</u><ul><li>Logical implication &amp; Closure</li><li>Armstrong axiom &amp; Lemma 1<ul><li>valid &amp; complete</li></ul></li><li>Lemma 2 &amp; Lemma 3</li><li>Attribute (set) closure &amp; Lemma 4<ul><li>Calculate attribute closure</li></ul></li></ul></li><li><u>Equivalence:</u><ul><li>Cover &amp; Lemma 5</li><li>Minimal cover &amp; Lemma 6</li></ul></li></ul><hr><h4 id="Relation-Normal-Form-Theory"><em>Relation Normal Form Theory:</em></h4><ul><li><u>1NF:</u><ul><li>Definition:</li><li>Handle:</li></ul></li><li><u>2NF:</u><ul><li>Definition:</li><li>Redundancy:</li></ul></li><li><u>3NF:</u><ul><li>Definition:</li><li>Redundancy:</li></ul></li><li><u>BCNF:</u><ul><li>Definition:</li><li>Relationship with 3NF</li></ul></li><li><u>Multi-value dependency &amp; 4NF:</u><ul><li>Multi-value dependency overview:</li><li>4NF Definition:</li><li>Relationship with BCNF</li><li>W4NF Definition</li></ul></li><li><u>Join dependency &amp; 5NF:</u></li></ul><h4 id="Schema-Decomposition-Theory"><em>Schema Decomposition Theory:</em></h4><ul><li><u>Basic concepts:</u><ul><li>Schema decomposition</li><li>Data content equivalence &amp; Lemma 1</li><li>Data dependency equivalence</li></ul></li><li><u>Lossless join decomposition:</u><ul><li>Definition:</li><li>Testing algorithm:</li><li>A simple version:</li><li>Properties:</li></ul></li><li><u>Preserving dependency decomposition:</u><ul><li>Definition:</li><li>Testing algorithm:</li></ul></li><li><u>Schema decomposition strategies:</u><ul><li>Decompose schema into <strong>BCNF</strong> with <strong>lossless join</strong>:</li><li>Decompose schema into <strong>3NF</strong> with <strong>preserving dependency</strong>:</li><li>Decompose schema into <strong>3NF</strong> with both <strong>lossless join</strong> and <strong>preserving dependency</strong>:</li><li>Decompose schema into <strong>4NF</strong> with <strong>lossless join</strong>:</li></ul></li></ul><blockquote><p>Split the difference between redundancy and speed</p></blockquote><h2 id="6-Physical-Storage">6 Physical Storage</h2><h3 id="6-1-Framework-of-Data-Storage-and-Query">6.1 Framework of Data Storage and Query</h3><h3 id="6-2-Map-Between-Records-and-Blocks">6.2 Map Between Records and Blocks</h3><h3 id="6-3-File-Organization">6.3 File Organization</h3><h2 id="7-Index">7 Index</h2><h3 id="7-1-Conceptual-Framework">7.1 Conceptual Framework</h3><h4 id="Concept-Features"><em>Concept &amp; Features:</em></h4><h4 id="Index-in-SQL"><em>Index in SQL:</em></h4><h4 id="Performance-of-Index"><em>Performance of Index:</em></h4><h3 id="7-2-Types-of-Index">7.2 Types of Index</h3><h4 id="Dense-Sparse-Index"><em>Dense &amp; Sparse Index:</em></h4><h4 id="Primary-Secondary-Index"><em>Primary &amp; Secondary Index:</em></h4><h4 id="Clustered-Non-Clustered-Index"><em>Clustered &amp; Non-Clustered Index:</em></h4><h4 id="Invert-Index："><em>Invert Index：</em></h4><h4 id="Multi-level-Index"><em>Multi-level Index:</em></h4><h4 id="Hash-Index"><em>Hash Index:</em></h4><h3 id="7-3-B-Tree">7.3 B+ Tree</h3><h4 id="Concept-Rules"><em>Concept &amp; Rules:</em></h4><h4 id="Types-of-Index-on-B-Tree"><em>Types of Index on B+ Tree:</em></h4><h4 id="Insert-Division"><em>Insert &amp; Division:</em></h4><h4 id="Delete-Combination"><em>Delete &amp; Combination:</em></h4><h3 id="7-4-Hash-Index">7.4 Hash Index</h3><h4 id="Simple-Hash-Index"><em>Simple Hash Index:</em></h4><h4 id="Extensible-Hash-Index"><em>Extensible Hash Index:</em></h4><h4 id="Linear-Hash-Index"><em>Linear Hash Index:</em></h4><h2 id="8-Query-Algorithm">8 Query Algorithm</h2><h3 id="8-1-Logic-Physical-Query-Implementation-Overview">8.1 Logic &amp; Physical Query Implementation Overview</h3><h4 id="Contrast-of-Logical-and-Physical"><em>Contrast of Logical and Physical:</em></h4><ul><li>Basic thoughts of DB query implementation</li></ul><h4 id="Three-Types-of-Operation-Two-Strategies-of-Implementation"><em>Three Types of Operation &amp; Two Strategies of Implementation:</em></h4><ul><li>Three <strong>types</strong> of operation in DB</li><li>Two <strong>calculating strategies</strong> of query implementation<ul><li>Pipeline: take <strong>iterator</strong> for example</li><li>Materialization:<ul><li>One-pass scanning<ul><li>Table space scanning</li><li>Based on sort</li><li>Based on hash</li><li>Based on index</li></ul></li><li>Two-pass scanning<ul><li>Based on sort</li><li>Based on hash</li><li>Based on index</li></ul></li></ul></li></ul></li></ul><h3 id="8-2-One-pass-Scanning-Algorithm">8.2 One-pass Scanning Algorithm</h3><h4 id="Read-a-Relation-in-Disk"><em>Read a Relation in Disk:</em></h4><h4 id="One-pass-Scanning-Based-on-Sort-Hash"><em>One-pass Scanning Based on Sort &amp; Hash:</em></h4><h4 id="One-pass-Scanning-Based-on-Index"><em>One-pass Scanning Based on Index:</em></h4><h3 id="8-3-Two-pass-Scanning-Algorithm">8.3 Two-pass Scanning Algorithm</h3><h4 id="Two-pass-Scanning-Algorithms-Based-on-Sort"><em>Two-pass Scanning Algorithms Based on Sort:</em></h4><ul><li>Basic thoughts</li><li>TPMMS</li></ul><h4 id="Two-pass-Scanning-Algorithms-Based-on-Hash"><em>Two-pass Scanning Algorithms Based on Hash:</em></h4><ul><li>Basic thoughts</li></ul><h3 id="8-4-Query-Optimization">8.4 Query Optimization</h3><h4 id="Overview"><em>Overview:</em></h4><h4 id="Query-Optimization-in-Logical-Level"><em>Query Optimization in Logical Level:</em></h4><h4 id="Query-Optimization-in-Physical-Level"><em>Query Optimization in Physical Level:</em></h4><h2 id="9-Transaction-Processing">9 Transaction Processing</h2>]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Database System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统编程</title>
      <link href="/posts/72802800.html"/>
      <url>/posts/72802800.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-常用工具">1 常用工具</h2><h3 id="1-1-gcc">1.1 gcc</h3><p><em>工作流程概述：</em></p><ol><li><p>预处理：<strong>头文件</strong>展开、<strong>宏</strong>替换、去除<strong>注释</strong></p><p><code>gcc -E xxx.c -o xxx.i</code></p><blockquote><p><code>xxx.i</code>仍然是一个<strong>c文件</strong></p><p>预处理工作本质是由<strong>cpp工具</strong>完成的，gcc命令会调用这个工具</p></blockquote></li><li><p>编译：将c文件编译成<strong>汇编文件</strong></p><p><code>gcc -S xxx.i -o xxx.s</code></p><blockquote><p>这一步时间往往是<strong>最长</strong>的</p><p>编译工作由<strong>gcc工具</strong>完成</p></blockquote></li><li><p>汇编：将汇编文件转换成<strong>二进制文件</strong></p><p><code>gcc -c xxx.s -o xxx.o</code></p><blockquote><p>汇编工作本质是由<strong>as工具</strong>完成的，gcc命令会调用这个工具</p></blockquote></li><li><p>链接：将<strong>函数库</strong>中相应的代码组合到目标文件中</p><p><code>gcc xxx.o -o xxx</code></p><blockquote><p>将所有相关的<code>.o</code>文件打包成一个<strong>可执行文件</strong>，并将<code>main</code>函数作为<strong>启动函数</strong></p><p>链接工作本质是由<strong>ld工具</strong>完成的，gcc命令会调用这个工具</p></blockquote><blockquote><p>可以直接调用链接的命令，这样会自动调用之前的三步：<code>gcc xxx.c -o xxx</code></p></blockquote></li></ol><hr><p><em>常用参数：</em></p><ul><li><p><code>-I 目录</code>：指定<strong>头文件</strong>所在目录</p><blockquote><p>头文件一般放在<code>include</code>目录下；如果是在<strong>同级目录</strong>就不用参数指定了</p></blockquote></li><li><p><code>-L 目录</code>：指定<strong>库文件</strong>所在目录</p><blockquote><p>库文件一般放在<code>lib</code>目录下</p></blockquote></li><li><p><code>-l 库名</code>：指定<strong>库文件</strong>的名字</p></li><li><p><code>-D 宏名</code>：指定一个宏</p><blockquote><p>经典使用场景是控制log的输出</p></blockquote></li><li><p><code>-O1</code>、<code>-O2</code>、<code>-O3</code>：生成汇编之前<strong>优化</strong>代码，<code>-O</code>后面数字越大，优化等级越大</p></li><li><p><code>-Wall</code>：输出<strong>警告</strong>信息</p></li><li><p><code>-g</code>：添加调试信息，之后可以用gdb工具调试</p></li></ul><hr><p><em>静态库：</em></p><ul><li><p>命名规则：<code>lib + 库的名字 + .a</code></p><blockquote><p><code>.a</code>文件一般放在<code>lib</code>目录下</p></blockquote></li><li><p>制作步骤</p><ol><li><p>生成<code>.o</code>文件：<code>gcc 所有需要的.c文件 -c -I 头文件所在目录</code></p></li><li><p>将生成的<code>.o</code>文件打包：<code>ar rcs lib库的名字.a 所有需要的.o文件</code></p><blockquote><p>使用<code>ar</code>打包工具</p></blockquote></li></ol></li><li><p>发布和使用静态库</p><ul><li>发布静态库</li><li>提供头文件，在源程序中引入</li><li>在编译时指定静态库，生成可执行程序：<ul><li><code>gcc 源程序.c lib库的名字.a -I 头文件所在目录 -o xxx</code></li><li><code>gcc 源程序.c -I 头文件所在目录 -L 静态库所在目录 -l 库的名字 -o xxx</code></li></ul></li><li>运行可执行程序</li></ul></li><li><p>查看组成静态库的<code>.o</code>文件：<code>nm lib库名.a</code></p><ul><li>打包的最小单元是<code>.o</code>文件，并不会直接把整个库打包</li></ul></li><li><p>静态库的优点和缺点</p><ul><li>优点<ul><li>发布程序时，不需要再<strong>提供对应库</strong></li><li>加载静态库的<strong>速度</strong>快</li></ul></li><li>缺点<ul><li>增加了应用程序的<strong>大小</strong></li><li>库发生<strong>更新</strong>后必须<strong>重新编译</strong>程序</li></ul></li></ul></li></ul><hr><p><em>共享库/动态库：</em></p><ul><li><p>命名规则：<code>lib + 库名 + .so</code></p></li><li><p>制作步骤</p><ol><li><p>生成与位置无关的<code>.o</code>文件：<code>gcc -fPIC -c 所有需要的.c文件</code></p><blockquote><p>生成静态库的时候，是与位置有关的<code>.o</code></p><ul><li>与位置有关的<code>.o</code>，直接“静态地”存放在**<code>.text</code>代码段**</li><li>与位置无关的<code>.o</code>，在程序运行时才会动态加载到<strong>虚拟地址空间的共享库</strong>中</li></ul></blockquote></li><li><p>将<code>.o</code>文件打包成共享库：<code>gcc -shared lib库名.so -o 所有需要的.o文件</code></p></li></ol></li><li><p>发布和使用共享库</p><ul><li><p>发布静态库</p></li><li><p>提供头文件，在源程序中引入</p></li><li><p>在编译时指定动态库，生成可执行程序：</p><ul><li><code>gcc 源程序.c lib库名.so -I 头文件所在目录 -o xxx</code></li><li><code>gcc 源程序.c -I 头文件所在目录 -L 共享库所在目录 -l 库的名字 -o xxx</code></li></ul></li><li><p>运行可执行程序</p><blockquote><p>解决自定义动态库无法加载的问题：</p><hr><p><code>ldd 可执行程序</code>可以查看程序<strong>依赖的所有共享库</strong></p><p>一般来说，程序都会依赖一个库，叫做动态链接器：<code>/lib64/ld-linux-x86-64.so.2</code></p><ul><li><p>动态链接器可以<strong>加载程序依赖的其他动态库</strong></p></li><li><p>动态链接器的查找规则：根据某些<strong>环境变量</strong>查找</p><blockquote><p>系统提供的动态库一般都放在<code>/lib</code>下（但不要把自己制作的库放进去</p><p>**环境变量<code>LD_LIBRARY_PATH</code>**也在动态链接器的查找范围内，且是优先被查找的</p></blockquote></li></ul><p>所以如果要使用自定义动态库，可以执行<code>export LD_LIBRARY_PATH = xxx</code>，让动态链接器能找到自定义动态库，这样可以临时生效，用于<strong>测试</strong></p><blockquote><p>如果不只要临时生效，可以把<code>export</code>语句写入<code>~/.bachrc</code>文件中再重启终端，但这种做法比较少见</p></blockquote><p>还可以使用<strong>配置文件</strong>的方式：</p><ol><li><p>以管理员权限修改<code>/etc/ld.so.conf</code>，将自定义动态库路径写入新行</p></li><li><p>使配置文件生效：<code>ldconfig -v</code></p><blockquote><p><code>-v</code>代表打印提示信息，也可以不加</p></blockquote></li></ol></blockquote></li></ul></li><li><p>动态库的优点和缺点</p><ul><li><p>优点</p><ul><li><p>不会把动态库打包到应用程序中，<strong>体积小</strong></p></li><li><p>库发生<strong>更新</strong>后可以不需要<strong>重新编译</strong>程序</p><blockquote><p>前提是<strong>接口</strong>没有发生太大变化</p></blockquote></li></ul></li><li><p>缺点</p><ul><li>发布程序时，还需要再<strong>提供对应库</strong></li><li>加载动态库的<strong>速度</strong>相对较慢</li></ul></li></ul></li></ul><h3 id="1-2-gdb">1.2 gdb</h3><p><em>概述：</em></p><ul><li>GDB（GNU Debugger）是GCC的调试工具</li></ul><hr><p><em>常用指令：</em></p><blockquote><p>编译时需要加<code>-g</code>选项，通过<code>gdb 可执行程序</code>可以开启gdb调试</p></blockquote><ul><li><p>工作目录</p><ul><li><code>pwd</code>：查看当前工作目录</li><li><code>cd</code>：切换工作目录</li></ul></li><li><p>运行时参数</p><ul><li><code>set args 参数1 参数2 ...</code>：指定运行时参数</li><li><code>show args</code>：查看设置好的运行时参数</li></ul></li><li><p>查看源代码</p><blockquote><p>l：list，列出10行</p></blockquote><ul><li><code>l 要查看的文件名:行号</code>：显示指定文件某行前后的代码</li><li><code>l 要查看的文件名:函数名</code>：显示指定文件某函数定义前后的代码</li><li><code>l</code>：从上一次列出的代码后继续列出代码，或是从程序入口开始列出代码</li><li><code>set listsize count</code>：设置一次显示的代码行数</li><li><code>show listsize</code>：查看一次显示的代码行数</li></ul></li><li><p>设置断点</p><blockquote><p>b：break</p></blockquote><ul><li><p><code>b 行号</code>：（在当前所在文件中）设置一个断点</p></li><li><p><code>b 行号 if 逻辑表达式</code>：当逻辑表达式成立时断点才有效</p><blockquote><p>注意，如果是设置循环的条件停止，要把断点设置在<code>&#123;&#125;</code>代码块里</p></blockquote></li><li><p><code>d 断点编号范围</code>：删除断点。如果不加断点编号范围，则删除所有断点</p><blockquote><p>d：delete</p><p><code>范围</code>可以直接写一个数字，也可以写类似<code>3-7</code>这种</p></blockquote></li><li><p><code>disable 断点编号范围</code>：让指定断点暂时失效</p></li><li><p><code>enable 断点编号范围</code>：让指定断点重新生效</p></li></ul></li><li><p>运行程序</p><ul><li><p><code>start</code>：开始运行程序，等待调试（只执行一步）</p></li><li><p><code>r</code>：运行程序，直到断点或运行结束</p><blockquote><p>r：run</p></blockquote></li><li><p><code>n</code>：单步执行</p><blockquote><p>n：next</p></blockquote></li><li><p><code>c</code>：继续运行程序，直到断点或运行结束</p><blockquote><p>c：continue</p></blockquote></li><li><p><code>s</code>：进入当前行中的函数内部</p><blockquote><p>s：step</p></blockquote></li><li><p><code>u</code>：跳出循环</p><blockquote><p>u：until</p><p>相当于程序中的<code>break</code>关键字</p></blockquote></li><li><p><code>finish</code>：跳出之前进入的函数</p><blockquote><p>要求之后不能有断点出现，否则无法跳出</p></blockquote></li></ul></li><li><p>打印信息</p><ul><li><code>p 表达式</code>：打印表达式的值</li><li><code>ptype 表达式</code>：打印表达式的类型</li><li><code>display 表达式</code>：追踪打印表达式的值，每运行一次都会打印</li><li><code>undisplay 被追踪的表达式编号范围</code>：取消追踪的表达式</li></ul></li><li><p>设置值</p><ul><li><code>set var 变量名=变量值 </code>：设置变量的值</li></ul></li><li><p>查看信息</p><blockquote><p>i：info</p></blockquote><ul><li><code>i b</code>：查看断点信息</li><li><code>i display</code>：查看被追踪的表达式信息</li></ul></li></ul><h3 id="1-3-makefile">1.3 makefile</h3><p><em>一个规则：</em></p><ul><li><p>makefile文件命名规则：</p><ul><li><code>makefile</code></li><li><code>Makefile</code></li></ul></li><li><p>运行makefile：</p><ul><li><code>make</code>：生成终极目标</li><li><code>make xxx</code>：生成<code>xxx</code>目标，运行对应规则的命令</li></ul></li><li><p>规则三要素：目标、依赖、命令</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如下方式定义一条“规则”</span></span><br><span class="line"><span class="section">目标: 依赖的所有文件</span></span><br><span class="line">gcc命令</span><br></pre></td></tr></table></figure><ul><li>注意命令前必须有一个<code>tab</code>缩进</li><li>默认从当前目录中寻找依赖文件，否则就要指定路径</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">app: main.o add.o sub.o mul.o</span></span><br><span class="line">    gcc main.o add.o sub.o mul.o -o app</span><br><span class="line"></span><br><span class="line"><span class="section">main.o: main.c</span></span><br><span class="line">    gcc -c main.c</span><br><span class="line"></span><br><span class="line"><span class="section">add.o: add.c</span></span><br><span class="line">    gcc -c add.c</span><br><span class="line"></span><br><span class="line"><span class="section">mul.o: mul.c</span></span><br><span class="line">    gcc -c mul.c</span><br><span class="line"></span><br><span class="line"><span class="section">sub.o: sub.c</span></span><br><span class="line">    gcc -c sub.c</span><br></pre></td></tr></table></figure><ul><li><p>如果有多条规则，默认<strong>第1条规则</strong>的目标为<strong>终极目标</strong>，后面的规则都是为此服务的</p><blockquote><p>终极目标可以向下查找依赖项的生成，然后从下向上执行</p></blockquote></li><li><p>如上所示分开生成<code>.o</code>文件，则执行<code>make</code>时<strong>只会编译修改过的文件</strong></p><blockquote><p>终极目标是<code>app</code>，其他的可以不变；</p><p>当<strong>依赖的更新时间</strong>晚于<strong>目标的更新时间</strong>时，会再次执行<strong>命令</strong></p></blockquote></li></ul></li><li><p><code>clean</code>规则与伪目标</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">    rm <span class="variable">$(obj)</span> <span class="variable">$(target)</span> -f</span><br></pre></td></tr></table></figure><ul><li><code>make clean</code>即可运行命令</li><li>解决目录下有名为<code>clean</code>的文件的问题：声明伪目标<code>.PHONY</code></li></ul></li></ul><hr><p><em>三个变量：</em></p><ul><li><p><code>变量名=变量值</code></p><p><code>$(变量名)</code></p><ul><li>可以在makefile中以<code>变量名=变量值</code>和格式定义变量</li><li>然后用<code>$(变量名)</code>引用</li></ul><p><code>%</code></p><ul><li><p>向下寻找依赖时，会自动匹配下方规则中的<code>%</code>，替换成要寻找的依赖，生成一条规则</p><blockquote><p>替换时会自动将<code>.后缀</code>去掉</p></blockquote></li></ul></li><li><p><code>$&lt;</code>：规则中的<strong>第一个依赖</strong></p><p><code>$^</code>：规则中的<strong>所有依赖</strong></p></li><li><p><code>$@</code>：规则中的<strong>目标</strong></p></li></ul><blockquote><p><code>$&lt; $^ $@</code>是makefile中的自动变量，只能在规则的<strong>命令</strong>中使用</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">obj = main.o add.o sub.o mul.o</span><br><span class="line">target = app </span><br><span class="line"></span><br><span class="line"><span class="section">$&#123;target&#125;: $&#123;obj&#125; </span></span><br><span class="line">    gcc $&#123;obj&#125; -o $&#123;target&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">%.o: %.c </span></span><br><span class="line">    gcc -c <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br></pre></td></tr></table></figure><ul><li><p>makefile维护的变量</p><blockquote><p>通常为<strong>大写</strong>。用户自定义变量通常为小写</p></blockquote><ul><li><code>CC</code>：默认值<code>cc</code>，也就是<code>gcc</code></li><li><code>CPPFLAGS</code>：预处理时需要的选项，如<code>-I</code></li><li><code>CFLAGS</code>：编译的时候使用的参数，如<code>-Wall -D -g -c</code></li><li><code>LDFLAGS</code>：链接时使用的选项，如<code>-L -l</code></li></ul></li></ul><hr><p><em>两个函数：</em></p><ul><li><p><code>wildcard</code>：</p><p><code>src = $(wildcard 某目录下用*匹配的文件)</code></p></li><li><p><code>patsubst</code>：</p><p><code>obj = $(patsubst 某目录下用%匹配的文件, 保留%后要替换成的样子, $(src))</code></p></li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">target = app </span><br><span class="line">src = <span class="variable">$(<span class="built_in">wildcard</span> ./*.c)</span></span><br><span class="line">obj = <span class="variable">$(<span class="built_in">patsubst</span> ./%.c, ./%.o, <span class="variable">$(src)</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="section">$&#123;target&#125;: $&#123;obj&#125; </span></span><br><span class="line">    gcc $&#123;obj&#125; -o $&#123;target&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">%.o: %.c </span></span><br><span class="line">    gcc -c <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">    rm <span class="variable">$(obj)</span> <span class="variable">$(target)</span> -f</span><br></pre></td></tr></table></figure><hr><h2 id="2-内存与文件系统">2 内存与文件系统</h2><h3 id="2-1-内存管理">2.1 内存管理</h3><p><em>虚拟地址空间：</em></p><ul><li><p><u>大小</u>：对于32bit操作系统，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>=</mo><mn>4</mn><mi>G</mi></mrow><annotation encoding="application/x-tex">2^{32}=4G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">4</span><span class="mord mathnormal">G</span></span></span></span>的可用虚拟地址空间，从0开始</p><blockquote><p>为进程按需分配物理内存，不会直接分配4G</p></blockquote></li><li><p><u>内核区</u>：3G~4G</p><blockquote><p>不允许用户直接操作</p></blockquote><ul><li><p>PCB：</p><ul><li><p>文件描述符表：一个大小为1024的数组，数组<strong>索引</strong>就是<strong>文件描述符</strong>，数组元素代表文件</p><p>0：<code>STDIN_FILENO</code></p><p>1：<code>STDOUT_FILENO</code></p><p>2：<code>STDERR_FILENO</code></p><blockquote><p>标准输入、标准输出、标准错误默认是打开状态</p></blockquote><p>3~1023：每打开一个新文件，会占用<strong>空闲文件描述符</strong>中最小的那个</p></li><li><p>…（PCB中的其他内容）</p></li></ul></li><li><p>…（内核区的其他内容）</p></li></ul></li><li><p><u>用户区</u>：0~3G</p><blockquote><p>允许用户访问并操作；</p><p>接下来的<strong>从低地址向高地址</strong>介绍</p></blockquote><ul><li><p>受保护的地址（header）：0~4K</p><blockquote><p><code>#define NULL (void*)0</code>指向的就是这里</p></blockquote></li><li><p>ELF段：ELF是Linux下<strong>可执行文件格式</strong></p><blockquote><p><code>file a.out</code>命令可以查看<code>a.out</code>的文件格式</p></blockquote><ul><li><p>.text段：只读的<strong>代码段</strong>，二进制机器指令</p><blockquote><p>代码段也可以包括一些<strong>静态库</strong></p></blockquote></li><li><p>.rodata段：只读的数据段、符号段等</p></li><li><p>.data段：已初始化的<strong>全局变量</strong>，可读写</p></li><li><p>.bss段：未初始化的<strong>全局变量</strong>，可读写</p></li></ul></li><li><p>堆空间：从低地址向高地址增长，<code>malloc</code>相关函数分配的地址空间</p></li><li><p>共享库：加载程序执行时引用的<strong>动态链接库</strong>（C标准库等）</p><blockquote><p>由于加载到共享库的位置不定，所以动态库中应当时位置无关代码（相对地址）</p></blockquote></li><li><p>栈空间：从高地址向低地址增长，主要存放<strong>函数栈帧</strong>，包括调用信息、局部变量等</p></li><li><p>命令行参数：<code>argv[]</code></p></li><li><p>环境变量（env）</p></li></ul></li><li><p><u>虚拟地址空间的优点</u></p><ul><li>有利于编译器和操作系统利用<strong>离散的物理地址空间</strong>，为进程提供虚拟的<strong>连续地址空间</strong></li><li>有利于进程之间<strong>地址空间的隔离</strong></li><li>有利于在逻辑上<strong>扩展物理内存</strong></li></ul></li></ul><hr><p><em>MMU的基本工作原理</em>：</p><ul><li><p>Memory Management Unit，内存管理单元，位于CPU内部</p></li><li><p>主要功能</p><ul><li><p>虚拟内存和物理内存的映射，按**页（4k大小）**分配物理地址空间</p><ul><li><p>不同进程的<strong>内核区</strong>映射到<strong>相同的内核物理内存</strong></p><blockquote><p>当然，不同进程的PCB不同，只是位于同一块内核物理内存中</p></blockquote></li><li><p>不同进程的用户区映射到不同的物理内存</p></li></ul></li><li><p>管理<strong>内存访问权限</strong>（用户级、内核级）</p></li></ul></li></ul><h3 id="2-3-IO">2.3 IO</h3><h2 id="3-进程与线程">3 进程与线程</h2><h3 id="3-1-进程相关数据结构">3.1 进程相关数据结构</h3><p><em>进程控制块PCB：</em></p><ul><li><p>Linux内核的进程控制块是<code>task_struct</code>结构体</p><blockquote><p><code>/usr/src/linux-headers-3.16.0-30/include/linux/sched.h</code>文件中可以查看<code>struct task_struct</code>结构体定义</p></blockquote></li><li><p><code>task_struct</code>结构体重要成员</p><ul><li><p>进程<strong>描述</strong>信息：</p><ul><li><p>进程标识符（<strong>PID</strong>）：系统中每个进程都有<strong>唯一</strong>的id，用<code>pid_t</code>表示其<strong>类型</strong>，本质是非负整数</p><blockquote><p>Unix系统的第一个进程<strong>init进程的pid为1</strong></p></blockquote></li><li><p>用户id和组id</p></li></ul></li><li><p>进程<strong>控制和管理</strong>信息：</p><ul><li>进程当前<strong>状态</strong></li><li><strong>信号</strong>相关的信息</li><li><strong>会话</strong>（Session）和<strong>进程组</strong></li></ul></li><li><p><strong>资源分配</strong>清单：</p><ul><li><p>描述<strong>虚拟地址空间</strong>的信息</p></li><li><p>进程可以使用的<strong>资源上限</strong>（Resource Limit）</p><blockquote><p><code>ulimit -a</code>命令可以查看一些资源上限</p></blockquote></li></ul></li><li><p><strong>处理机</strong>相关信息：</p><ul><li>进程<strong>切换</strong>时需要保存和恢复的<strong>寄存器</strong></li><li>描述<strong>控制终端</strong>的信息</li><li>当前<strong>工作目录</strong>位置</li><li><code>umask</code>掩码</li><li><strong>文件描述符</strong>表</li></ul></li></ul></li></ul><hr><p><em>环境变量：</em></p><ul><li><p>操作系统中用来<strong>指定运行环境</strong>的一些参数</p></li><li><p>特征：</p><ul><li>本质是<strong>字符串</strong></li><li>统一的格式：<code>名=值1:值2:值3</code></li><li>描述<strong>进程环境信息</strong></li></ul></li><li><p><strong>shell进程</strong>的常见环境变量</p><ul><li><p>PATH：记录<strong>可执行</strong>程序的<strong>搜索路径</strong></p></li><li><p>SHELL：记录当前所使用的<strong>命令解析器</strong></p></li><li><p>HOME：当前用户家目录</p></li><li><p>LANG：当前使用的语言和本地信息</p><blockquote><p>决定了字符编码、时间、货币等信息的显示格式</p></blockquote></li><li><p>TERM：当前终端类型</p></li></ul></li><li><p>在c程序中使用环境变量：</p><ul><li><p>存储形式：<code>char *[]</code>数组，数组名为<code>environ</code>，内部存储字符串，<code>NULL</code>作为哨兵结尾</p></li><li><p>加载位置：位于用户区，高于stack的起始位置</p></li><li><p>引入环境变量表：<code>extern char **environ</code></p></li><li><p>相关函数</p><ul><li><code>char *getenv(const char *name);</code></li><li><code>int setenv(const char *name, const char *value, int overwrite)</code></li><li><code>int unsetenv(const char *name);</code></li></ul><blockquote><p><code>man getenv</code>、<code>man setenv</code>、<code>man unsetenv</code></p></blockquote></li></ul></li></ul><h3 id="3-2-进程控制">3.2 进程控制</h3><p><em>创建进程：</em></p><ul><li><p>方式一：<strong>运行可执行程序</strong>时，就会创建进程</p><blockquote><p>一般可执行程序对应进程的<u>父进程是<code>bash</code>/shell进程</u>，<br>shell进程会将前台交给该进程，自己到后台去，直到该进程结束，再回到前台</p></blockquote></li><li><p>方式二：<code>pid_t fork(void);</code></p><blockquote><p><code>#include &lt;unistd.h&gt;</code>：Unix系统标准头文件</p></blockquote><ul><li><p>创建n个进程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="type">pid_t</span> pid = fork();</span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i &lt; n) &#123;</span><br><span class="line">    <span class="comment">// child process</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// parent process</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>刚fork之后：</p><ul><li>父子相同处：全局变量、.data、.text、栈、堆、环境变量、用户ID、宿主目录、进程工作目录、信号处理方式…</li><li>父子不同处：进程ID、fork返回值、父进程ID、进程运行时间、闹钟(定时器)、未决信号集</li></ul></li><li><p><strong>读时共享写时复制</strong></p><ul><li>共享的是<strong>物理地址空间</strong>，虚拟的地址空间当然可以直接复制多个</li></ul></li><li><p>父子进程的共享资源</p><ul><li><p>文件描述符</p><blockquote><p>打开文件的结构体</p></blockquote></li><li><p>mmap建立的映射区</p></li></ul></li></ul></li></ul><hr><p><em>进程描述信息：</em></p><ul><li>进程id相关<ul><li>获得进程id：<code>pid_t getpid(void);</code></li><li>获得父进程id：<code>pid_t getppid(void);</code></li></ul></li><li>用户id相关<ul><li>获取当前进程实际用户ID：<code>uid_t getuid(void);</code></li><li>获取当前进程有效用户ID：<code>uid_t geteuid(void);</code></li><li>获取当前进程实际用户组ID：<code>gid_t getgid(void);</code></li><li>获取当前进程有效用户组ID：<code>gid_t getegid(void);</code></li></ul></li></ul><hr><p><em><code>exec</code>函数族：</em></p><ul><li><p>fork创建的子进程往往要调用一种exec函数以执行另一个程序。当进程调用一种exec函数时，该进程的用户空间<strong>代码和数据</strong>完全被新程序<strong>替换</strong>，从新程序的<strong>启动例程</strong>开始执行</p><blockquote><p>启动例程：调用<code>main</code>函数的函数</p><p>调用exec并<strong>不创建新进程</strong>，所以调用exec前后该<strong>进程的id并未改变</strong></p><p>一个程序调用了<code>exec</code>之后，在不出错的情况下，不再有返回值，原程序后续代码不会执行，若出错了才有返回值，并执行原程序后续代码</p></blockquote></li><li><p>:star:<code>int execlp(const char *file, const char *arg, ...);</code></p><blockquote><p>l：list，p：path</p></blockquote><ul><li>加载一个进程，要依赖系统当前的PATH环境变量</li><li><code>file</code>：可执行程序名</li><li><code>arg, ...</code>：命令行参数，从<code>argv[0]</code>开始，可变参要以<code>NULL</code>结尾</li></ul><blockquote><p>举例：<code>execlp(&quot;ls&quot;, &quot;ls&quot;, &quot;-l&quot;, &quot;-F&quot;, NULL);</code></p></blockquote></li><li><p>:star:<code>int execl(const char *path, const char *arg, ...);</code></p><ul><li>加载一个进程， 通过<code>路径+程序名</code>来加载，不需要依赖系统当前的PATH环境变量</li></ul><blockquote><p>举例：<code>execl(&quot;/bin/ls&quot;, &quot;ls&quot;, &quot;-l&quot;, &quot;-F&quot;, NULL);</code></p></blockquote></li><li><p><code>int execle(const char *path, const char *arg, ..., char *const envp[]);</code></p><ul><li>需要引入新的环境变量表</li></ul></li><li><p><code>int execv(const char *path, char *const argv[]);</code></p><blockquote><p>v：vector</p></blockquote></li><li><p><code>int execvp(const char *file, char *const argv[]);</code></p></li><li><p><code>int execve(const char *path, char *const argv[], char *const envp[]);</code></p><ul><li>只有<code>execve</code>是真正的系统调用</li></ul></li></ul><hr><p><em>回收子进程：</em></p><ul><li><p>孤儿进程：父进程先于子进程结束，则子进程成为孤儿进程，子进程的父进程成为init进程</p><blockquote><p>“init进程”可能是整个系统的init进程，也可能是用户的init进程</p></blockquote></li><li><p>僵尸进程：进程终止，父进程尚未回收，子进程**残留资源（PCB）**存放于内核中，变成僵尸（Zombie）进程。</p><blockquote><p>所谓回收就是在<strong>回收PCB</strong></p></blockquote></li><li><p><code>pid_t wait(int *status)</code></p><ul><li><p>三个功能</p><ul><li><strong>阻塞</strong>并等待一个子进程退出</li><li><strong>回收</strong>子进程残留资源</li><li>获取子进程结束<strong>状态</strong>(退出原因)</li></ul></li><li><p>返回-1代表出错（无子进程）</p></li><li><p>用<code>status</code>结合<strong>宏函数</strong>判断子进程终止原因</p><ul><li><p>:star:<code>WIFEXITED(status)</code>：返回值非0代表子进程<strong>正常结束</strong></p><p>如上宏为真可以使用此宏<code>WEXITSTATUS(status)</code>：获取进程<strong>退出状态</strong>(<code>exit</code>的参数)</p></li><li><p>:star:<code>WIFSIGNALED(status)</code>：返回值非0代表<strong>异常结束</strong></p><blockquote><p>Linux中所有异常结束都是因为收到了<strong>信号</strong></p></blockquote><p>如上宏为真可以使用此宏<code>WTERMSIG(status)</code>：取得使子进程终止的那个<strong>信号的编号</strong></p></li><li><p><code>WIFSTOPPED(status)</code>：返回值非0代表子进程处于<strong>暂停状态</strong></p><p>如上宏为真可以使用此宏<code>WSTOPSIG(status)</code>：获取使子进程暂停的那个<strong>信号的编号</strong></p><blockquote><p><code>WIFCONTINUED(status)</code>为真 → 子进程暂停后已经继续运行</p></blockquote></li></ul></li></ul></li><li><p><code>pid_t waitpid(pid_t pid, int *status, int options);</code></p><ul><li><code>pid</code>：要回收的子进程id<ul><li>:star:大于0则回收指定id子进程</li><li>:star:为-1则回收任意子进程（相当于<code>wait</code>）</li><li>为0则回收和当前调用waitpid的进程同一个<strong>进程组</strong>的所有子进程</li><li>小于-1则回收指定<strong>进程组</strong>内的任意子进程</li></ul></li><li><code>options</code>：若指定为0则<strong>阻塞</strong>；若指定为<code>WNOHANG</code>则<strong>不阻塞</strong>，只是检查子进程是否结束，结束则回收，否则<strong>返回0</strong>并继续运行</li></ul></li></ul><h3 id="3-3-进程间通信">3.3 进程间通信</h3><p><em>管道：</em></p><hr><p><em><code>mmap</code></em>：</p><h3 id="3-4-进程信号">3.4 进程信号</h3><p><em>信号的基本概念：</em></p><ul><li><p>信号是信息的载体，有如下<strong>特征</strong>：</p><ul><li><p>简单</p><blockquote><p>信号的<strong>开销很小</strong>，就算不使用信号也会有这样的开销</p></blockquote></li><li><p>不能携带大量信息</p><blockquote><p>一般来说只能带一个<strong>标志</strong>过去</p></blockquote></li><li><p>满足某个<strong>特设条件</strong>才发送</p></li></ul></li><li><p>信号<strong>机制</strong>：</p><ul><li><p>进程收到信号后，不管执行到程序的什么位置，都要<strong>中断</strong>运行去处理信号，处理完毕再继续执行</p><blockquote><p>采用与<strong>硬件中断</strong>类似的异步模式。但信号是<strong>软件层面</strong>上实现的<strong>中断</strong>，早期常被称为“软中断”，有一定<strong>延时性</strong>（相对于硬件来说）</p></blockquote></li><li><p>:star:<strong>每个进程收到的所有信号，都是由<u>内核负责产生并发送</u>的，<u>内核处理</u></strong>:star:</p></li></ul></li><li><p>信号<strong>产生</strong>的五种方式：</p><ul><li>终端按键产生</li><li>硬件异常产生</li><li>命令产生</li><li>系统调用产生</li><li>软件条件产生</li></ul></li><li><p>信号<strong>状态</strong>：</p><ul><li><p><strong>递达</strong>：递送并且到达进程</p><blockquote><p>内核产生信号后会<strong>立刻发送</strong>给相应进程</p></blockquote></li><li><p><strong>阻塞</strong>（屏蔽、未决）：信号产生后受到阻塞，未能递达进程</p></li></ul></li><li><p>信号的<strong>编号</strong>与<strong>信号集</strong></p><ul><li><p>信号<strong>编号</strong></p><ul><li><p>可以使用<code>kill –l</code>命令查看当前系统可使用的信号有哪些</p></li><li><p>1-31号信号称之为<strong>常规信号</strong>（也叫普通信号或标准信号）</p></li><li><p>34-64称之为实时信号</p><blockquote><p>与嵌入式开发和驱动编程有关</p></blockquote></li></ul><blockquote><p><code>man 7 signal</code>可以查看相关文档</p></blockquote></li><li><p><strong>阻塞信号集(信号屏蔽字)</strong></p><ul><li><p>将某些信号加入集合，对他们设置屏蔽，收到这些信号时，对其的处理将推迟到解除屏蔽后</p><blockquote><p>常规信号会阻塞但<strong>不支持排队</strong>，产生多次<strong>只记录一次</strong></p></blockquote></li></ul></li><li><p><strong>未决信号集</strong></p><ul><li><p>信号产生后未决信号集中<strong>描述该信号的位</strong>立刻翻转为1，表信号处于未决状态，信号被处理后对应位再翻转为0</p></li><li><p>信号产生后由于某些原因(主要是阻塞)不能抵达，这类信号的集合称之为未决信号集。</p><blockquote><p>在屏蔽解除前，信号一直处于未决状态</p></blockquote></li></ul></li></ul></li><li><p>信号的<strong>三种处理方式</strong></p><ul><li>执行默认动作<ul><li>Term：终止进程</li><li>Ign：忽略信号（默认即时对该种信号忽略操作）</li><li>Core：终止进程并生成<strong>Core文件</strong>（记录进程死亡原因， 可用于gdb调试）</li><li>Stop：暂停进程</li><li>Cont：继续运行进程</li></ul></li><li>忽略：丢弃</li><li>捕捉：调用用户处理函数</li></ul><blockquote><p>值得注意的是 <em><strong>9) SIGKILL</strong></em> 和 <em><strong>19) SIGSTOP</strong></em> 信号，不允许忽略和捕捉，只能执行默认动作。甚至不能将其设置为阻塞。</p></blockquote></li><li><p>:star:信号<strong>四要素</strong></p><ul><li>编号</li><li>名称</li><li>默认处理动作</li><li>事件：使得该信号<strong>产生</strong>的事件</li></ul></li></ul><hr><p><em>信号的产生：</em></p><ul><li><p><strong>终端按键</strong>产生信号</p><ul><li><p>Ctrl + c → <em><strong>2) SIGINT</strong></em>：终止/中断</p><blockquote><p>“INT” ----Interrupt</p></blockquote></li><li><p>Ctrl + z → <em><strong>20) SIGTSTP</strong></em>：暂停/停止</p><blockquote><p>“T” ----Terminal 终端，只能停止与终端交互的进程</p></blockquote></li><li><p>Ctrl + \ → <em><strong>3) SIGQUIT</strong></em>：退出进程（核心已转储，也是终止进程）</p></li></ul></li><li><p><strong>硬件异常</strong>产生</p><ul><li><p>浮点数例外：<em><strong>8) SIGFPE</strong></em></p><blockquote><p>例如：除0</p><p>“F” -----float 浮点数</p></blockquote></li><li><p>段错误：<em><strong>11) SIGSEGV</strong></em></p><blockquote><p>例如：非法访问内存</p></blockquote></li><li><p>总线错误：<em><strong>7) SIGBUS</strong></em></p><blockquote><p>例如：内存对齐出错</p></blockquote></li></ul></li><li><p><strong>命令</strong>产生</p><ul><li><p>:star:<code>kill -信号编号 进程ID</code>：给对应ID的进程发送信号</p><blockquote><p>默认发送的是 <em><strong>15) SIGTERM</strong></em></p></blockquote></li></ul></li><li><p><strong>系统调用</strong>产生</p><ul><li><p>:star:<code>int kill(pid_t pid, int sig);</code>：给对应ID的进程发送信号</p><blockquote><p><code>man 2 kill</code>查看相关文档</p></blockquote><ul><li>成功返回0，失败返回-1并设置<code>errno</code></li></ul></li><li><p><code>int raise(int sig);</code>：给当前进程自己发送信号</p><p><code>raise(signo) == kill(getpid(), signo);</code></p></li><li><p><code>void abort(void);</code>：给当前进程自己发送异常终止信号</p><p><em><strong>6) SIGABRT</strong></em> 信号，终止并产生core文件</p></li></ul></li><li><p>软件条件产生</p><ul><li><p>:star:<code>unsigned int alarm(unsigned int seconds);</code>：设置定时器(闹钟)。在指定seconds后，内核会给当前进程发送 <em><strong>14) SIGALRM</strong></em> 信号</p><blockquote><p>进程收到该信号，默认动作<strong>终止</strong></p></blockquote><ul><li><p><strong>每个进程都有且只有<u>唯一</u>个定时器</strong></p></li><li><p>调用<code>alarm</code>后会取消旧闹钟，并<strong>返回旧闹钟余下秒数</strong></p><blockquote><p><code>alarm(0)</code>取消闹钟</p></blockquote></li><li><p>定时<strong>与进程状态无关</strong>(自然定时法)</p></li></ul><blockquote><p>使用time命令查看<strong>程序执行的时间</strong>：</p><p>实际执行时间 = 系统时间 + 用户时间 + <strong>等待</strong>时间</p><blockquote><p>IO往往会造成较长的等待时间，程序运行的瓶颈在于IO，优化程序，首选优化IO</p></blockquote></blockquote></li><li><p><code>int setitimer(int which, const struct itimerval *new_value, struct itimerval *old_value);</code></p><ul><li><p><code>which</code>：指定定时方式</p><blockquote><p>自然定时：ITIMER_REAL → <em><strong>14）SIGLARM</strong></em></p><p>虚拟空间计时(用户空间)：ITIMER_VIRTUAL → <em><strong>26）SIGVTALRM</strong></em></p><blockquote><p>只计算进程占用cpu的时间</p></blockquote><p>运行时计时(用户+内核)：ITIMER_PROF → <em><strong>27）SIGPROF</strong></em></p><blockquote><p>计算占用cpu及执行系统调用的时间</p></blockquote></blockquote></li><li><p><code>man setitimer</code>学习其他参数</p><blockquote><p>可以设置周期定时</p></blockquote></li></ul></li></ul></li></ul><hr><p><em>信号集操作：</em></p><ul><li><p><code>sigset_t set;      // typedef unsigned long sigset_t;</code></p></li><li><p>设置<strong>自定义信号集</strong></p><ul><li><p><code>int sigemptyset(sigset_t *set);</code>：将某个信号集清0</p><blockquote><p>返回值：成功0、失败-1，下面3个函数返回值也一样</p></blockquote></li><li><p><code>int sigfillset(sigset_t *set);</code>：将某个信号集全部置1</p></li><li><p><code>int sigaddset(sigset_t *set, int signum);</code>：将某个信号加入信号集</p></li><li><p><code>int sigdelset(sigset_t *set, int signum);</code>：将某个信号清出信号集</p></li><li><p><code>int sigismember(const sigset_t *set, int signum);</code>：判断某个信号是否在信号集中</p><blockquote><p>返回值：在集合1、不在：0、出错：-1</p></blockquote></li></ul></li><li><p><strong>信号屏蔽字与未决信号集</strong>的操作</p><ul><li><p>:star:<code>int sigprocmask(int how, const sigset_t *set, sigset_t *oldset);</code>：屏蔽信号或解除屏蔽</p><ul><li><p><code>how</code></p><p><code>SIG_BLOCK</code>：<code>set</code>表示需要屏蔽的信号</p><p><code>SIG_UNBLOCK</code>：<code>set</code>表示需要解除屏蔽的信号(set位为1代表解除屏蔽)</p><p><code>SIG_SETMASK</code>：<code>set</code>表示用于替代原始屏蔽及的新屏蔽集</p></li><li><p>成功返回0，失败返回-1</p></li></ul></li><li><p><code>int sigpending(sigset_t *set);</code>：读取当前进程的<strong>未决</strong>信号集</p><ul><li>成功返回0，失败返回-1</li></ul></li></ul></li></ul><hr><p><em>信号捕捉：</em></p><ul><li><p><code>sighandler_t signal(int signum, sighandler_t handler);</code>：注册一个信号捕捉函数</p><blockquote><p><code>typedef void (*sighandler_t)(int);</code>，参数是<strong>信号编号</strong></p></blockquote><ul><li>返回值为<code>sighandler_t </code>，若是<code>SIG_ERR</code>则代表出错，若不是则代表该信号之前的捕捉函数</li><li><code>handler</code>是要注册的处理函数，也可赋值为<code>SIG_IGN</code>表<strong>忽略</strong>或<code>SIG_DFL</code>表执行<strong>默认动作</strong></li></ul></li><li><p>:star:<code>int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);</code></p><ul><li><p>成功：0；失败：-1</p></li><li><p><code>struct sigaction</code>结构体重要成员</p><ul><li><p><code>sa_handler</code>成员：要注册的处理函数</p></li><li><p><code>sigset_t sa_mask</code>：信号处理函数执行期间进程的<strong>信号屏蔽字</strong></p><blockquote><p>仅在处理函数被调用期间屏蔽生效，是临时性设置；当然，如果处理函数执行期间未被屏蔽的信号到来，则依然按照正常的机制去处理</p></blockquote></li><li><p><code>int sa_flags</code>：通常设置为0，代表使用默认属性，即处理函数执行期间<strong>自动屏蔽</strong>被捕捉信号</p><blockquote><p>如果不希望自动阻塞被捕捉信号，则可以设置为<code>SA_NODEFER</code>，当然这种情况要求处理函数是可重入的（后面会讲”重入“）</p></blockquote></li></ul></li></ul></li><li><p>内核实现信号捕捉的过程</p><ol><li>进程收到成功<strong>递达</strong>的信号，陷入内核</li><li><strong>内核</strong>处理信号，如果有注册处理函数，则回到用户态<strong>执行回调</strong></li><li>处理函数执行完后，执行特殊的<strong>系统调用</strong>函数<code>sigreturn</code>，再次回到内核</li><li>最后回到用户态继续向后执行</li></ol></li><li><p>通过 <em><strong>17) SIGCHILD</strong></em> 信号回收子进程</p><ol><li>屏蔽SIGCHILD信号</li><li>注册 SIGCHILD 信号处理函数<ul><li>在函数中通过<code>while ((pid = waitpid(0, &amp;status, WNOHANG)) &gt; 0)</code> 的方式回收子进程</li></ul></li><li>解除对SIGCHILD信号的屏蔽</li></ol></li></ul><hr><p><em><code>pause</code>函数与<code>sigsuspend</code>函数</em>：</p><ul><li><p><code>int pause(void);</code>：让进程主动阻塞，等待信号唤醒</p><ul><li><p>不能返回的情况</p><ul><li><p>信号的<strong>默认处理动作</strong>是终止进程，进程<strong>终止</strong></p><blockquote><p>一般来说，<strong>执行默认动作</strong>就不能返回了</p></blockquote></li><li><p>信号被<strong>忽略</strong></p></li><li><p>信号被<strong>屏蔽</strong></p></li></ul></li><li><p>可以返回的情况：<strong>捕捉</strong>且<strong>处理函数</strong>执行后</p><ul><li>返回 -1 并设置errno为EINTR</li></ul></li></ul></li><li><p><code>int sigsuspend(const sigset_t *mask);</code>：让进程主动阻塞，等待信号唤醒，阻塞期间的信号屏蔽字由参数决定</p></li></ul><hr><p><em>信号传参：</em></p><ul><li><p>发送信号时传参：<code>int sigqueue(pid_t pid, int sig, const union sigval value);</code></p><ul><li><p><code>union sigval &#123;int  sival_int; void *sival_ptr;&#125;;</code></p><blockquote><p>注意，不同进程<strong>虚拟地址空间</strong>不同，所以<strong>不同进程之间</strong>用信号传地址是没有太大意义的，但<strong>同一个进程</strong>可以</p></blockquote></li><li><p>成功返回0，失败返回-1并设置error</p></li></ul></li><li><p>捕捉信号时接收到的参数：<code>int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);</code></p><ul><li><p><code>sigaction</code>结构体的<code>sa_sigaction</code>成员：<code>void (*sa_sigaction)(int, siginfo_t *, void *);</code></p><blockquote><p><code>siginfo_t</code>是较为复杂的结构体，详见<code>man sigaction</code></p></blockquote></li><li><p>用<code>sa_sigaction</code>成员代替<code>sa_handler</code>，并且<code>sa_flags</code>要置为<code>SA_SIGINFO</code></p></li></ul></li></ul><hr><p><em>中断系统调用：</em></p><ul><li><p>系统调用的一种分类</p><ul><li><p>慢速系统调用：可能会使进程永远阻塞的一类系统调用</p><blockquote><p>如，read、write、pause、wait…</p></blockquote></li><li><p>其他系统调用</p></li></ul></li><li><p>慢速系统调用执行期间捕捉到信号，则系统调用会被中断，处理函数执行后，慢速系统调用通常会返回-1，并设置<code>errno</code>为<code>EINTR</code></p><blockquote><p>想中断慢速系统调用，不能屏蔽、忽略、执行默认动作；</p><p>EINTR代表“被信号中断“</p></blockquote></li><li><p>中断慢速系统调用后，如果想重启，可以自行在程序中书写重启的逻辑，也可以设置<code>sa_flags</code>参数为<code>SA_RESTART</code></p><blockquote><p><code>SA_INTERRUPT</code>为不重启</p></blockquote></li></ul><h3 id="3-5-竞态条件">3.5 竞态条件</h3><p><em>时序竞态问题：</em></p><ul><li>竞态条件，跟系统负载有很紧密的关系，体现出信号的不可靠性。系统负载越严重，信号不可靠性越强。</li><li>竞态问题就是指由于进程抢占CPU时间片执行的<strong>异步性和不确定性</strong>导致的<strong>数据不一致问题</strong>。这种意外情况只能在编写程序过程中，提早预见，主动规避，而无法通过gdb程序调试等其他手段弥补。</li><li>条件：<strong>共享</strong>数据<strong>并发</strong>访问，且有<strong>写</strong>动作</li></ul><hr><p><em>全局变量的异步读写</em>：</p><ul><li>进程本身的函数和内核调用的<strong>回调函数</strong>可能会对全局变量有异步读写操作</li><li>解决方案<ul><li>不使用全局变量</li><li>锁机制</li></ul></li></ul><hr><p><em>可重入与不可重入函数：</em></p><ul><li>一个函数在被调用执行期间，由于某种时序又被重复调用，称之为“重入”。<ul><li>不可重入函数意思是，在函数的执行过程中，受到异步时序影响<strong>再次执行</strong>此函数（原执行暂停，直到再次执行结束后再继续执行），最终得到的结果与两次<strong>串行执行</strong>函数不一致</li></ul></li><li>可重入函数的特点<ul><li>不能含有全局变量和<code>static</code>变量</li><li>不能使用<code>malloc</code>、<code>free</code></li><li>不是<strong>标准IO</strong>函数</li></ul></li><li>信号处理程序能调用的可重入函数可参阅<code>man 7 signal</code></li></ul><h3 id="3-6-进程组与会话">3.6 进程组与会话</h3><p><em>终端与Shell进程：</em></p><ul><li><p>所谓终端，就是<strong>所有输入输出设备的总称</strong></p></li><li><p>UNIX系统中用户可以通过<strong>终端</strong>登录系统，并得到一个<strong>Shell进程</strong>，终端就是Shell进程的<strong>控制终端</strong>。控制终端记录在PCB中，而<code>fork</code>时复制PCB，所以Shell进程启动的其他进程的控制终端也是该终端</p></li><li><p>终端的启动流程：init<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>fork、exec<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>getty<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>login<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>exec、bash</p></li><li><p>终端与用户进程的交互：</p><p>用户进程</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo><mo>↓</mo></mrow><annotation encoding="application/x-tex">\uarr\darr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↑↓</span></span></span></span></p><p>系统调用</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo><mo>↓</mo></mrow><annotation encoding="application/x-tex">\uarr\darr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↑↓</span></span></span></span></p><p>line discipline</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo><mo>↓</mo></mrow><annotation encoding="application/x-tex">\uarr\darr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↑↓</span></span></span></span></p><p>终端设备驱动程序</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo><mo>↓</mo></mrow><annotation encoding="application/x-tex">\uarr\darr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↑↓</span></span></span></span></p><p>终端设备</p><blockquote><p>line disciline: 线路规程，用来过滤键盘输入的内容</p></blockquote></li><li><p><code>char *ttyname(int fd);</code>：由文件描述符查出对应的文件名/设备名</p></li></ul><hr><p><em>进程组的概念与特性：</em></p><ul><li><p>进程组，也称之为<strong>作业</strong>，代表一个或多个进程的集合。<strong>每个进程都属于一个进程组</strong>，操作系统设计的进程组的概念，是为了简化<strong>对多个进程的管理</strong>。</p></li><li><p>父进程<code>fork</code>创建子进程的时候，默认子进程与父进程属于同一进程组，父进程为组长进程。<strong>组长进程</strong>的<strong>进程ID</strong>等于<strong>组进程ID</strong>。</p></li><li><p>进程组<strong>生存期</strong>：进程组创建的<strong>最后一个进程离开</strong>(终止或转移到另一个进程组)</p><blockquote><p>只要进程组中有一个进程存在，进程组就存在，与<strong>组长进程是否终止</strong>无关</p></blockquote></li></ul><hr><p><em>进程组操作函数：</em></p><ul><li><p><code>pid_t getpgrp(void);</code>：获取当前进程的进程组ID</p></li><li><p><code>pid_t getpgid(pid_t pid); </code>：获取指定进程的进程组ID</p><ul><li>如果<code>pid</code>为0，与<code>getpgrp</code>作用相同</li></ul></li><li><p><code>int setpgid(pid_t pid, pid_t pgid);</code>：改变进程默认所属的进程组</p><ul><li><p>可用来<strong>加入</strong>一个现有的进程组或<strong>创建</strong>一个新进程组(并作为组长)</p></li><li><p>成功返回0失败返回-1并设置errno</p></li><li><p>权级问题：非root进程只能改变<strong>自己创建的子进程</strong>，或<strong>有权限操作</strong>的进程</p><blockquote><p>也可以改变自己的进程组</p></blockquote></li></ul></li></ul><hr><p><em>会话的概念与特性：</em></p><ul><li>会话就是<strong>一组进程组</strong></li><li>创建会话的进程<strong>不能是原组长</strong>进程。创建会话的进程会成为<strong>首进程/会长</strong>(session leader)，并且会成为一个<strong>新进程组的组长</strong></li><li><strong>新会话</strong><u>丢弃原有的控制终端</u>，<strong>没有控制终端</strong>，只在后台执行</li><li>Shell进程创建出的进程，进程组会变化，但会话与Shell进程保持一致</li></ul><hr><p><em>会话操作函数：</em></p><ul><li><code>pid_t getsid(pid_t pid);</code>：获取进程<strong>所属的会话ID</strong><ul><li>成功返回会话ID，失败返回-1并设置errno</li><li><code>pid</code>为0表示查看当前进程会话ID</li></ul></li><li><code>pid_t setsid(void);</code>：创建一个会话，并以自己的ID设置<strong>新进程组ID</strong>，同时也是<strong>新会话ID</strong><ul><li>成功返回新会话ID，失败返回-1并设置errno</li><li>创建会话的一般流程：父进程<code>fork</code>并退出，子进程<code>setsid</code></li></ul></li></ul><hr><p><em>守护进程：</em></p><ul><li><p>Daemon(精灵)进程，是Linux中的<strong>后台服务进程</strong>，通常独立于控制终端，并且<strong>周期性</strong>地执行某种任务或等待处理某些发生的事件。一般采用以d结尾的名字。</p></li><li><p><strong>创建守护进程</strong>的模型</p><ol><li><p>创建子进程，父进程退出</p><blockquote><p>形式上<strong>脱离了控制终端</strong></p></blockquote></li><li><p>在子进程中创建新会话</p><blockquote><p>使子进程<strong>完全独立</strong>出来，脱离控制，不受用户登录和注销的影响</p></blockquote></li><li><p>改变<strong>工作目录</strong>为根目录等不会被删除的目录</p><blockquote><p><code>chdir()</code>函数</p></blockquote></li><li><p>重设文件权限掩码</p><blockquote><p><code>umask()</code>函数</p><p>防止继承的文件创建屏蔽字拒绝某些权限，增加守护进程灵活性</p></blockquote></li><li><p>关闭标准输入、输出、错误的<strong>文件描述符</strong></p><blockquote><p>继承的打开文件不会用到，浪费系统资源，无法卸载；</p><p>更常用的做法是，将0、1、2重定向到/dev/null，保持可用的文件描述符从3开始</p></blockquote></li><li><p>开始执行守护进程核心工作（周期性执行）</p></li><li><p>守护进程退出处理程序模型</p></li></ol><blockquote><p>如果想让守护进程随着机器重启，可以修改<code>~/.bashrc</code>，将守护进程的启动加入进去</p></blockquote></li></ul><h3 id="3-7-线程基础">3.7 线程基础</h3><h4 id="线程资源："><em>线程资源：</em></h4><ul><li><p>共享资源</p><ul><li><p>大部分内存地址空间 (.text/.data/.bss/heap/共享库)、文件描述符表</p><blockquote><p>除了<strong>栈</strong>和errno变量不共享，其他的包括<strong>全局变量</strong>都共享，所以可以在一个线程中释放其他线程的申请的空间（<code>malloc</code>、<code>mmap</code>）</p></blockquote></li><li><p>当前工作目录、用户ID和组ID</p></li><li><p>每种信号的处理方式</p></li></ul></li><li><p>非共享资源</p><ul><li><p>线程id</p></li><li><p>处理器现场和栈指针(内核栈)、独立的<strong>栈空间</strong>(用户空间栈)</p><blockquote><p>同一进程各线程栈的空间地址值是互相不冲突、不相同的</p></blockquote></li><li><p>errno变量</p></li><li><p><strong>信号屏蔽字</strong></p></li><li><p>调度优先级</p></li></ul></li></ul><hr><h4 id="线程操作函数："><em>线程操作函数：</em></h4><blockquote><p>编译链接时要加<code>-pthread</code>才可以链接到这些函数，同时注意版本<code>getconf GNU_LIBPTHREAD_VERSION</code></p></blockquote><ul><li><p><code>pthread_t pthread_self(void);</code>：获取线程ID</p><ul><li><p><code>pthread_t</code>在Linux中本质是无符号整数</p></li><li><p>该函数调用不会失败，返回的就是线程ID</p><blockquote><p>线程ID和LWP线程号不是同一个东西，<strong>LWP线程号</strong>是<strong>CPU给线程分配时间片</strong>的依据</p><blockquote><p><code>ps -Lf 进程ID</code>可以查看线程LWP号</p></blockquote></blockquote></li></ul></li><li><p><code>int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg);</code>：</p><ul><li><p><code>thread</code>：是传出参数，代表创建的线程ID</p></li><li><p><code>attr</code>：线程属性，默认可以传NULL</p></li><li><p><code>start_routine</code>：线程的主控函数</p></li><li><p><code>arg</code>：主控函数的参数</p></li><li><p>成功返回0，失败直接返回error number</p><blockquote><p>Linux环境下所有线程API都是这样的返回</p></blockquote></li><li><p>循环创建多个子线程</p><p><code>pthread_create(&amp;tid, NULL, thrd_func, (void *)arg)</code></p><ul><li><p>子线程中<code>arg</code>可能的使用方式：<code>(int)arg</code></p></li><li><p>如果使用<code>(void *)&amp;arg</code>这种方式，传入的是父线程的地址空间，可能会造成问题</p><blockquote><p>这种情况下可能的使用方式：<code>*((int *)arg)</code></p></blockquote></li></ul></li></ul></li><li><p><code>void pthread_exit(void *retval);</code></p><ul><li><p><code>retval</code>表示线程退出状态，通常传<code>NULL</code></p></li><li><p>用<code>pthread_exit</code>退出主控线程或子线程，若<strong>进程内还有其他线程</strong>存在，则进程不会结束</p><blockquote><p>如果在主控线程或子线程中使用<code>exit</code>函数退出，会直接退出整个进程；</p><p>如果在主控线程中使用<code>return</code>退出，会直接退出整个进程；</p><p>如果在子线程的主控函数中使用<code>return</code>退出，相当于用<code>pthread_exit</code>退出</p></blockquote></li></ul></li><li><p><code>int pthread_join(pthread_t thread, void **retval);</code>：<strong>阻塞</strong>等待线程退出，获取线程退出状态</p><ul><li><code>retval</code>：存储线程结束状态，指向的是<code>pthread_exit</code>函数的入参，所以是<code>void**</code>类型</li><li>可能的使用方式：<code>pthread_join(tid, (void **)&amp;retval)</code>，<code>retval</code>是<strong>一级指针</strong></li><li>与进程的区别是，线程与线程之间也可以调用<code>pthread_join</code>来“回收”</li><li>成功返回0，失败返回error number</li></ul></li><li><p><code>int pthread_detach(pthread_t thread);</code>：分离线程</p><ul><li>线程分离状态：线程与主控线程断开关系，结束后<strong>自动释放</strong>（清理PCB）</li><li>如果用<code>pthread_join</code>回收分离的线程，会出错，返回22</li><li>成功返回0，失败返回error number</li></ul></li><li><p><code>int pthread_cancel(pthread_t thread);</code>：杀死(取消)线程</p><ul><li><p>线程的取消并不是实时的，需要等待线程<strong>到达</strong>某个**<u>取消点(检查点)</u>**时</p><ul><li><p>取消点：线程检查是否被取消，并按请求进行动作的一个位置，通常是某些系统调用</p><blockquote><p><code>man 7 pthreads</code>可以查看具备取消点的系统调用列表</p></blockquote></li><li><p>自行添加取消点：<code>pthread_testcancel();</code></p></li></ul></li><li><p>如果用<code>pthread_join</code>回收取消的线程，会出错，返回-1</p><blockquote><p><code>pthread.h: #define PTHREAD_CANCELED ((void *) -1)</code></p></blockquote></li><li><p>成功返回0，失败返回error number</p></li></ul></li><li><p><code>int pthread_equal(pthread_t t1, pthread_t t2);</code>：比较两个线程ID是否相等</p><ul><li>当然，目前<code>pthread_t</code>就是整型，可以直接用<code>==</code>判等，之后如果改成其他的比如结构体类型，就需要用<code>pthread_equal</code>了</li></ul></li></ul><hr><h4 id="线程属性："><em>线程属性：</em></h4><ul><li><p><code>pthread_attr_t </code>结构体的重要成员</p><ul><li><p><code>int etachstate;   //线程的分离状态</code></p></li><li><p><code>size_t stacksize;     //线程栈的大小</code></p><blockquote><p>线程栈默认大小是<strong>均分进程栈（8MB）</strong></p></blockquote></li><li><p><code>size_t guardsize;    //线程栈末尾的警戒缓冲区大小</code></p><blockquote><p>警戒区用于防止线程栈溢出</p></blockquote></li></ul></li><li><p>线性属性初始化与销毁</p><ul><li><code>int pthread_attr_init(pthread_attr_t *attr);</code>：初始化线程属性<ul><li>应先初始化线程属性，再<code>pthread_create</code>创建线程。当然这个函数只是初始化，不是设置属性</li><li>成功返回0，失败返回错误号</li></ul></li><li><code>int pthread_attr_destroy(pthread_attr_t *attr);</code>：销毁线程属性所占用的资源<ul><li>成功返回0，失败返回错误号</li></ul></li></ul></li><li><p>线程分离的属性</p><ul><li><p><code>int pthread_attr_setdetachstate(pthread_attr_t *attr, int detachstate);</code>：设置线程的分离属性</p><ul><li><p><code>detachstate</code></p><p><code>PTHREAD_CREATE_DETACHED</code>：分离</p><p><code>PTHREAD _CREATE_JOINABLE</code>：不分离</p></li></ul></li><li><p><code>int pthread_attr_getdetachstate(pthread_attr_t *attr, int *detachstate);</code>：获取线程的分离属性</p></li></ul><blockquote><p>如果设置一个线程为分离线程，而这个线程运行又非常快，它很可能在<code>pthread_create</code>函数返回之前就终止了，终止后可能将<strong>线程号和系统资源</strong>移交给其他的线程使用，这样调用<code>pthread_create</code>的线程就得到了<strong>错误的线程号</strong>。可以用线程同步的手段解决这个问题。</p></blockquote></li><li><p>线程的栈空间属性</p><ul><li><p><code>int pthread_attr_setstack(pthread_attr_t *attr, void *stackaddr, size_t stacksize);</code>：设置栈地址和大小</p><blockquote><p>可以将线程的栈地址设置到<strong>堆</strong>中（<code>malloc</code>）</p></blockquote></li><li><p><code>int pthread_attr_getstack(pthread_attr_t *attr, void **stackaddr, size_t *stacksize);</code>：获取栈地址和大小</p></li><li><p><code>int pthread_attr_setstacksize(pthread_attr_t *attr, size_t stacksize);</code>：设置栈大小</p></li><li><p><code>int pthread_attr_getstacksize(pthread_attr_t *attr, size_t *stacksize);</code>：获取栈大小</p></li></ul></li></ul><hr><h4 id="线程使用注意事项："><em>线程使用注意事项：</em></h4><ul><li>线程库版本问题<code>getconf GNU_LIBPTHREAD_VERSION</code></li><li>避免僵尸线程，要么<code>join</code>回收，要么<code>detach</code>分离（或者修改线程属性使其分离）</li><li>尽量避免在多线程模型中使用<code>fork</code>。<code>fork</code>后子进程中只存在调用<code>fork</code>的“线程”，其他“线程”都退出了</li><li>尽量避免在多线程模型中使用信号机制</li></ul><h3 id="3-8-线程和进程的同步与互斥">3.8 线程和进程的同步与互斥</h3><h4 id="互斥量mutex："><em>互斥量<code>mutex</code>：</em></h4><ul><li><p><code>pthread_mutex_t</code>本质是结构体，可以简单认为其只有0、1两种取值</p></li><li><p><code>mutex</code>相关函数</p><blockquote><p>这些函数均是成功返回0，失败返回错误号</p></blockquote><ul><li><p><code>int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr);</code>：初始化一个互斥锁</p><ul><li><p>可以理解为<code>mutex = 1</code></p></li><li><p><code>restrict</code>关键字：所有修改<strong>该指针指向内存</strong>的操作，只能通过本指针完成，不能通过除本指针以外的其他变量或指针修改</p></li><li><p><code>attr</code>：互斥锁的属性，传入<code>NULL</code>为默认属性</p></li><li><p>也可以使用<strong>宏</strong>直接初始化：（静态初始化）</p><p><code>pthead_mutex_t muetx = PTHREAD_MUTEX_INITIALIZER;</code></p></li></ul></li><li><p><code>int pthread_mutex_destroy(pthread_mutex_t *mutex);</code>：销毁一个互斥锁</p></li><li><p><code>int pthread_mutex_lock(pthread_mutex_t *mutex);</code>：上锁</p><ul><li>可理解为<code>mutex--</code></li><li>锁被占用则阻塞，直到成功获得锁</li></ul></li><li><p><code>int pthread_mutex_unlock(pthread_mutex_t *mutex);</code>：解锁</p><ul><li>可理解为<code>mutex++</code></li></ul></li><li><p><code>int pthread_mutex_trylock(pthread_mutex_t *mutex);</code>：尝试上锁</p><ul><li>锁被占用不阻塞，返回<code>EBUSY</code>代表无法获得锁</li></ul></li></ul></li><li><p><code>mutex</code>的应用</p><ol><li>定义锁：<code>pthread_mutex_t mutex;</code><ul><li>一般为<strong>全局变量</strong></li></ul></li><li>初始化锁</li><li>上锁</li><li>解锁</li></ol><blockquote><p>锁的<strong>粒度</strong>应当尽量小</p></blockquote></li><li><p>死锁</p><ul><li>两种产生情况<ul><li>不可重入锁</li><li>两把锁</li></ul></li><li>对应解决方法<ul><li>可重入锁</li><li><code>trylock</code>失败则释放锁</li></ul></li></ul></li></ul><hr><h4 id="读写锁rwlock："><em>读写锁<code>rwlock</code>：</em></h4><ul><li><p><code>rwlock</code>特性</p><ul><li>:star:写独占、读共享</li><li>:star:写锁优先级高</li></ul></li><li><p><code>rwlock</code>相关函数</p><blockquote><p>这些函数均是成功返回0，失败返回错误号。用法与<code>mutex</code>很相似</p></blockquote><ul><li><p><code>int pthread_rwlock_init(pthread_rwlock_t *restrict rwlock, const pthread_rwlockattr_t *restrict attr);</code>：初始化一把读写锁</p><ul><li><p><code>attr</code>：传入<code>NULL</code>代表使用默认属性</p></li><li><p>也可以使用<strong>宏</strong>直接初始化：（静态初始化）</p><p><code>pthread_rwlock_t rwlock = PTHREAD_RWLOCK_INITIALIZER;</code></p></li></ul></li><li><p><code>int pthread_rwlock_destroy(pthread_rwlock_t *rwlock);</code>：销毁一把读写锁</p></li><li><p><code> int pthread_rwlock_rdlock(pthread_rwlock_t *rwlock);</code>：请求读锁</p></li><li><p><code>int pthread_rwlock_wrlock(pthread_rwlock_t *rwlock);</code>：请求写锁</p></li><li><p><code>int pthread_rwlock_unlock(pthread_rwlock_t *rwlock);</code>：解锁</p></li><li><p><code>int pthread_rwlock_tryrdlock(pthread_rwlock_t *rwlock);</code>：非阻塞请求读锁</p></li><li><p><code>int pthread_rwlock_trywrlock(pthread_rwlock_t *rwlock);</code>：非阻塞请求写锁</p></li></ul></li><li><p><code>rwlock</code>的应用：<code>pthread_rwlock t rwlock;</code></p><blockquote><p>与<code>mutex</code>很相似</p></blockquote></li><li><p><code>rwlock</code>的优点：适合读多写少的场景，减少不必要的竞争</p></li></ul><hr><h4 id="条件变量cond："><em>条件变量<code>cond</code>：</em></h4><ul><li><p>特点：</p><ul><li>条件变量本身不是锁！但它也可以造成线程阻塞。</li><li>通常与互斥锁配合使用，给多线程提供一个会合的场所。</li></ul></li><li><p><code>cond</code>相关函数：</p><blockquote><p>这些函数均是成功返回0，失败返回错误号。</p></blockquote><ul><li><p><code>int pthread_cond_init(pthread_cond_t *restrict cond, const pthread_condattr_t *restrict attr);</code>：初始化一个条件变量</p><ul><li><p>也可以使用<strong>宏</strong>直接初始化：（静态初始化）</p><p><code>pthread_cond_t cond = PTHREAD_COND_INITIALIZER;</code></p></li></ul></li><li><p><code>int pthread_cond_destroy(pthread_cond_t *cond);</code>：销毁一个条件变量</p></li><li><p>:star:<code>int pthread_cond_wait(pthread_cond_t *restrict cond, pthread_mutex_t *restrict mutex);</code>：阻塞等待一个条件变量满足</p><ul><li><p><code>mutex</code>：需要传入一个也初始化好的<code>mutex</code>，并且已经对其<strong>加锁</strong>了</p></li><li><p>会释放已掌握的互斥锁（<strong>解锁互斥量</strong>），相当于<code>pthread_mutex_unlock(&amp;mutex)</code></p><blockquote><p><strong>检查条件变量是否满足与加锁</strong>的操作是不可分割的</p></blockquote></li><li><p>当被<strong>唤醒</strong>，函数返回即将时，会解除阻塞并重新申请<strong>获取互斥锁</strong>，相当于<code>pthread_mutex_lock(&amp;mutex)</code></p></li></ul></li><li><p><code>int pthread_cond_signal(pthread_cond_t *cond);</code>：唤醒<strong>至少一个</strong>阻塞在条件变量上的线程</p></li><li><p><code>int pthread_cond_broadcast(pthread_cond_t *cond);</code>：唤醒<strong>全部</strong>阻塞在条件变量上的线程</p></li><li><p><code>int pthread_cond_timedwait(pthread_cond_t *restrict cond, pthread_mutex_t *restrict mutex, const struct timespec *restrict abstime);</code>：限时等待一个条件变量</p><ul><li><p>也会释放锁和申请锁</p></li><li><p><code>abstime</code>：绝对时间，是相对于<code>1970-1-1 00:00:00</code>的时间</p><blockquote><p>可以在<code>man sem_timedwait</code>中找到对应结构体的定义</p></blockquote><blockquote><p>正确用法：</p><p><code>time_t cur = time(NULL);</code></p><p><code>struct timespec t;</code></p><p><code>t.tv_sec = cur + 1</code></p><p><code>pthread_cond_timedwait(&amp;cond, &amp;mutex, &amp;t)</code></p></blockquote></li></ul></li></ul></li><li><p>条件变量的优点：相比于<code>mutex</code>，可以减少不必要的竞争，提高效率</p><blockquote><p>例如生产者与消费者模型中，在没有产品时，使用条件变量，消费者就<strong>不必互相竞争，而是都等待</strong></p></blockquote></li></ul><hr><h4 id="信号量semaphore："><em>信号量<code>semaphore</code>：</em></h4><ul><li><p><code>semaphore.h</code>，信号量，可以理解成互斥锁的“加强版”，可以进一步细化锁，保证互斥与同步，又提高并发度</p></li><li><p>主要应用函数（注意，没有<code>pthread</code>前缀，进程线程都可以用）</p><blockquote><p>这些函数都是成功返回0， 失败返回-1，同时设置errno</p></blockquote><ul><li><p><code>int sem_init(sem_t *sem, int pshared, unsigned int value);</code>：初始化一个信号量</p><ul><li><p><code>pshared</code>：0表示只用于线程间，非0表示可用于进程间</p></li><li><p><code>value</code>：信号量初值</p><blockquote><p><strong>信号量的初值决定了占用信号量的线程/进程个数</strong></p></blockquote></li></ul></li><li><p><code>int sem_destroy(sem_t *sem);</code>：销毁一个信号量</p></li><li><p><code>int sem_wait(sem_t *sem);</code>：给信号量加锁（<code>sem--</code>）</p></li><li><p><code>int sem_post(sem_t *sem);</code>：给信号量解锁（<code>sem++</code>）</p></li><li><p><code>int sem_trywait(sem_t *sem);</code>：尝试对信号量加锁</p></li><li><p><code>int sem_timedwait(sem_t *sem, const struct timespec *abs_timeout);</code>：限时尝试对信号量加锁</p></li></ul></li><li><p>信号量的特点：可以由多个线程/进程占用</p></li></ul><hr><h4 id="进程间同步："><em>进程间同步：</em></h4><ul><li><p>通过互斥量<code>mutex</code>实现：指定初始化时的属性<code>pthread_mutexattr_t mattr attr</code></p><ul><li><p><code>int pthread_mutexattr_init(pthread_mutexattr_t *attr);</code>：初始化一个**<code>mutex</code>属性**对象</p></li><li><p><code>int pthread_mutexattr_destroy(pthread_mutexattr_t *attr);</code>：销毁**<code>mutex</code>属性**对象</p></li><li><p><code>int pthread_mutexattr_setpshared(pthread_mutexattr_t *attr, int pshared);</code>：修改<code>mutex</code>的共享属性</p><ul><li><p><code>PTHREAD_PROCESS_PRIVATE</code>：进程间私有，即线程锁</p><blockquote><p>也是默认属性</p></blockquote></li><li><p><code>PTHREAD_PROCESS_SHARED</code>：进程锁</p></li></ul></li></ul></li><li><p>借助文件锁实现：<code>int fcntl(int fd, int cmd, ... /* arg */ );</code></p><ul><li><p><code>cmd</code>：函数操作类型</p><ul><li><p><code>F_SETLK</code>：设置文件锁（trylock）</p></li><li><p><code>F_SETLKW</code>：设置文件锁（lock、unlock）</p><blockquote><p>通过下面结构体的<code>l_type</code>成员指定</p></blockquote></li><li><p><code>F_GETLK</code>：获取文件锁</p></li></ul></li><li><p>可变参：<code>struct flock</code></p><p><code>struct flock &#123;</code></p><p>​       <code>short l_type;       锁的类型：F_RDLCK 、F_WRLCK 、F_UNLCK</code></p><p>​       <code>short l_whence;     偏移位置：SEEK_SET、SEEK_CUR、SEEK_END </code></p><p>​       <code>off_t l_start;        起始偏移：1000</code></p><p>​       <code>off_t l_len;         长度：0表示整个文件加锁</code></p><p>​       <code>pid_t l_pid;        持有该锁的进程ID：(F_GETLK only)</code></p><p>​    <code> &#125;;</code></p><blockquote><p>提供了读锁和写锁，也允许只锁一个文件的<strong>一部分</strong></p></blockquote></li></ul><blockquote><p>多线程同步不能使用文件锁，因为同一个进程中的多线程共享文件描述符，也共享相应的文件结构体</p></blockquote></li></ul><h2 id="4-网络编程">4 网络编程</h2>]]></content>
      
      
      <categories>
          
          <category> C &amp; C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go gRPC</title>
      <link href="/posts/8f298335.html"/>
      <url>/posts/8f298335.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-微服务">1 微服务</h2><blockquote><p><a href="https://www.mszlu.com/grpc/01/01.html">https://www.mszlu.com/grpc/01/01.html</a></p></blockquote><h2 id="2-protobuf">2 protobuf</h2><h3 id="2-1-概述">2.1 概述</h3><p>protobuf是谷歌开源的一种数据格式，适合高性能，对响应速度有要求的数据传输场景。</p><p>profobuf是二进制数据格式，需要编码和解码，数据本身不具有可读性。因此只能<strong>反序列化</strong>之后得到真正可读的数据。</p><p>优势：</p><ul><li>序列化后体积相比Json和XML很小，适合网络传输</li><li>支持跨平台多语言</li><li>消息格式升级和兼容性还不错</li><li>序列化反序列化速度很快</li></ul><p>安装：</p><ol><li><p>下载通用编译器：<a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p><blockquote><p>下这个<code>protoc-21.7-win64.zip</code></p></blockquote></li><li><p>配置环境变量</p><blockquote><p>举例：<code>F:\ProgramFiles\protoc-21.7-win64\bin</code></p></blockquote></li><li><p>安装go专用的protoc的生成器：</p><p><code>go install github.com/golang/protobuf/protoc-gen-go</code></p><p><code>go install google.golang.org/grpc/cmd/protoc-gen-go-grpc</code></p><blockquote><p>安装后会在<code>GOPATH\bin</code>目录下生成可执行文件<code>protoc-gen-go</code>和<code>protoc-gen-go-grpc</code>，执行<code>protoc</code>命令会自动调用这个插件</p></blockquote><blockquote><p>Goland中也要安装Protocol Buffers插件</p></blockquote></li></ol><p>生成文件：</p><ul><li><p><code>protoc --go_out=./xxxDir --go-grpc_out=./xxxDir ./pbfile/xxx.proto</code></p><blockquote><p>这个会生成两个文件，一个对应<code>message</code>，一个对应<code>service</code></p><p>这样写的话服务端需要额外实现一个接口，生成的proto文件里已经提供了默认实现类：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> grpcServer <span class="keyword">struct</span> &#123;</span><br><span class="line">pb.UnimplementedXxxServer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li><li><p><code>protoc --go_out=plugins=grpc:./ ./xxx.proto </code></p><blockquote><p>这样只会生成一个文件</p></blockquote></li></ul><h3 id="2-2-语法">2.2 语法</h3><p><em>“头部”：</em></p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 指定的当前proto语法的版本，有2和3</span></span><br><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从执行protoc命令的当前目录开始算起</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;pbfile/xxx.proto&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// option go_package = &quot;path;name&quot;; </span></span><br><span class="line"><span class="comment">// path 表示生成的go文件的存放地址，会自动生成目录的，一般与package一致</span></span><br><span class="line"><span class="comment">// name 表示生成的go文件所属的包名，如果不配置就按下面的package生成</span></span><br><span class="line"><span class="keyword">option</span> go_package=<span class="string">&quot;../service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定go文件生成出来的package</span></span><br><span class="line"><span class="keyword">package</span> service;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><em><code>message</code>：</em></p><ul><li>消息就是需要传输的<strong>数据格式</strong>的定义，通过<code>message</code>关键字指定</li></ul><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">message &#123;</span><br><span class="line">字段规则 字段类型 字段名 = 标识号</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>字段规则</strong>：</p><ul><li><code>required</code>：消息体中<strong>必填字段</strong>，<code>proto3</code>中不需要显式写明<code>required</code>了</li><li><code>optional</code>：消息体中<strong>可选字段</strong>，在go中会生成指针</li><li><code>repeated</code>：消息体中<strong>可重复字段</strong>，在go中重复的会被定义为<strong>切片</strong></li></ul></li><li><p><strong>标识号</strong>：在消息体的定义中，每个字段都必须要有一个唯一的标识号，标识号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><msup><mn>2</mn><mn>29</mn></msup><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,2^{29}-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">29</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>范围内的一个整数。</p></li><li><p><strong>字段映射类型</strong>：</p><table><thead><tr><th style="text-align:center">.proto Type</th><th style="text-align:center">Notes</th><th style="text-align:center">Go Type</th></tr></thead><tbody><tr><td style="text-align:center"><code>double</code></td><td style="text-align:center"></td><td style="text-align:center"><code>float64</code></td></tr><tr><td style="text-align:center"><code>float</code></td><td style="text-align:center"></td><td style="text-align:center"><code>float32</code></td></tr><tr><td style="text-align:center"><code>int32</code></td><td style="text-align:center">使用变长编码，对于负值的效率很低，如果可能有负值，请使用sint64替代</td><td style="text-align:center"><code>int32</code></td></tr><tr><td style="text-align:center"><code>int64</code></td><td style="text-align:center"></td><td style="text-align:center"><code>int64</code></td></tr><tr><td style="text-align:center"><code>bool</code></td><td style="text-align:center"></td><td style="text-align:center"><code>bool</code></td></tr><tr><td style="text-align:center"><code>string</code></td><td style="text-align:center">一个字符串必须是UTF-8编码或者7-bit ASCII编码的文 本。</td><td style="text-align:center"><code>string</code></td></tr><tr><td style="text-align:center"><code>bytes</code></td><td style="text-align:center">可能包含任意顺序的字节数据。</td><td style="text-align:center"><code>[]byte</code></td></tr><tr><td style="text-align:center"><code>uint32</code></td><td style="text-align:center">使用变长编码</td><td style="text-align:center"><code>uint32</code></td></tr><tr><td style="text-align:center"><code>uint64</code></td><td style="text-align:center">使用变长编码</td><td style="text-align:center"><code>uint64</code></td></tr><tr><td style="text-align:center">sint32</td><td style="text-align:center">使用变长编码，这些编码在负值时比int32高效的多</td><td style="text-align:center">int32</td></tr><tr><td style="text-align:center">sint64</td><td style="text-align:center">使用变长编码，有符号的整型值。编码时比通常的int64高效。</td><td style="text-align:center">int64</td></tr><tr><td style="text-align:center">fixed32</td><td style="text-align:center">总是4个字节，如果数值总是比总是比128大的话，这个类型会比uint32高效。</td><td style="text-align:center">uint32</td></tr><tr><td style="text-align:center">fixed64</td><td style="text-align:center">总是8个字节，如果数值总是比总是比256大的话，这个类型会比uint64高效。</td><td style="text-align:center">uint64</td></tr><tr><td style="text-align:center">sfixed32</td><td style="text-align:center">总是4个字节</td><td style="text-align:center">int32</td></tr><tr><td style="text-align:center">sfixed64</td><td style="text-align:center">总是8个字节</td><td style="text-align:center">int64</td></tr></tbody></table></li></ul><blockquote><p><code>enum</code>类型：</p><p>和<code>message</code>一样定义在外面</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum </span><span class="title class_">enumType</span> &#123;</span><br><span class="line">enumElement0 = <span class="number">0</span></span><br><span class="line">enumElement1 = <span class="number">1</span></span><br><span class="line">enumElement2 = <span class="number">2</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>默认值：</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">bool</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">整型</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">string</td><td style="text-align:center">空字符串&quot;&quot;</td></tr><tr><td style="text-align:center">枚举enum</td><td style="text-align:center">第一个枚举元素的值，因为Protobuf3强制要求第一个枚举元素的值必须是0，所以枚举的默认值就是0；</td></tr><tr><td style="text-align:center">message</td><td style="text-align:center">不是null，而是DEFAULT_INSTANCE</td></tr></tbody></table></blockquote><blockquote><p><code>Any</code>类型：</p><ul><li><code>import &quot;google/protobuf/any.proto&quot;;</code></li><li><code>google.protobuf.Any</code></li></ul><p>…</p></blockquote><ul><li><p><strong>嵌套消息</strong></p><ul><li><code>message</code>定义出来的消息本身也可以作为一种<strong>字段类型</strong></li><li>在外部引用嵌套消息类型可以用<code>.</code></li></ul><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">message </span><span class="title class_">Father</span> &#123;</span><br><span class="line">    <span class="keyword">message </span><span class="title class_">Son</span> &#123;</span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">repeated</span> Son info = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">PersonMessage</span> &#123;</span><br><span class="line">Father.Son info = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>go语言中消息的<strong>序列化与反序列化</strong>：（<code>[]byte</code>）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// service.User是protobuf message 生成的</span></span><br><span class="line">user := &amp;service.User&#123;</span><br><span class="line">    Username: <span class="string">&quot;mszlu&quot;</span>,</span><br><span class="line">    Age: <span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 序列化</span></span><br><span class="line">marshal, err := proto.Marshal(user)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 反序列化</span></span><br><span class="line">newUser := &amp;service.User&#123;&#125;</span><br><span class="line">err = proto.Unmarshal(marshal, newUser)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p><em><code>service</code>：</em></p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">service </span><span class="title class_">SearchService</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">rpc</span> 方法名([stream]参数消息类型) <span class="keyword">returns</span> ([stream]返回值消息类型)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>如果想要将<strong>消息类型</strong>用在RPC系统中，可以在.proto文件中定义一个RPC服务接口，在go语言中会生成<code>interface</code>，这就是要进行的<strong>远程过程调用</strong></p><blockquote><p>注意这个参数和返回值类型<strong>只能是<code>message</code></strong>，而且都<strong>只能有一个</strong></p></blockquote></li><li><p><code>stream</code>代表<strong>流式</strong>通信，即会有多次请求或响应，而不是一次直接结束，下文会具体讲</p></li><li><p>protoc-gen后会生成比较复杂的<strong>存根和方法</strong>，具体用法见下文</p></li></ul><h2 id="3-通信">3 通信</h2><h3 id="3-1-一元通信">3.1 一元通信</h3><p><em>服务端：</em></p><ol><li><p>实现服务逻辑</p><ul><li>找到生成的.pb.go文件的<code>XxxxServer</code>接口，在自定义go文件中实现这个接口中的rpc方法</li></ul></li><li><p>注册服务</p><p><code>rpcServer := grpc.NewServer()</code></p><blockquote><p><code>grpc</code>是包名</p></blockquote><p><code>xxxPackage.RegisterXxxxServer(rpcServer, &amp;XxxImpl)</code></p><blockquote><p><code>xxxPackage</code>是<strong>自定义proto文件中指定的包名</strong></p></blockquote></li><li><p>启动服务：</p><p><code>listener, err := net.Listen(&quot;tcp&quot;, &quot;:port&quot;)</code></p><p><code>err := rpcServer.Serve(listener)</code></p></li></ol><hr><p><em>客户端：</em></p><ol><li><p>新建连接</p><p><code>conn, err := grpc.Dial(&quot;ip:port&quot;, grpc.WithTransportCredentials(insecure.NewCredentials()))</code></p><blockquote><p>第二个参数是安全证书</p></blockquote></li><li><p>生成客户端并调用存根</p><p><code>xxxClient := xxxPackage.NewXxxClient(conn)</code></p><p><code>respMessage, err:= xxxClient.XxxMethod(context.Background(), &amp;xxxPackage.XxxMessage)</code></p><blockquote><p>这个<code>XxxMethod</code>就是在proto文件中定义的rpc方法，<code>XxxMessage</code>和<code>respMessage</code>就是在proto文件中定义的消息类型在go语言中的实例</p></blockquote></li><li><p>关闭连接：<code>defer conn.Close()</code></p></li></ol><h3 id="3-2-流式通信">3.2 流式通信</h3><p><em><code>stream</code>概述：</em></p><ul><li><p>在 HTTP/1.1 的时代，同一个时刻只能对一个请求进行处理或者响应，换句话说，下一个请求必须要等当前请求处理完才能继续进行</p><blockquote><p>HTTP/1.1需要注意的是，在服务端没有response的时候，客户端是可以发起多个request的，但服务端依旧是顺序对请求进行处理, 并按照收到请求的次序予以返回。</p></blockquote></li><li><p>HTTP/2 的时代，<strong>多路复用</strong>的特性让一次同时处理多个请求成为了现实，并且同一个 TCP 通道中的请求不分先后、不会阻塞</p></li><li><p>HTTP/2 中引入了<strong>流(Stream)和帧(Frame)<strong>的概念，当 TCP 通道建立以后，后续的所有操作都是以</strong>流</strong>的方式发送的，而<strong>二进制帧是组成流的最小单位</strong>，属于协议层上的流式传输。</p><blockquote><p>HTTP/2 在一个 TCP 连接的基础上虚拟出多个 Stream, Stream 之间可以并发的请求和处理, 并且 HTTP/2 以二进制帧 (frame) 的方式进行数据传送, 并引入了头部压缩 (HPACK), 大大提升了交互效率</p></blockquote></li></ul><hr><p><em>双向<code>stream</code>的服务端：</em></p><ol><li><p>实现服务逻辑</p><ul><li>找到生成的.pb.go文件的<code>XxxxServer</code>接口，在自定义go文件中实现这个接口中的rpc方法，方法的参数对应了<strong>流式参数类型</strong>，一般类型名为：<code>xxxPackage.Xxx_XxxServer</code></li><li>接收请求：<code>for &#123;recv, err := streamMessage.Recv()&#125;</code><ul><li><code>recv</code>就是<strong>消息类型实例</strong></li><li>当<code>err == io.EOF</code>时代表请求结束</li></ul></li><li>响应数据：<code>err := streamMessage.Send(&amp;xxxPackage.XxxMessage&#123;&#125;)</code></li></ul></li><li><p>注册服务</p><p><code>rpcServer := grpc.NewServer()</code></p><blockquote><p><code>grpc</code>是包名</p></blockquote><p><code>xxxPackage.RegisterXxxxServer(rpcServer, &amp;XxxImpl)</code></p><blockquote><p><code>xxxPackage</code>是<strong>自定义proto文件中指定的包名</strong></p></blockquote></li><li><p>启动服务：</p><p><code>listener, err := net.Listen(&quot;tcp&quot;, &quot;:port&quot;)</code></p><p><code>err := rpcServer.Serve(listener)</code></p></li></ol><hr><p><em>双向<code>stream</code>的客户端：</em></p><ol><li><p>新建连接</p><p><code>conn, err := grpc.Dial(&quot;ip:port&quot;, grpc.WithTransportCredentials(insecure.NewCredentials()))</code></p><blockquote><p>第二个参数是安全证书</p></blockquote></li><li><p>生成客户端并调用存根</p><p><code>xxxClient := xxxPackage.NewXxxClient(conn)</code></p><p><code>reqStream, err := xxxClient.XxxMethod(context.Background())</code></p><blockquote><p>这里返回的<code>reqStrem</code>对应了<strong>流式参数类型</strong>，一般类型名为：<code>xxxPackage.Xxx_XxxClient</code></p></blockquote></li><li><p>(开启协程)发送流式请求</p><ul><li>发送请求：<code>reqStream.Send(&amp;xxxPackage.XxxMessage&#123;&#125;)</code></li><li>处理响应：<code>recv, err := reqStream.Recv()</code><ul><li><code>recv</code>就是<strong>消息类型实例</strong></li><li>当<code>err == io.EOF</code>时代表请求结束</li></ul></li></ul></li><li><p>关闭连接：<code>defer conn.Close()</code></p></li></ol><h2 id="4-安全传输">4 安全传输</h2>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> gRPC </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin</title>
      <link href="/posts/acec9806.html"/>
      <url>/posts/acec9806.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-快速入门">1 快速入门</h2><h3 id="1-1-概述">1.1 概述</h3><blockquote><p><a href="https://gin-gonic.com/zh-cn/">https://gin-gonic.com/zh-cn/</a></p></blockquote><p>Gin是一个Go(Golang)编写的轻量级http web框架，运行速度非常快。</p><p>Gin最擅长的就是<strong>Api接口的高并发</strong>，如果项目的规模不大，业务相对简单，推荐使用Gin</p><p>当某个接口的性能遭到较大挑战的时候，这个还是可以考虑<strong>使用Gin重写接口</strong></p><h3 id="1-2-环境搭建">1.2 环境搭建</h3><p>根据官网文档引入gin包</p><blockquote><p>可能需要提前创建项目才能<code>go get</code></p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 创建默认的路由引擎</span></span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">// 配置路由</span></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 监听并在 0.0.0.0:8000 上启动服务</span></span><br><span class="line">r.Run(<span class="string">&quot;:8000&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-热加载">1.3 热加载</h3><p>所谓热加载就是当我们对代码进行修改时，程序能够自动重新加载并执行，这在我们开发中是非常便利的，可以快速进行代码测试，省去了每次手动重新编译</p><p>在gin中我们要实现热加载可以借助<strong>第三方工具</strong></p><ul><li><p><code> go install github.com/pilu/fresh@latest</code></p><p><code>go get github.com/pilu/fresh</code></p><p><code>fresh</code></p><blockquote><p><a href="https://github.com/gravityblast/fresh">https://github.com/gravityblast/fresh</a></p></blockquote></li><li><p><code>go get -u github.com/codegangsta/gin</code></p><p><code>gin run main.go</code></p><blockquote><p><a href="https://github.com/codegangsta/gin">https://github.com/codegangsta/gin</a></p></blockquote></li></ul><h2 id="2-路由">2 路由</h2><h3 id="2-1-路由概述">2.1 路由概述</h3><p>路由（Routing）是由一个 <strong><u>URI</u></strong>（或者叫路径）和一个特定的 <strong><u>HTTP 方法</u></strong>（GET、POST 等）组成的，涉及到应用如何<strong>响应客户端</strong>对某个网站节点的访问</p><h3 id="2-2-路由配置">2.2 路由配置</h3><p><em>获得路由：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r := gin.Default()</span><br></pre></td></tr></table></figure><blockquote><p><code>github.com/gin-gonic/gin</code>包</p></blockquote><p><em>静态路由举例：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r.HTTP方法(<span class="string">&quot;/路径&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">  c.String(<span class="number">200</span>, <span class="string">&quot;HTTP方法&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>可以使用<code>http.StatusOK</code>代替<code>200</code></p></blockquote><p><em>动态路由举例：</em></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/user/:uid&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">  uid := c.Param(<span class="string">&quot;uid&quot;</span>) </span><br><span class="line">  c.String(<span class="number">200</span>, <span class="string">&quot;userID=%s&quot;</span>, uid) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="2-3-响应数据">2.3 响应数据</h3><p><em>响应字符串：</em></p><ul><li><code>c.String(code int, format string, values ...any)</code></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/user/:uid&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">  uid := c.Param(<span class="string">&quot;uid&quot;</span>) </span><br><span class="line">  c.String(<span class="number">200</span>, <span class="string">&quot;userID=%s&quot;</span>, uid) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><p><em>响应JSON：</em></p><ul><li><p>构造<code>map</code>的方式：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/someJSON&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; <span class="comment">// 方式一：自己拼接 JSON </span></span><br><span class="line">    c.JSON(http.StatusOK, <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello world!&quot;</span></span><br><span class="line">    &#125;) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>可以用自定义类型<code>gin.H</code>代替<code>map[string]interface&#123;&#125;</code></p></blockquote></li><li><p>构造<code>struct</code>的方式：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/moreJSON&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; <span class="comment">// 方法二：使用结构体 </span></span><br><span class="line">    <span class="keyword">var</span> msg <span class="keyword">struct</span> &#123; </span><br><span class="line">        Name <span class="type">string</span> <span class="string">`json:&quot;user&quot;`</span> </span><br><span class="line">        Message <span class="type">string</span> </span><br><span class="line">        Age <span class="type">int</span> </span><br><span class="line">    &#125;</span><br><span class="line">    msg.Name = <span class="string">&quot;IT 营学院&quot;</span> </span><br><span class="line">    msg.Message = <span class="string">&quot;Hello world!&quot;</span> </span><br><span class="line">    msg.Age = <span class="number">18</span> </span><br><span class="line">    c.JSON(http.StatusOK, msg) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><hr><p><em>响应JSONP：</em></p><ul><li>与JSON类似，不同的地方在于，请求路径中可以有<code>callback</code>参数，返回“<strong>执行回调</strong>”的形式</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/JSONP&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    data := <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123; </span><br><span class="line">        <span class="string">&quot;foo&quot;</span>: <span class="string">&quot;bar&quot;</span>, </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// /JSONP?callback=xxx </span></span><br><span class="line">    <span class="comment">// 将返回：xxx(&#123;\&quot;foo\&quot;:\&quot;bar\&quot;&#125;) </span></span><br><span class="line">    c.JSONP(http.StatusOK, data) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>如果是普通的JSON响应，则不会返回<code>xxx(JSONstr)</code>这种形式，只有一个<code>JSONstr</code></li></ul><hr><p><em>响应XML：</em></p><ul><li>与JSON用法几乎完全相同，就是api换成了<code>c.XML</code></li></ul><hr><p><em>渲染HTML模板：</em></p><blockquote><p>举例的渲染方法见下一节</p></blockquote><ul><li><p>首先可以执行<code>router.LoadHTMLGlob(&quot;templates/*&quot;) </code>加载所有模板</p><blockquote><p>这就需要在项目根目录下创建一个<code>templates</code>文件夹，里面存在<code>html</code>文件</p></blockquote></li><li><p><code>c.HTML(http.StatusOK, &quot;xxx.html&quot;, gin.H&#123;...服务器数据&#125;)</code></p></li></ul><h3 id="2-4-路由传值">2.4 路由传值</h3><p><em>GET传值：</em></p><ul><li><p>query参数（<code>?key=value&amp;key=value</code>）：</p><ul><li><code>c.Query(&quot;key&quot;)</code></li><li><code>c.DefaultQuery(&quot;key&quot;, defaultValue string)</code></li></ul></li><li><p>动态路由传值/路径参数/param参数：<code>c.Param(&quot;key&quot;)</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /path/:pathVariable</span></span><br><span class="line">r.GET(<span class="string">&quot;/user/:uid&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    uid := c.Param(<span class="string">&quot;uid&quot;</span>) </span><br><span class="line">    c.String(<span class="number">200</span>, <span class="string">&quot;userID=%s&quot;</span>, uid) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><hr><p><em>POST传值：</em></p><ul><li>表单参数：<code>c.PostForm(&quot;key&quot;)</code>、<code>c.DefaultPostForm(&quot;key&quot;, defaultValue)</code></li></ul><hr><p><em>绑定到结构体：</em></p><ul><li><p>可以提取<strong>JSON、form表单、QueryString类型</strong>的参数到结构体中，key需要和结构体的字段对应</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意首字母大写 </span></span><br><span class="line"><span class="keyword">type</span> Userinfo <span class="keyword">struct</span> &#123; </span><br><span class="line">    Username <span class="type">string</span> <span class="string">`form:&quot;username&quot; json:&quot;user&quot;`</span> </span><br><span class="line">    Password <span class="type">string</span> <span class="string">`form:&quot;password&quot; json:&quot;password&quot;`</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里主要是<code>form</code>标签在起作用，<code>json</code>只是结构体转换成JSON后的key</p><blockquote><p>无论是<code>form</code>还是<code>json</code>，结构体成员都要有公开访问权限</p></blockquote></blockquote></li><li><p>GET传值绑定到结构体：注意要传<strong>地址</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">router.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    <span class="keyword">var</span> userinfo Userinfo </span><br><span class="line">    <span class="keyword">if</span> err := c.ShouldBind(&amp;userinfo); err == <span class="literal">nil</span> &#123; </span><br><span class="line">        c.JSON(http.StatusOK, userinfo) </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        c.JSON(http.StatusBadRequest, gin.H&#123;</span><br><span class="line">            <span class="string">&quot;error&quot;</span>: err.Error(),</span><br><span class="line">        &#125;) </span><br><span class="line">    &#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>POST传值绑定到结构体：用法相同</p></li><li><p>XML绑定到结构体：</p><ul><li><code>bytesSlice, _ := c.GetRawData()</code></li><li><code>xml.Unmarshal(bytesSlice, any)</code></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Article <span class="keyword">struct</span> &#123; </span><br><span class="line">    Title <span class="type">string</span> <span class="string">`xml:&quot;title&quot;`</span> </span><br><span class="line">    Content <span class="type">string</span> <span class="string">`xml:&quot;content&quot;`</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line">router.POST(<span class="string">&quot;/xml&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    b, _ := c.GetRawData() <span class="comment">// 从 c.Request.Body 读取请求数据</span></span><br><span class="line">    article := &amp;Article&#123;&#125; </span><br><span class="line">    <span class="keyword">if</span> err := xml.Unmarshal(b, &amp;article); err == <span class="literal">nil</span> &#123; </span><br><span class="line">        c.JSON(http.StatusOK, article) </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        c.JSON(http.StatusBadRequest, err.Error()) </span><br><span class="line">    &#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-5-路由分组">2.5 路由分组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|-root</span><br><span class="line">|-main.go</span><br><span class="line">|-routers</span><br><span class="line">|-xxxRouter.go</span><br><span class="line">|-xxxxRouter.go</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"><span class="keyword">import</span> ( </span><br><span class="line">    <span class="string">&quot;gin_demo/routers&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := gin.Default()</span><br><span class="line">    routers.AdminRoutesInit(router)</span><br><span class="line">    routers.XxxRoutes(router)</span><br><span class="line">    router.run(<span class="string">&quot;:port&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xxxRouter.go</span></span><br><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AdminRoutesInit</span><span class="params">(router *gin.Engine)</span></span> &#123; </span><br><span class="line">    adminRouter := router.Group(<span class="string">&quot;/admin&quot;</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        adminRouter.GET(<span class="string">&quot;/user&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">            c.String(http.StatusOK, <span class="string">&quot;用户&quot;</span>) </span><br><span class="line">        &#125;)</span><br><span class="line">        adminRouter.GET(<span class="string">&quot;/news&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">            c.String(http.StatusOK, <span class="string">&quot;news&quot;</span>) </span><br><span class="line">        &#125;) </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>路由分组的语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rGroup = router.Group(&quot;/xxxgroup&quot;)</span><br><span class="line">&#123;</span><br><span class="line">rGroup.HTTP方法(...)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>上面这种写法还不是最终版本，之后结合<strong>控制器</strong>会再改动</p></li></ul><h2 id="3-HTML模板渲染">3 HTML模板渲染</h2><h2 id="4-控制器、中间件">4 控制器、中间件</h2><h3 id="4-1-控制器">4.1 控制器</h3><p><em>控制器架构：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">|- root</span><br><span class="line">|- main.go</span><br><span class="line">|- routers</span><br><span class="line">|- controllers</span><br><span class="line">|- controlerDir1</span><br><span class="line">|- xxxController.go</span><br><span class="line">        |- controlerDir2</span><br><span class="line">|- xxxxController.go</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xxxRouter.go</span></span><br><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gin_demo/controllers/xxx&quot;</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AdminRoutesInit</span><span class="params">(router *gin.Engine)</span></span> &#123; </span><br><span class="line">    adminRouter := router.Group(<span class="string">&quot;/admin&quot;</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        adminRouter.GET(<span class="string">&quot;/user&quot;</span>, xxx.UserMethod)</span><br><span class="line">        adminRouter.GET(<span class="string">&quot;/news&quot;</span>, xxx.NewsMethod) </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xxxController.go</span></span><br><span class="line"><span class="keyword">package</span> xxx</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UserMethod</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    c.String(http.StatusOK, <span class="string">&quot;用户&quot;</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewsMethod</span><span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    c.String(http.StatusOK, <span class="string">&quot;news&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其实没有什么特殊的语法，就是把原来的匿名函数划分到不同的<code>controller</code>文件中了</li></ul><hr><p><em>控制器继承：</em></p><ul><li>就是把函数挂载到<strong>结构体的方法</strong>上</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xxxBaseController.go</span></span><br><span class="line"><span class="keyword">package</span> admin </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;net/http&quot;</span> <span class="string">&quot;github.com/gin-gonic/gin&quot;</span> </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> BaseController <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c BaseController)</span></span> Success(ctx *gin.Context) &#123; </span><br><span class="line">    ctx.String(http.StatusOK, <span class="string">&quot;成功&quot;</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c BaseController)</span></span> Error(ctx *gin.Context) &#123; </span><br><span class="line">    ctx.String(http.StatusOK, <span class="string">&quot;失败&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xxxController.go</span></span><br><span class="line"><span class="keyword">package</span> xxx</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line"><span class="keyword">type</span> UserController <span class="keyword">struct</span>&#123;</span><br><span class="line">    <span class="comment">// 继承的结构体controller</span></span><br><span class="line">    BaseController</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ucon UserController)</span></span> User(c *gin.Context) &#123; </span><br><span class="line">    <span class="keyword">if</span> xxx &#123;</span><br><span class="line">    c.String(http.StatusOK, <span class="string">&quot;用户&quot;</span>)    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ucon.Error(c)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ucon UserController)</span></span> News(c *gin.Context) &#123; </span><br><span class="line">    c.String(http.StatusOK, <span class="string">&quot;news&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xxxRouter.go</span></span><br><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gin_demo/controllers/xxx&quot;</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">/*...*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AdminRoutesInit</span><span class="params">(router *gin.Engine)</span></span> &#123; </span><br><span class="line">    adminRouter := router.Group(<span class="string">&quot;/admin&quot;</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        adminRouter.GET(<span class="string">&quot;/user&quot;</span>, xxx.UserController&#123;&#125;.User)</span><br><span class="line">        adminRouter.GET(<span class="string">&quot;/news&quot;</span>, xxx.UserController&#123;&#125;.News) </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这样路由就只负责配置请求的路径关系，业务逻辑都由控制器处理</li></ul><h3 id="4-2-中间件">4.2 中间件</h3><p><em>中间件概述：</em></p><ul><li><p>Gin 框架允许开发者在处理请求的过程中，加入用户自己的钩子（Hook）函数。这个钩子函数就叫中间件</p><blockquote><p>中间件适合处理一些公共的业务逻辑，比如登录认证、权限校验、数据分页、记录日志、耗时统计等</p></blockquote></li><li><p>通俗的讲：中间件就是**请求处理前后（但都是<u>正式响应之前</u>）**执行的一系列操作</p><blockquote><p>有点像<strong>切面AOP</strong></p></blockquote></li></ul><hr><p><em>路由中间件：</em></p><ul><li><p>在路由函数中加入多个回调函数，最后一个回调函数用于处理请求并响应，前面的回调函数都是<strong>中间件</strong></p><blockquote><p>例如GET方法：</p>  <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(group *RouterGroup)</span></span> GET(relativePath <span class="type">string</span>, handlers ...HandlerFunc) IRoutes &#123;...&#125;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>在中间件中，可以调用<code>c.Next()</code>，直接去执行下一个处理程序，</p><ul><li>它可能是<strong>下一个中间件</strong>，即<strong>中间件</strong>会按照在路由函数中注册的顺序<strong>依次执行</strong></li><li>也可能<strong>就是最后一个回调函数</strong>，即对<strong>请求的处理</strong>（但<u>没有正式响应</u>），然后再回到中间件执行<code>c.Next()</code>后的语句</li></ul><blockquote><p>也就是在<strong>处理请求的业务逻辑前后</strong>分别执行语句，然后再返回</p><p>如果没有<code>c.Next()</code>，则会在执行完中间件中的所有语句后再响应请求</p></blockquote></li><li><p>在中间件中，也可以调用<code>c.Abort()</code>，说明直接不再执行后续的中间件和业务逻辑处理请求，返回空。但同一中间件中<code>c.Abort()</code>后的语句会正常执行。</p></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.go</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initMiddleware1</span><span class="params">(ctx *gin.Context)</span></span> &#123; </span><br><span class="line">    fmt.Println(<span class="string">&quot;中间件1---before request process&quot;</span>) </span><br><span class="line">    ctx.Next()</span><br><span class="line">    fmt.Println(<span class="string">&quot;中间件1---after request process&quot;</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initMiddleware2</span><span class="params">(ctx *gin.Context)</span></span> &#123; </span><br><span class="line">    fmt.Println(<span class="string">&quot;中间件2---before request process&quot;</span>) </span><br><span class="line">    ctx.Next()</span><br><span class="line">    <span class="comment">// ctx.Abort()</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;中间件2---after request process&quot;</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line">    r := gin.Default() </span><br><span class="line">    r.GET(<span class="string">&quot;/&quot;</span>, initMiddleware1, initMiddleware2, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123; </span><br><span class="line">        ctx.String(<span class="number">200</span>, <span class="string">&quot;首页--中间件演示&quot;</span>) </span><br><span class="line">    &#125;)</span><br><span class="line">    r.GET(<span class="string">&quot;/news&quot;</span>, initMiddleware1, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123; </span><br><span class="line">        ctx.String(<span class="number">200</span>, <span class="string">&quot;新闻页面--中间件演示&quot;</span>) </span><br><span class="line">    &#125;)</span><br><span class="line">    r.Run(<span class="string">&quot;:8080&quot;</span>) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><em>全局中间件：</em></p><ul><li>上面讲的路由中间件是针对<strong>单独一个路由</strong>的，可以理解成不是全局的</li><li><strong>全局中间件的注册</strong>方法：<code>r.Use(middleWare1, middleWare2, ...)</code><ul><li>这样在匹配所有路由时都会执行</li></ul></li></ul><hr><p><em>路由分组中间件：</em></p><ul><li>方式一：<code>r.Group(&quot;/path&quot;, middleWare1, middleWare2)</code></li><li>方式二：<code>groupRouter.Use(middleWare1, middleWare2)</code></li></ul><hr><p><em>中间件、控制器数据共享：</em></p><ul><li>设置值：<code>ctx.Set(&quot;key&quot;, &quot;value&quot;)</code></li><li>获取值：<code>ctx.Get(&quot;key&quot;, &quot;value&quot;)</code></li></ul><p>…</p><h2 id="5-Cookie-与-Session">5 Cookie 与 Session</h2><p>…</p><h2 id="6-Gin-连接-MySQL">6 Gin 连接 MySQL</h2>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Golang </tag>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统</title>
      <link href="/posts/cf3a69eb.html"/>
      <url>/posts/cf3a69eb.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-操作系统概述">1 操作系统概述</h2><h3 id="1-1-基本概念与功能">1.1 基本概念与功能</h3><ul><li><p><u>概念</u>：操作系统（Operating System，OS）是指</p><ul><li>控制和管理整个计算机系统的<strong>硬件和软件资源</strong>，并合理地<strong>组织调度计算机的工作</strong>和资源的分配，</li><li>以提供给用户和其他软件方便的<strong>接口调用和环境</strong>的系统软件，</li><li>它是计算机系统中<strong>最基本的系统软件</strong>。</li></ul><blockquote><p>简单来说，</p><ul><li>从程序的角度来讲，操作系统就是<strong>对象+API（系统调用）</strong>；</li><li>从硬件的角度来讲，操作系统就是一个<strong>C程序代码</strong></li></ul></blockquote></li><li><p><u>功能与目标</u></p><ul><li><p><strong>系统资源</strong>的管理者：安全高效</p><ul><li>进程管理</li><li>内存管理</li><li>文件管理</li><li>设备管理</li></ul></li><li><p>用户和计算机硬件之间的<strong>接口</strong>：方便使用</p><ul><li><p><strong>命令接口</strong>：允许用户<strong>直接使用</strong></p><ul><li><p><strong>联机</strong>命令接口/<strong>交互式</strong>命令接口</p><blockquote><p>比如dos窗口</p></blockquote></li><li><p><strong>脱机</strong>命令接口/<strong>批处理</strong>命令接口</p><blockquote><p>比如.bat文件</p></blockquote></li></ul></li><li><p><strong>程序接口</strong>：由一组<strong>系统调用</strong>组成，允许用户通过程序<strong>间接使用</strong></p><blockquote><p>比如.dll文件；</p><p>系统调用命令也称为<strong>广义指令</strong></p></blockquote></li><li><p>GUI：图形用户接口</p></li></ul></li><li><p>最<strong>接近硬件</strong>的层次</p></li></ul></li></ul><h3 id="1-2-基本特征">1.2 基本特征</h3><ul><li><p>两个最基本特征：并发和共享</p><ul><li><p><strong><u>并发</u></strong>：操作系统会<strong>协调多个程序交替执行</strong></p><blockquote><p>操作系统就是伴随着“多道程序技术”而出现的</p></blockquote></li><li><p><strong><u>共享</u></strong>：系统<strong>资源</strong>可供多个<strong>并发进程<u>互斥</u>地或<u>同时</u>地使用</strong></p><ul><li>互斥共享方式</li><li>同时共享方式</li></ul></li><li><p>并发和共享是操作系统<strong>最基本的两个特征</strong>，互为存在条件</p></li></ul></li><li><p>虚拟：操作系统将<u>内存、处理器</u>等<strong>物理实体扩展映射为若干个逻辑对应物</strong></p></li><li><p>异步性：由于<strong>资源有限</strong>，<strong>多进程</strong>并发地<strong>以不可预知的速度推进</strong></p></li></ul><h3 id="1-3-发展与分类">1.3 发展与分类</h3><ol><li><p><u>手工操作阶段</u>时，<strong>人机速度矛盾</strong>突出，<strong>资源利用率</strong>低</p></li><li><p><u>批处理阶段</u></p><ol><li><p><u>单道批处理阶段</u>中，引入了<strong>脱机输入/输出</strong>技术，并有<strong>监督程序</strong>负责控制作业的输入、输出</p><blockquote><p>监督程序也是操作系统的原型</p></blockquote></li><li><p><u>多道批处理阶段</u>中，操作系统诞生，其中引入了<strong>中断</strong>技术，多个<strong>程序并发执行</strong>，资源利用率提高，但不能<strong>人机交互</strong></p><blockquote><p><strong>中断</strong>是<strong>操作系统</strong>必须提供的功能；<strong>时钟中断</strong>为多道程序设计模型的理论基础</p></blockquote></li></ol><blockquote><p>批处理系统的主要缺点就是<strong>交互性</strong>差</p></blockquote></li><li><p><u>分时操作系统</u>以<strong>时间片</strong>为单位轮流运行多个程序，解决了<strong>人机交互</strong>问题，允许<strong>多个用户同时使用</strong>一台计算机，但不能优先响应<strong>紧急</strong>任务</p><blockquote><p>通用操作系统使用时间片轮转调度算法</p></blockquote></li><li><p><u>实时操作系统</u>能<strong>优先响应紧急任务</strong>，具有及时性和可靠性</p><ul><li>硬实时系统：必须在绝对严格的规定时间内完成处理</li><li>软实时系统：能接受偶尔违反时间规定</li></ul></li></ol><h3 id="1-4-运行机制和体系结构">1.4 运行机制和体系结构</h3><ul><li><p><u>运行机制/两种处理器状态</u>：</p><ul><li><p>核心态（管态）</p><ul><li><p>可执行<strong>特权指令、非特权指令</strong></p><blockquote><p>特权指令只允许<strong>操作系统/内核</strong>使用，</p><p>如内存清零指令、置时钟指令、关中断指令</p></blockquote></li><li><p>运行<strong>内核程序</strong></p><blockquote><p>如普通的运算指令</p></blockquote></li></ul></li><li><p>用户态（目态）</p><ul><li>只能<strong>非特权指令</strong></li><li>运行<strong>用户程序</strong></li></ul></li><li><p>用户态与核心态切换：修改<strong>程序状态字PSW</strong></p><ul><li><p>用户态下需要运行<strong>中断指令/访管指令/trap指令</strong>才能修改PSW</p><blockquote><p><strong>中断</strong>是用户态进入内核态的唯一途径，<strong>中断指令</strong>是唯一运行在用户态但不会运行在内核态下的指令。</p></blockquote></li><li><p>核心态下可以<strong>直接修改PSW</strong>，运行<strong>中断返回用户程序</strong>即可转换回用户态</p></li></ul></li><li><p>区分执行态的目的：保护系统程序</p></li></ul></li><li><p><u>体系结构</u>：操作系统<strong>内核/内核程序</strong>可包含的功能</p><ul><li><p><strong>时钟</strong>管理</p></li><li><p><strong>中断</strong>处理</p></li><li><p><strong>原语</strong>（设备驱动、CPU切换）</p></li><li><p><strong>资源</strong>管理：进程管理、内存管理、设备管理</p><blockquote><p>根据是否包含<strong>资源管理</strong>相关功能，可分类为<strong>宏内核、微内核</strong></p><ul><li>宏内核：高性能，但结构复杂难以维护、可能不稳定</li><li>微内核：结构清晰方便维护、稳定，但性能低</li></ul></blockquote></li></ul></li></ul><h3 id="1-5-中断和异常">1.5 中断和异常</h3><ul><li><p><u>中断的概念/本质</u></p><ul><li><p>发生中断就意味着<strong>需要操作系统介入</strong>，进入<strong>核心态</strong>，开展管理工作。</p><ul><li>中断是使CPU从用户态进入核心态的唯一方式。</li></ul></li><li><p>本质是修改<strong>PSW</strong>，核心态下可以直接修改，用户态下只能通过中断修改。</p></li></ul></li><li><p><u>中断的分类</u></p><ul><li><p><em>内中断/软件中断/异常</em></p><ul><li><p>系统调用等<strong>陷入</strong>（trap）</p></li><li><p>硬件<strong>故障</strong>（fault）</p><blockquote><p>例如：缺页</p></blockquote></li><li><p>程序<strong>终止</strong>（abort）</p><blockquote><p>例如：除0</p></blockquote></li></ul></li><li><p><em>外中断/硬件中断</em>：<strong>狭义的中断</strong></p><ul><li><p>外设请求</p><blockquote><p>例如：I/O操作完成</p></blockquote></li><li><p>人工干预</p><blockquote><p>例如：用户强行终止一个进程</p></blockquote></li></ul></li></ul><blockquote><p>“内外”是相对CPU而言</p></blockquote></li><li><p><u>中断的处理</u>：中断由<strong>中断隐指令</strong>与核心态下的<strong>中断处理程序</strong>处理</p><ul><li><p>检测：<strong>内中断</strong>由 CPU 检测，不能被屏蔽，一旦出现立即处理</p><blockquote><p>因为是来自程序自己的中断，需要自己处理</p></blockquote></li><li><p><em>中断隐指令</em>：<strong>硬件</strong>自动完成的、不存在于<strong>指令系统</strong>中的、处理中断的指令</p><ol><li>关中断</li><li>设置 PSW 从用户态到核心态</li><li>保存断点（PC）</li><li>引出中断服务程序（将中断向量送入 PC）</li></ol><blockquote><p>中断由硬件保护并更新 PC ，主要是保证系统运行可靠、正确</p></blockquote></li><li><p>运行环境：</p><ul><li>从用户态到核心态的转换是由<strong>硬件中断机制/中断隐指令</strong>完成的</li><li><strong>进入中断处理</strong>的程序、<strong>中断处理</strong>程序、<strong>中断返回</strong>程序均运行在内核态</li></ul></li></ul></li><li><p><u>Use of interrupts:</u></p><ul><li><strong>Multiprogramming</strong> technology</li></ul></li></ul><h3 id="1-6-系统调用">1.6 系统调用</h3><ul><li><p><u>系统调用的概念</u></p><ul><li><p>系统调用是<strong>操作系统提供给应用程序调用的特殊函数/接口</strong></p></li><li><p>系统调用命令也叫<strong>广义指令</strong>，在<strong>用户态下调用</strong>，在<strong>内核态下执行</strong></p><blockquote><p>注意区分：</p><ul><li>系统调用命令/广义指令</li><li>中断指令/访管指令/trap指令</li></ul></blockquote></li></ul></li><li><p><u>系统调用的功能</u>：用来获得<strong>操作系统的服务</strong>，在一情况下保证系统的<strong>稳定性和安全性</strong></p><ul><li>进程管理<ul><li>进程控制</li><li>进程通信</li></ul></li><li>内存管理</li><li>设备管理、文件管理</li></ul></li><li><p><u>系统调用与中断</u>：</p><ul><li>系统调用命令编译后会形成参数和<strong>陷入指令</strong>，引发陷入类型的<strong>内中断</strong>，从而使CPU从用户态进入<strong>核心态</strong>，执行系统调用相应服务程序。</li><li><strong>陷入指令是在用户态执行的</strong>，该指令会引发<strong>内中断</strong>，然后由<strong>硬件</strong>跳转至<strong>陷阱处理器</strong>（trap handler），切换至<strong>内核模式</strong>，处理陷阱（handle trap），执行系统调用</li></ul></li><li><p><u>库函数</u></p><ul><li><p>库函数是语言或应用程序的一部分，可以运行在<strong>用户空间</strong>中</p></li><li><p>库函数可以<strong>封装系统调用</strong></p><blockquote><p>未封装系统调用的库函数执行效率通常更高；</p><p>应用程序可以直接使用系统调用，也可以使用封装了系统调用的库函数</p></blockquote></li></ul></li></ul><h2 id="2-进程管理">2 进程管理</h2><h3 id="2-1-进程与线程概述">2.1 进程与线程概述</h3><h4 id="进程概念与组成："><em>进程概念与组成：</em></h4><ul><li><p><u>进程的<strong>概念</strong></u></p><ul><li><p>进程是<strong>程序的一次执行过程</strong>，是系统进行<strong>资源分配</strong>（和调度）的<strong>基本单位</strong></p><blockquote><p>程序：指令序列</p></blockquote></li></ul></li><li><p><u><strong>进程实体/进程映像</strong>的<strong>组成</strong></u></p><ul><li>程序段</li><li>数据段</li><li><strong>PCB</strong><ul><li>进程<strong>描述/标志</strong>信息：进程标识符（<strong>PID</strong>）、用户标识符（<strong>UID</strong>）</li><li>进程<strong>控制和管理</strong>信息：进程当前<strong>状态</strong>、进程当前<strong>优先级</strong></li><li><strong>资源分配</strong>清单：程序段和数据段的<strong>指针</strong>、键盘鼠标</li><li><strong>处理机</strong>相关信息：各种<strong>寄存器</strong>值、CPU状态</li></ul></li></ul><blockquote><p>C语言程序的组成：</p><ul><li><p>PCB</p></li><li><p>正文段：代码段和赋值数据段</p><blockquote><p>包括全局赋值变量、常量等</p></blockquote></li><li><p>数据堆段：动态分配</p></li><li><p>数据栈段：临时变量</p><blockquote><p>包括未赋值局部变量、实参传递等</p></blockquote></li></ul></blockquote></li><li><p><u>进程的<strong>组织方式</strong></u></p><ul><li><strong>链接</strong>方式：按照进程<strong>状态</strong>将PCB组织为多个<strong>队列</strong></li><li><strong>索引</strong>方式：按照进程<strong>状态</strong>将进程组织为多张<strong>索引表</strong></li></ul></li><li><p><u>进程的特征</u></p><ul><li><p>动态性（最基本）：程序的运行过程</p></li><li><p>独立性：资源分配（和接受调度）的基本单位</p><blockquote><p>进程有自己独立的地址空间，有PCB；</p><p>并发进程可能因共享变量而失去独立性</p></blockquote></li><li><p>并发性</p></li><li><p>异步性</p></li><li><p>结构性</p></li><li><p>封闭性：进程的执行速度不影响执行结果</p><blockquote><p>在<strong>并发进程共享</strong>时，可能失去封闭性</p></blockquote></li></ul></li></ul><hr><h4 id="进程的状态："><em>进程的状态：</em></h4><ul><li><p><u>状态划分</u>：为了<strong>方便对各个进程的管理</strong>，操作系统将进程合理地划分为几种<strong>状态</strong></p><ul><li><p>三种基本状态</p><ul><li><p>运行态：占有CPU并<strong>在CPU上运行</strong></p><blockquote><p>单处理系统并非任何时刻都有进程在运行，因为可能出现<strong>死锁</strong></p></blockquote></li><li><p>就绪态：<strong>具备运行条件</strong>但不占有CPU，从而不能运行</p></li><li><p>阻塞态：因等待某一事件而暂时不能运行</p><blockquote><p>可能所有进程都处于<strong>阻塞态</strong>（例如死锁），但不可能所有进程都处于<strong>就绪态</strong></p></blockquote></li></ul></li><li><p>两种始末状态</p><ul><li>创建态：正在被<strong>创建</strong>并<strong>分配资源</strong></li><li>终止态：正在从系统中<strong>撤销</strong>并<strong>回归资源</strong></li></ul></li><li><p>两种内存调度的挂起状态</p><ul><li>就绪挂起</li><li>阻塞挂起</li></ul></li></ul></li><li><p><u>进程控制</u>：进程的状态转换称为<strong>进程控制</strong>，进程控制用<strong>原语</strong>实现</p><blockquote><p>原语的本质是<strong>关中断</strong>、执行某些操作、<strong>开中断</strong></p></blockquote><ul><li>创建：分配<strong>资源</strong>，申请并初始化<strong>PCB</strong>（设置为<strong>就绪态</strong>）并将其加入<strong>就绪队列</strong></li><li>撤销：找到对应<strong>PCB</strong>，剥夺<strong>CPU</strong>，<strong>终止进程</strong>（和子进程），归还<strong>资源</strong>，<strong>删除PCB</strong></li><li>阻塞：找到对应<strong>PCB</strong>，<strong>保持运行现场</strong>，<strong>暂停</strong>进程运行，将PCB设置为“<strong>阻塞态</strong>”并插入相应<strong>阻塞队列</strong></li><li>唤醒：在<strong>阻塞队列</strong>中找到对应<strong>PCB</strong>，将PCB从中移除并设置为“<strong>就绪态</strong>”、加入<strong>就绪队列</strong></li><li>切换：将当前进程<strong>运行环境</strong>信息存入PCB，移入相应队列，选择另一个进程，更新其PCB并恢复其运行环境</li></ul></li></ul><hr><h4 id="进程通信："><em>进程通信：</em></h4><ul><li>进程通信的概念<ul><li>进程通信就是指<strong>进程之间的信息交换</strong></li><li>进程是分配系统资源的单位（包括内存地址空间），因此各进程拥有的<strong>内存地址空间相互独立</strong>，但进程之间也需要<strong>通信</strong>。</li></ul></li><li>进程通信的方法：<ul><li><u>共享存储</u>：在内存中划分出一块<strong>共享存储区</strong>，由两个进程<strong>互斥访问</strong></li><li><u>消息传递</u>：进程间以“<strong>消息(Message)</strong>”这种数据结构为单位，通过操作系统提供的**“发送消息、接收消息”两个原语**进行数据交换<ul><li>直接通信：消息直接挂到接收进程的<strong>消息缓冲队列</strong>上</li><li>间接通信：消息要先发送到**中间实体（信箱）**中，因此也称”信箱通信方式“</li></ul></li><li><u>管道通信</u>：开辟<strong>内存缓冲</strong>区进行<strong>半双工通信</strong></li></ul></li></ul><hr><h4 id="线程："><em>线程：</em></h4><ul><li><p><u>线程的概念与特点</u></p><ul><li><p>线程是一个<strong>基本的CPU执行单元</strong>，是<strong>CPU调度的基本单位</strong></p><blockquote><p>进程不再是<strong>CPU调度的基本单位</strong>了，但依然是<strong>操作系统资源分配的基本单位</strong></p></blockquote><blockquote><p>Linux系统的线程就是LWP(light weight process)，与Windows对线程的实现有较大差别</p></blockquote></li><li><p>线程<strong>提升了系统的并发度</strong>，并发所带来的<strong>系统开销减少</strong>，<strong>数据通信和共享</strong>方便</p><blockquote><p>因为线程是得到CPU时间片的基本单位，一个进程有更多的线程，得到CPU时间片的概率就会变大</p></blockquote></li></ul></li><li><p><u>线程的属性</u></p><ul><li><p>地位：<strong>CPU调度的基本单位</strong>，有自己的ID和<strong>线程控制块</strong>（TCB）</p><blockquote><p>注意，线程和进程都有<strong>控制块</strong>，但线程<strong>没有独立地址空间</strong>；</p><p>线程包含CPU现场，可以独立执行程序</p></blockquote></li><li><p>状态：三种基本状态和两种始末状态</p></li><li><p>共享：同一进程的多个线程<strong>共享进程资源（包括地址空间）</strong></p><blockquote><p>TCB中指向内存资源的<strong>三级页表是相同的</strong></p></blockquote></li><li><p>切换：不同进程的线程切换可以引起进程切换，开销较大；同一进程的线程切换开销较小</p></li></ul></li><li><p><u>线程的实现方式</u></p><ul><li><p>用户级线程：由应用程序通过<strong>线程库</strong>实现，由<strong>应用程序负责管理</strong>，在<strong>用户态</strong>下即可切换，<strong>对操作系统透明</strong></p></li><li><p>内核级线程：由<strong>操作系统直接管理</strong>，线程调度、切换需要在<strong>核心态</strong>下完成；只有内核级线程才是<strong>处理机分配的基本单位</strong>。</p><blockquote><p>对于Linux操作系统，线程对于<strong>内核</strong>来说其实就是<strong>进程</strong>，只不过是轻量级的，所谓TCB其实也是一种PCB。内核通过<strong>LWP线程号</strong>区分线程。</p></blockquote></li></ul></li><li><p><u>多线程模型</u></p><ul><li><p>多对一：多个用户级线程映射到一个内核级线程。开销小，效率高，并发度低</p><blockquote><p>这种情况下一个线程被阻塞，则其所在进程也阻塞</p></blockquote></li><li><p>一对一：一个用户级线程映射到一个内核级线程。并发能力强，成本高，开销大</p></li><li><p>多对多模型：n用户及线程映射到m个内核级线程(n&gt;=m)。平衡了<strong>并发度</strong>与<strong>系统开销</strong></p></li></ul></li></ul><h3 id="2-2-进程调度">2.2 进程调度</h3><h4 id="处理机调度概述："><em>处理机调度概述：</em></h4><ul><li><p><u>处理机调度的概念</u>：</p><ul><li>从进程<strong>队列</strong>中按照一定的算法选择一个进程并将<strong>处理机分配</strong>给它运行</li></ul></li><li><p><u>处理机调度的层次</u>：</p><ul><li><p><strong>作业</strong>调度/高级调度（后备队列）：</p><blockquote><p>只调入和调出一次</p></blockquote><ul><li>调入：从外存后备队列中挑选作业分配资源，并建立相应进程（PCB）</li><li>调出：作业运行结束后调出，撤销PCB</li></ul></li><li><p><strong>内存</strong>调度/中级调度（挂起队列）：</p><ul><li>调出：将暂时不能运行的进程调至<strong>外存</strong>，进入挂起状态；PCB仍在内存，记录进程数据位置，加入<strong>挂起队列</strong></li><li>调入：将处于挂起状态并具备运行条件的进程重新调入内存</li></ul></li><li><p><strong>进程</strong>调度/低级调度（就绪队列）：从<strong>就绪队列</strong>中选取<strong>进程</strong>将处理机分配给它，是最基本的调度，频率很高</p></li></ul></li><li><p><u>处理机调度的方式</u>：</p><ul><li>进程（调度）切换主要包括对<strong>原进程数据的保存</strong>和<strong>新进程数据的恢复</strong></li><li>需要考虑调度问题的时机：<ul><li>当前运行的进程<strong>主动放弃</strong>处理机（非抢占式和抢占式）</li><li><strong>新的进程进入</strong>就绪队列（抢占式）</li></ul></li><li>不能调度与切换的时机：<ul><li>处理<strong>中断</strong></li><li><strong>内核程序临界区</strong></li><li><strong>原子操作</strong></li></ul></li></ul></li></ul><hr><h4 id="调度算法评价指标："><em>调度算法评价指标：</em></h4><ul><li><u>CPU利用率</u>：CPU“<strong>忙碌</strong>”的时间占<strong>总时间</strong>的比例</li><li><u>系统吞吐量</u>：单位时间内完成作业的数量</li><li><u>周转时间</u>：<ul><li>从<strong>作业被提交给系统</strong>开始，到<strong>作业完成</strong>为止的时间间隔</li><li>带权周转时间：<strong>周转时间</strong>除以作业实际<strong>运行时间</strong></li></ul></li><li><u>等待时间</u>：进程/作业处于<strong>等待处理机</strong>状态时间之和</li><li><u>响应时间</u>：从用户提交请求到<strong>首次产生响应</strong>所用的时间</li></ul><hr><h4 id="注重周转时间调度算法："><em>注重周转时间调度算法：</em></h4><ul><li><p><u>先来先服务（FCFS）</u>：按照作业/进程<strong>到达的先后顺序</strong>进行服务（非抢占）</p><blockquote><p><strong>等待时间</strong>最长的优先得到服务</p></blockquote><ul><li><p>优点：公平、算法实现简单</p></li><li><p>缺点：对长作业/进程后面的短作业/进程不利</p><blockquote><p>FCFS算法<strong>对长作业有利</strong>，对短作业不利</p><blockquote><p>注意，这里的长指的是<strong>CPU计算的时间长</strong>，即<strong>CPU密集型</strong>，而不是指I/O时间很长（即<strong>I/O密集型</strong>），毕竟I/O阻塞的时候是会放弃CPU的</p></blockquote></blockquote></li></ul></li><li><p><u>短作业/进程优先（SJF/SPF）</u>：<strong>最短</strong>的作业/进程优先得到服务（抢占、非抢占）</p><blockquote><p><strong>运行时间</strong>最短的优先得到服务</p></blockquote><blockquote><p>抢占式版本的又称“最短剩余时间优先算法（SRTN）”</p></blockquote><ul><li><p>优点：平均等待时间和平均周转时间较短</p><blockquote><p>在注重响应时间的三个算法中是最短的</p></blockquote></li><li><p>缺点：不公平。对短作业有利，对长作业不利。可能产生饥饿现象。</p></li></ul></li><li><p><u>高响应比优先（HRRN）</u>：<strong>响应比</strong>最高的作业/进程优先得到服务（非抢占）</p><blockquote><p><strong>等待时间</strong>长、<strong>运行时间</strong>短的优先得到服务</p></blockquote><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>响应比</mtext><mo>=</mo><mfrac><mtext>等待时间</mtext><mtext>要求服务时间</mtext></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">响应比=\frac{等待时间}{要求服务时间}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">响应比</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">要求服务时间</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">等待时间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p></blockquote><ul><li>优点：综合考虑了等待时间和运行时间，避免短作业长时间等待和长作业饥饿的问题</li></ul></li></ul><hr><h4 id="注重响应时间的调度算法："><em>注重响应时间的调度算法：</em></h4><blockquote><p>更适应于交互式系统</p></blockquote><ul><li><p><u>时间片轮转调度算法（RR）</u>：按照到达顺序（就绪队列）<strong>轮流</strong>让<strong>各进程</strong>执行一个时间片，未执行完则重新放到队列尾排队（抢占）</p><ul><li><p>优点：公平；<strong>响应快</strong>，适用于<strong>分时操作系统</strong></p></li><li><p>缺点：高频率进程切换，开销较大；无法区分任务<strong>紧急程度</strong></p></li><li><p>时间片大小问题：</p><ul><li>时间片过大：增大进程<strong>响应时间</strong>，可能退化为 FCFS</li><li>时间片过小：进程切换过于频繁，增大开销</li></ul></li></ul></li><li><p><u>优先级调度算法</u>：选择<strong>优先级最高</strong>的作业/进程（抢占、非抢占）</p><ul><li>优点：可区分紧急程度和重要程度，适用于<strong>实时操作系统</strong>。</li><li>缺点：低优先级可能饥饿</li></ul><blockquote><p>设置优先级的例子：</p><ul><li><p><strong>系统</strong>进程高于用户进程</p></li><li><p><strong>前台</strong>进程高于后台进程</p></li><li><p><strong>I/O繁忙</strong>型（I/O密集型）进程高于计算型（CPU密集型）进程</p><blockquote><p>I/O设备和CPU可以并行，优先让I/O繁忙设备运行，可以让I/O设备更早投入工作，提升资源利用率和系统吞吐量</p></blockquote></li><li><p><strong>等待时间长</strong>或刚运行不久的进程优先级较高</p></li><li><p>运行时间长的进程或刚运行完的进程优先级较低</p></li></ul></blockquote></li><li><p><u>多级多反馈队列调度算法</u>：（抢占）</p><ul><li>算法规则<ul><li>设置多级就绪队列，<strong>优先级</strong>从高到低，<strong>时间片</strong>从小到大</li><li>新进程先进入<strong>高优先级</strong>队列，用完时间片进入<strong>次高优先级</strong>队列，若已经是最低优先级则回到队尾</li><li>高优先级队列为空时才会给次高优先级分配时间片</li></ul></li><li>优点：<ul><li>公平（FCFS的优点）</li><li>短进程周转时间小（SPF的优点）</li><li>响应快（RR的优点）</li><li>可设置优先级</li></ul></li><li>缺点：会导致饥饿</li></ul></li></ul><blockquote><p><strong>进程调度时间计算</strong>类问题通用解法：<strong>广义甘特图</strong></p><ul><li>横轴：时间</li><li>纵轴：各进程</li></ul></blockquote><h3 id="2-3-进程互斥与同步">2.3 进程互斥与同步</h3><h4 id="互斥同步的概念与实现："><em>互斥同步的概念与实现：</em></h4><ul><li><p><u>概念</u></p><ul><li><p><u>临界资源</u>：一次仅允许有一个进程使用的<strong>共享</strong>资源</p><blockquote><p>例如打印机、共享变量、共享缓冲区、公用队列；</p><p>临界资源与其他<strong>共享资源</strong>的区别在于，同一时间内是否允许<strong>多进程并发访问</strong></p></blockquote></li><li><p><u>临界区</u>：并发进程访问<strong>临界资源</strong>的<strong>代码段</strong></p></li><li><p><u>Reentry code / Pure code</u>: The code allowing <strong>multiple process to access</strong> at the same time,  which <strong>can’t be modified</strong> and its result isn’t affected by interrupt when executing</p></li><li><p><u>同步</u>：亦称<strong>直接制约</strong>关系，是指多个进程需要<strong>协调工作次序</strong>而产生制约关系</p></li><li><p><u>互斥</u>：亦称<strong>间接制约</strong>关系，是指多个进程<strong>对临界资源的访问是互相排斥</strong>的</p></li></ul></li><li><p><u>实现原则</u></p><ul><li>空闲让进</li><li>忙则等待</li><li>有限等待</li><li>让权等待</li></ul></li><li><p><u>软件实现</u></p><ul><li><p><u>单标志法</u>：</p><ul><li>思想：每个进程进入临界区的权限由<strong>其他进程在使用完临界区后</strong>赋予</li><li>缺点：可能违反“<strong>空闲让进</strong>”和“<strong>有限等待</strong>”，原因在于<strong>给其他进程赋予权限</strong>的进程可能长期不使用临界区；违反“让权等待”</li></ul></li><li><p><u>双标志先检查法</u>：</p><ul><li>思想：先<strong>通过标记检查其他进程</strong>是否要进入临界区，如果要则<strong>循环等待</strong>，之后再<strong>标记自己</strong>想进入临界区</li><li>缺点：可能违反“<strong>忙则等待</strong>”，原因在于**“检查”和“上锁”**不是原子操作；违反“让权等待”</li></ul></li><li><p><u>双标志后检查法</u>：</p><ul><li>思想：先<strong>标记自己</strong>想进入临界区，再<strong>通过标记检查其他进程</strong>是否要进入临界区，如果要则<strong>循环等待</strong></li><li>缺点：可能违反“<strong>空闲让进</strong>”和“<strong>有限等待</strong>”，从而导致饥饿，原因在于**“上锁”和“检查”**不是原子操作；违反“让权等待”</li></ul></li><li><p><u>Peterson算法</u></p><ul><li><p>思想：</p><ol><li><p>标记自己<strong>想进入</strong>临界区</p><blockquote><p>因为接下来要“谦让”，也就是执行权的一部分要由其他进程“谦让”给予，但需其他进程可能长时间不访问临界区，所以要提前给自己”留后手“</p></blockquote></li><li><p>表示“<strong>谦让</strong>”：将**<code>turn</code>轮流标记**设置为其他进程</p></li><li><p>通过标记检查，如果有<strong>其他进程想进</strong>且<strong>轮流标记</strong>没有到自己，则等待</p></li><li><p>访问完临界区后标记自己<strong>不想进入</strong>临界区</p></li></ol></li><li><p>优点：符合“空闲让进”、“忙则等待”、“有限等待”</p></li><li><p>缺点：违反“让权等待”</p></li></ul></li></ul></li><li><p><u>硬件实现</u></p><ul><li><u>中断屏蔽</u>：<ul><li>思想：在访问临界区前后<strong>关开中断</strong>，避免<strong>进程切换</strong></li><li>优点：简单高效</li><li>缺点：不适用于多处理机；需要开关中断指令需要运行在<strong>内核态</strong></li></ul></li><li><u>TestAndSet指令（TS、TSL）</u>：<ul><li>思想：访问临界区前**“上锁”并”检查“之前是否已经有锁**（这个操作由硬件完成，不可中断），若有则循环 TSL 等待；<strong>访问临界区后”解锁“</strong></li><li>优点：实现简单；适用于多处理机（涉及到总线相关知识）</li><li>缺点：违反“让权等待”，循环等待时会占用 CPU 循环执行 TSL 指令</li></ul></li><li><u>Swap指令（Exchange、XCHG）</u>：<ul><li>思想：将当前锁的状态<code>lock</code>交换到自己手上（<code>old</code>），同时<code>lock</code>状态被设置为**“上锁”**，看<code>old</code>是否无锁，若有则循环 XCHG 等待；<strong>访问临界区后设置<code>lock</code>状态为”解锁“</strong></li><li>优点：实现简单；适用于多处理机</li><li>缺点：违反“让权等待”，循环等待时会占用 CPU 循环执行 XCHG 指令</li></ul></li></ul></li></ul><h4 id="信号量机制与经典问题："><em>信号量机制与经典问题：</em></h4><ul><li><p>信号量基础知识</p><ul><li><p><u>信号量</u>：<strong>表示某种系统资源数量</strong>的变量，用于保证关键代码段不被<strong>并发调用</strong></p><ul><li>等于 0 代表当前无可用资源</li><li>小于 0 代表有进程因申请当前空缺的资源而<strong>让权等待</strong></li></ul></li><li><p><u>原语</u>：<strong>执行时不可被中断</strong>的特殊程序 / 指令序列（由开中断、关中断实现，但这<strong>不是系统调用</strong>）</p><ul><li><p>wait 原语（P 操作）：“申请”资源。即让信号量<strong>减 1</strong> ，若减 1 后<strong>大于等于 0</strong>，则进入临界区，否则<strong>让权等待</strong>，直到被 signal 操作选中<strong>唤醒</strong>再进入临界区</p><blockquote><p>被唤醒后不必让信号量再加 1</p></blockquote></li><li><p>signal 原语（V 操作）：“释放”资源。即让信号量<strong>加 1</strong> ，并唤醒同一信号量上<strong>让权等待</strong>的一个进程</p></li></ul><blockquote><p>记录型信号量的wait原语内部有block原语，signal原语内部有wakeup原语；</p><p>PV 操作是一种低级的<strong>进程通信原语</strong></p></blockquote></li><li><p>用于实现<strong>进程互斥</strong>：设置<strong>互斥信号量</strong>（mutex），初值为 1 ，在临界前后执行PV操作</p></li><li><p>用于实现<strong>进程同步</strong>：设置<strong>同步信号量</strong>，初值由具体情况确定，前V后P</p></li></ul></li><li><p>经典问题及其解决思路</p><ul><li><p><u>生产者与消费者问题</u></p><ul><li>互斥：缓冲区</li><li>同步：缓冲区空时生产者先消费者后；缓冲区满时消费者先生产者后</li></ul></li><li><p><u>多生产者与多消费者问题</u></p><ul><li>互斥：缓冲区</li><li>同步：缓冲区空时先生产某种产品对应消费者才能消费；缓冲区满时先消费才能生产</li></ul></li><li><p><u>吸烟者问题</u></p><ul><li>特点：可以生产<strong>多种产品</strong>的<strong>单生产者-多消费者</strong>、有“<strong>轮流</strong>”的要求</li><li>互斥：桌子（可以不设置）</li><li>同步：桌子空时先放才能拿；桌子满时先拿才能放</li></ul></li><li><p><u>读者-写者问题</u></p><ul><li><p>特点：读写互斥但读之间不互斥</p></li><li><p>写-写互斥：<strong><code>rw</code>同步信号量</strong></p></li><li><p>写-读互斥：<strong><code>rw</code>同步信号量</strong></p></li><li><p>读-读不互斥：第一个来读的加<code>rw</code>锁，最后一个读完的解<code>rw</code>锁；设置<strong>计数器变量</strong>实现这一点，通过**<code>mutex</code>互斥信号量<strong>保证读进程对计数器的</strong>判断和更改**是不可中断的</p><blockquote><p>但这样是<strong>约束不对等的加锁</strong>，源源不断的读进程会使<strong>写进程饥饿</strong></p></blockquote></li><li><p>读-写公平：设置**<code>w</code>同步信号量<strong>约束读写进程的</strong><code>P(rw)</code>操作**，对于读进程，是约束包<strong>判断和更改计数器</strong>在内的整个过程</p></li></ul></li><li><p><u>哲学家进餐</u></p><ul><li>特点：构造出了经典的<strong>循环等待</strong>场景</li><li>互斥：同一根筷子</li><li>防止死锁：让哲学家<strong>拿起一双筷子的操作是原子性的</strong></li></ul></li></ul></li></ul><h4 id="管程："><em>管程：</em></h4><ul><li><p>管程的<u>概念与组成</u></p><ul><li>管程是一种特殊的<strong>软件模块</strong>，由以下三部分组成：<ul><li><strong>共享数据结构 / 共享变量说明</strong></li><li><strong>对数据结构的操作（函数）</strong></li><li>对共享数据的<strong>初始化</strong>操作</li></ul></li></ul></li><li><p>管程的<u>特点</u></p><ul><li>互斥：管程<strong>每次只允许一个进程</strong>执行对数据结构进行<strong>操作</strong></li><li>特定入口：只能通过<strong>管程内部定义的过程/函数</strong>来操作</li><li>存在形式：管程是被进程调用的语法范围，<strong>无法创建和撤销</strong></li></ul></li><li><p>管程的<u>实现</u></p><ul><li>互斥特性由<strong>编译器</strong>负责实现</li><li>同步特性由<strong>条件变量</strong>和<strong>等待唤醒操作</strong>实现</li></ul></li></ul><h4 id="Deadlock："><em>Deadlock</em>：</h4><ul><li><p><u>Concept</u>: A phenomenon where processes wait to <strong>compete for resources</strong> held by other processes each other causing all processes <strong>block</strong> in <strong>concurrent</strong> context</p><ul><li><p>Deadlock: at least two processes, blocking</p></li><li><p>Hunger: maybe only one process, blocking or runnable</p></li><li><p>Infinite loop: maybe only one process</p><blockquote><p>Deadlock and hunger is the problem of <strong>OS(manager)</strong>, but infinite loop is the problem of the one <strong>being managed</strong></p></blockquote></li></ul></li><li><p><u>Creation of deadlock</u>:</p><ul><li><p>Necessary <strong>condition</strong>:</p><ul><li><p><em><strong>Mutually exclusive</strong></em>: compete for exclusively used resources</p></li><li><p><em><strong>No deprivation</strong></em>: Resources <strong>held</strong> by a process shouldn’t be deprived by other processed until <strong>finishing</strong> use</p></li><li><p><em><strong>Request and hold</strong></em>: A process doesn’t release held resources while requesting new resources</p></li><li><p><em><strong>Loop to wait</strong></em>: A chain for loop awaiting resources exists</p><blockquote><p>The top three conditions are easily satisfied in many contexts, so the fourth condition is key</p></blockquote></li></ul></li><li><p><strong>Timing</strong>:</p><ul><li>Compete for <strong>system resources</strong>, improper allocation of exclusive resources</li><li>Wrong <strong>sequence</strong> of processes executing</li><li>Misuse of <strong>semaphore</strong></li></ul><blockquote><p>Unreasonable <strong>allocation</strong> of inalienable resources</p></blockquote></li></ul></li><li><p><u>Handling strategies of deadlock</u>: (sorted by system <strong>concurrency</strong> in <strong>descending</strong> order)</p><ul><li><p><em><strong>Ignore</strong></em>: When deadlock occurs, reboot the system</p></li><li><p><em><strong>Detect</strong></em> and <strong>resolve</strong>:</p><ul><li>能检测的<strong>前提</strong>：<ul><li>有某种<strong>数据结构</strong>保存资源的<strong>请求和分配信息</strong></li><li>有一种检测系统是否进入死锁状态的<strong>算法</strong></li></ul></li><li>数据结构：<em>资源分配图</em><ul><li><strong>进程</strong>结点：圆形，对应一个进程</li><li><strong>资源</strong>结点：矩形，对应一类资源，结点中可以记录该类资源<strong>总量</strong></li><li><strong>进程</strong>结点指向<strong>资源</strong>结点的边：进程<strong>还需要</strong>申请的资源（每条边代表一个）</li><li><strong>资源</strong>结点指向<strong>进程</strong>结点的边：已经分配给进程的资源（每条边代表一个）</li></ul></li><li><em>死锁定理</em> / 算法：如果某时刻系统的资源分配图是<strong>不可完全简化</strong>的，那么此时系统死锁（死锁定理）<ul><li><strong>能执行</strong>的进程（已申请到<strong>所有所需资源</strong>）或能<strong>分配现有资源</strong>使之<strong>能执行</strong>的进程先执行，执行完后<strong>归还</strong>系统资源，消除相应的边</li><li>继续寻找能执行的进程，直到不再能找到或消除了所有的边</li><li>如果能消除所有边，就称该资源分配图是可完全简化的</li></ul></li><li>Resolve:<ul><li>资源<strong>剥夺</strong></li><li><strong>撤销</strong>进程</li><li>进程<strong>回退</strong></li></ul></li></ul></li><li><p><em><strong>Avoid</strong></em>: a <strong>dynamic</strong> strategy</p><ul><li><p>银行家算法思想：在进程申请资源时，预判这次分配后会不会进入<strong>不安全状态</strong>，如果会则阻塞进程</p><ul><li><p>不安全状态：找不到安全序列</p><blockquote><p>Deadlock belongs to unsafety status</p></blockquote></li><li><p>安全序列：系统按照这个序列分配资源，则每个进程都能顺利完成</p></li></ul></li><li><p>银行家算法步骤</p><ol><li><p>检查此次申请<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>q</mi><mi>u</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Request</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">es</span><span class="mord mathnormal">t</span></span></span></span>是否超过之前声明的<strong>最大需求数</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>e</mi><mi>e</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Need</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">ee</span><span class="mord mathnormal">d</span></span></span></span>，如果超过认为<strong>出错</strong></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>e</mi><mi>e</mi><mi>d</mi><mo>=</mo><mi>M</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>A</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Need=Max-Allocation</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">ee</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord mathnormal">oc</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span></span></span></p></blockquote></li><li><p>检查系统剩余可用资源<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>v</mi><mi>a</mi><mi>i</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Available</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">ai</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span></span></span></span>是否能<strong>满足这次请求</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>q</mi><mi>u</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Request</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">es</span><span class="mord mathnormal">t</span></span></span></span>，不能则<strong>阻塞进程</strong></p></li><li><p><strong>试探分配</strong>，更改数据结构</p></li><li><p>用<strong>安全性算法</strong>检查分配后是否会导致系统进入不安全状态</p></li></ol></li><li><p>安全性算法步骤</p><ul><li>检查当前剩余可用资源<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>o</mi><mi>r</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">Work</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>是否能满足某个（某些）进程的最大需求，如果可以则将该进程（这些进程）加入<strong>安全序列</strong>，并回收其全部资源</li><li>重复上述过程，直至找到完整的<strong>安全序列</strong>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>o</mi><mi>r</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">Work</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>无法满足现有的任何进程</li></ul></li></ul></li><li><p><em><strong>Prevent</strong></em>: a <strong>static</strong> strategy</p><ul><li><p><em>Prevent <strong>mutex</strong>:</em> Transform mutex into <strong>concurrently shared resource</strong></p><ul><li>Disadvantages: Poor <strong>feasibility</strong>. Mutex can’t be destroyed most of time</li></ul><blockquote><p>For example: <strong>SPOOLing</strong> technology</p></blockquote></li><li><p><em>Prevent no <strong>deprivation</strong>:</em></p><ul><li><p>Plan one: <strong>Release</strong> all held resources immediately when requesting for resources can’t be satisfied</p></li><li><p>Plan two: <strong>Deprive</strong> required resources held by other processes with the assistance of OS when requesting for held resources</p><blockquote><p>In this way, <strong>priority</strong> of process will be taken into account</p></blockquote></li><li><p>Disadvantages: complex <strong>implementation</strong>; disabling <strong>original work</strong>; more <strong>cost</strong> to require and release; <strong>hunger</strong></p></li></ul></li><li><p><em>Prevent <strong>require</strong> and <strong>hold</strong>:</em> Hold all required resources <strong>before running</strong> until over</p><ul><li>Disadvantages: low resource <strong>utilization</strong>; hunger.</li></ul></li><li><p><em>Prevent <strong>loop</strong> to wait:</em> Number resources. Each process require resources by ascending order of resource number. (Sequential resource allocation)</p><ul><li>Disadvantages: inconvenient to add <strong>new devices</strong>; different <strong>orders</strong> between resource number and process using resources, causing a <strong>waste</strong> of resources; troublesome for user <strong>programming</strong>, poor <strong>portability</strong> (having to follow resource number order to require resources)</li></ul><blockquote><p>Principle: <strong>Anytime</strong> there is a <strong>secure sequence</strong> beginning from the process holding the <strong>biggest</strong>-numbered resource. (There is no chance for process <strong>holding bigger</strong>-numbered resource to <strong>require smaller</strong>-numbered resource)</p></blockquote></li></ul></li></ul></li></ul><h2 id="3-内存管理">3 内存管理</h2><h3 id="3-1-内存管理概述">3.1 内存管理概述</h3><h4 id="内存和地址概述："><em>内存和地址概述：</em></h4><ul><li><p><u>内存概述</u></p><ul><li><p>概念：内存是用于<strong>存放数据的硬件</strong>。</p></li><li><p>主要应用：程序要放到<strong>内存</strong>中才能被<strong>CPU</strong>直接执行。</p></li><li><p>组织形式：内存通常从0开始顺序编址，每号地址对应一个存储单元</p><ul><li><p>按字节编址：每个存储单元大小为1字节</p></li><li><p>按字编址：每个存储单元大小为1个字</p><blockquote><p>字长由计算机决定</p></blockquote></li></ul></li></ul></li><li><p><u>地址与地址空间概述</u></p><ul><li><p>虚拟地址/ <em>Linear Address</em>：用户编程时使用的地址，一般指<strong>段名+段内相对地址</strong></p></li><li><p>逻辑地址/相对地址：用户编程时使用的地址，一般指<strong>段内相对地址</strong></p></li><li><p>物理地址/绝对地址：实际物理内存的地址</p></li><li><p>逻辑地址空间 / Linear address space：一般指各<strong>程序段</strong>所有<strong>逻辑地址</strong>的集合</p><blockquote><p>实际应用中，虚拟地址与逻辑地址常常不加区分</p></blockquote></li><li><p>物理地址空间：实际可访问/ <em>CPU address bus</em> 的<strong>物理内存地址</strong>集合</p></li></ul></li><li><p><u>编译、链接、装入</u></p><ul><li><p>概念</p><ul><li><p>编译：<u>编译程序</u>将<strong>用户源代码</strong>编译成若干个<strong>目标模块</strong></p><blockquote><p>编译时会形成相对该模块的<strong>逻辑地址</strong></p></blockquote></li><li><p>链接：<u>链接程序</u>将各目标模块、<strong>库函数</strong>链接在一起，形成的<strong>装入模块</strong></p><blockquote><p>装入模块就是一种<strong>可执行模块/文件</strong></p><p>链接器完成重定位，形成整个程序完整的<strong>逻辑地址空间</strong></p></blockquote></li><li><p>装入：<u>装入程序</u>将装入模块装入内存运行</p></li></ul></li><li><p>链接的三种方式</p><ul><li><p>静态链接：在<strong>程序运行前</strong>将各目标模块、库函数链接成<strong>完整的装入模块</strong></p></li><li><p>装入时动态链接：在各目标模块<strong>装入内存时</strong>链接库函数</p></li><li><p>运行时动态链接：程序<strong>运行时需要</strong>目标模块再链接库函数</p><blockquote><p>便于库函数的<strong>修改和更新</strong>，便于目标模块的<strong>共享</strong></p></blockquote></li></ul></li><li><p>装入的三种方式</p><ul><li><p><strong>绝对</strong>装入：直接按照编译时产生的<strong>绝对地址</strong>将程序和数据装入内存</p><blockquote><p>绝对装入只适用于<strong>单道程序环境</strong></p></blockquote></li><li><p><strong>静态</strong>重定位：又称<strong>可重定位</strong>装入，指令和数据使用<strong>逻辑地址</strong>，由<strong>装入程序</strong>在装入时完成逻辑地址到<strong>物理地址</strong>的转换</p><blockquote><p>静态重定位装入时必须分配<strong>全部连续空间</strong>，模块装入内存后，运行期间<strong>无法申请其他内存、无法移动</strong></p></blockquote><blockquote><p>用于早期<strong>多道批处理系统</strong>，只适用于固定分区分配（和单一连续分配）</p></blockquote></li><li><p><strong>动态</strong>重定位：又称<strong>动态运行时</strong>装入，指令和数据使用<strong>逻辑地址</strong>，在程序<strong>运行时</strong>借助<strong>重定位寄存器</strong>完成逻辑地址到<strong>物理地址</strong>的转换</p><blockquote><p>重定位寄存器/基址寄存器：存放装入模块的<strong>起始物理地址</strong></p><p>整个系统中<strong>只有一个</strong>，硬件支持加快<strong>地址转换</strong>速度</p></blockquote><blockquote><p>动态重定位允许<strong>分配不连续内存</strong>，允许动态地<strong>部分装入和申请内存</strong>，允许模块<strong>在内存中移动</strong>，便于<strong>共享和虚拟内存</strong>的实现</p></blockquote></li></ul></li></ul></li></ul><hr><h4 id="内存管理的主要内容："><em>内存管理的主要内容：</em></h4><ul><li><p><u>内存的分配与回收</u>：操作系统负责<strong>内存空间的分配与回收</strong></p><ul><li><p>连续分配</p><ul><li>单一连续分配</li><li>固定分区分配</li><li>动态分区分配</li></ul></li><li><p>非连续分配</p><ul><li>基本分页存储管理</li><li>基本分段存储管理</li><li>基本段页式存储管理</li></ul></li></ul></li><li><p><u>内存空间的扩充</u>：操作系统需要提供某种技术从逻辑上<strong>对内存空间进行扩充</strong></p><ul><li>覆盖技术</li><li>交换技术</li><li>虚拟存储技术</li></ul></li><li><p><u>地址转换</u>：操作系统需要提供<strong>地址转换功能</strong>，负责程序的<strong>逻辑地址</strong>与<strong>物理地址</strong>的转换</p></li><li><p><u>存储保护</u>：操作系统需要提供<strong>内存保护</strong>功能，保证各进程在各自存储空间内运行，互不干扰</p><ul><li><p>采用<strong>上下限寄存器</strong>，存放进程的<strong>上下限地址</strong></p></li><li><p>采用<strong>基址寄存器和界地址寄存器</strong>，分别存放<strong>起始物理地址</strong>和<strong>最大逻辑地址</strong></p><blockquote><p>基址寄存器也称<strong>重定位寄存器</strong>，界地址寄存器也称<strong>限长寄存器</strong></p></blockquote></li></ul></li></ul><h3 id="3-2-连续分配">3.2 连续分配</h3><blockquote><p>连续分配：为用户进程分配的只能是<strong>连续的内存空间</strong></p></blockquote><h4 id="单一连续分配："><em>单一连续分配：</em></h4><ul><li><p><u>内存划分</u>：单一连续分配方式中内存被分为<strong>系统区和用户区</strong></p><ul><li>系统区：位于内存的低地址部分，存放<strong>操作系统相关数据</strong></li><li>用户区：存放<strong>用户进程相关数据</strong>，只允许<strong>一道用户程序独占</strong>整个用户空间</li></ul></li><li><p><u>单一连续分配的优点</u>：</p><ul><li>实现简单</li><li>无外部碎片</li><li>可以用覆盖技术扩充内存</li><li>不一定需要内存保护</li></ul></li><li><p><u>单一连续分配的缺点</u>：</p><ul><li><p>只能用于单用户、单任务操作系统</p></li><li><p>有内部碎片</p><blockquote><p>内部碎片：分配给进程的内存空间中没有被利用的部分</p></blockquote></li><li><p>存储器利用率极低</p></li></ul></li></ul><hr><h4 id="固定分区分配："><em>固定分区分配：</em></h4><ul><li>将整个用户空间划分为若干个<strong>固定大小的分区</strong>，每个分区中装入一道作业，支持<strong>多道程序</strong>并发</li><li><u>分区<strong>策略</strong></u>：<ul><li>分区大小相等：缺乏灵活性，适合用于一台计算机控制多个相同对象的场合</li><li>分区大小不等：增加了灵活性，可以根据不同大小的进程需求划分空间</li></ul></li><li><u><strong>分区说明表</strong></u>：用于管理分区，记录各分区的分配与回收<ul><li>字段：分区号、分区大小、起始地址、状态（已分配和未分配）</li></ul></li><li><u>固定分区分配<strong>优缺点</strong></u>：<ul><li>优点：实现简单，无<strong>外部碎片</strong></li><li>缺点：<ul><li>可能无法满足<strong>大进程</strong>需求，不得不采用低性能的<strong>覆盖</strong>技术</li><li>会产生<strong>内部碎片</strong>，内存利用率低</li></ul></li></ul></li></ul><hr><h4 id="动态分区分配："><em>动态分区分配：</em></h4><ul><li><p>又称为<strong>可变分区分配</strong>，不预先划分内存分区，而是在进程装入内存时<strong>根据进程大小动态建立分区</strong>，因此系统分区的<strong>大小和数目是可变的</strong>。</p></li><li><p><u>分区分配中的<strong>数据结构</strong></u></p><ul><li>空闲分区表：<ul><li>字段：分区号、分区大小、起始地址、状态（已分配和未分配）</li></ul></li><li>空闲分区链：<ul><li>将每个单独的内存分区视作链表的一个结点</li><li>结点的起始部分：前向指针、分区大小等信息</li><li>结点的末尾部分：后向指针</li></ul></li></ul></li><li><p><u>分配与回收的<strong>具体操作</strong></u></p><ul><li>分配：根据分配算法选择空闲区，再<strong>更新空闲分配表</strong><ul><li>只<strong>占用部分</strong>空闲区：<strong>修改</strong>表项</li><li>刚好<strong>填满</strong>空闲区：<strong>删除</strong>表项</li></ul></li><li>回收：回收进程并<strong>更新空闲分配表</strong><ul><li>有相邻空闲分区：<ul><li>只有前面有或只有后面有：修改表项</li><li>前后均有：合并表项</li></ul></li><li>无相邻空闲分区：<ul><li>新增表项</li></ul></li></ul></li></ul></li><li><p><strong><u>动态分区分配算法</u></strong>：</p><ul><li><p>首次适应算法（First Fit）</p><ul><li>思想：从<strong>低地址向高地址</strong>查找第一个满足大小的空闲分区</li><li>实现：空闲分区表以<strong>地址递增</strong>次序排列，每次分配时顺序查表</li><li>优点：综合性能好；对空闲分区表操作简单，<strong>算法开销小</strong>；可以保留高地址部分大空闲区</li><li>缺点：低地址部分易产生<strong>外部碎片</strong></li></ul></li><li><p>最佳适应算法（Best Fit）</p><ul><li>思想：优先使用<strong>更小的空闲区</strong>分配</li><li>实现：空闲分区表按<strong>容量递增</strong>次序链接，每次分配时顺序查表</li><li>优点：保留更多<strong>大空闲区</strong>，满足大进程需求</li><li>缺点：容易残留更多<strong>外部碎片</strong>；回收分区后要<strong>排序</strong>空闲分区表，<strong>算法开销大</strong></li></ul></li><li><p>最坏适应算法（Worst Fit）</p><ul><li>思想：优先使用<strong>更大的空闲区</strong>分配</li><li>实现：空闲分区表按<strong>容量递减</strong>次序链接，每次分配时顺序查表</li><li>优点：可以减少<strong>外部碎片</strong></li><li>缺点：难以保留<strong>大空闲区</strong>，不利于大进程需求；回收分区后要<strong>排序</strong>空闲分区表，<strong>算法开销大</strong></li></ul></li><li><p>邻近适应算法（Next Fit）</p><ul><li>思想：在<strong>首次适应</strong>算法的基础上，每次从<strong>上次查找结束</strong>位置开始<strong>循环查找</strong></li><li>实现：空闲分区表以<strong>地址递增</strong>次序排列成<strong>循环表</strong>，每次分配时<strong>从上一次位置开始循环查表</strong></li><li>优点：对空闲分区表操作简单，<strong>算法开销小</strong>；减少低地址部分的<strong>外部碎片</strong></li><li>缺点：难以保留<strong>大空闲区</strong>，不利于大进程需求</li></ul></li></ul></li><li><p><u>动态分区分配的<strong>优缺点</strong></u></p><ul><li><p>优点：无<strong>内部碎片</strong>，分配出的内存利用率高</p></li><li><p>缺点：有<strong>外部碎片</strong>，会产生过小的空闲分区而难以分配</p><blockquote><p>可以通过<strong>紧凑（拼凑，Compaction）<strong>技术解决外部碎片，这需要结合</strong>动态重定位装入</strong>移动进程块位置，并修改PCB中的进程起始地址，以及重定位寄存器/基址寄存器</p></blockquote></li></ul></li></ul><h3 id="3-3-分页分段">3.3 分页分段</h3><blockquote><p>离散分配：为用户进程分配的可以是<strong>分散的内存空间</strong></p></blockquote><h4 id="基本分页存储管理："><em>基本分页存储管理：</em></h4><ul><li><p><u>基本思想</u>：把<strong>内存</strong>划分成相等的<strong>分区</strong>，再按照同样大小将<strong>进程</strong>拆分成<strong>进程块</strong></p><ul><li><p>划分出的内存分区称为<strong>页框</strong>，或页帧、内存块、物理块；</p><p>每个页框都有编号，称为<strong>页框号</strong>，或页帧号、内存块号、物理块号</p></li><li><p>与页框大小相等的进程块称为<strong>页</strong>或页面；</p><p>每个页都有编号，称为<strong>页号</strong></p></li></ul><blockquote><p>进程被拆分的最后一个页面可能小于页框大小，因此页框不能太大，否则会产生过大的<strong>内部碎片</strong>。但这种方式一定不会产生<strong>外部碎片</strong>。</p></blockquote></li><li><p><u>页表与地址结构</u></p><ul><li><p>页表：操作系统为每个进程建立一张页表，记录<strong>进程每个页面在物理内存中的内存块号</strong></p><blockquote><p>页表本身也存储于内存，单级页表<strong>顺序存储</strong>，多级页表可以<strong>离散存储</strong></p></blockquote></li><li><p>页表项：每个页表项<strong>长度相等</strong>，由页号和块号组成</p><ul><li>页号：进程页号，隐含的，相当于逻辑上的数组<strong>索引</strong></li><li>块号：进程页实际存放到的<strong>内存块号</strong>。其位数由<strong>内存块的数量</strong>决定</li></ul><blockquote><p><strong>页表项的大小</strong>尽量能整除页框大小，这样存放页表时可以减少<strong>内部碎片</strong></p></blockquote></li><li><p>逻辑地址结构：</p><ul><li><p><strong>页号P</strong>：逻辑地址所在页的<strong>页号</strong>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>页号</mtext><mo>=</mo><mtext>逻辑地址</mtext><mi mathvariant="normal">/</mi><mtext>页面长度</mtext></mrow><annotation encoding="application/x-tex">页号=逻辑地址/页面长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">页号</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">逻辑地址</span><span class="mord">/</span><span class="mord cjk_fallback">页面长度</span></span></span></span></p><p>利用<strong>页表</strong>，以页号作为<strong>索引</strong>，查寻块号，计算出进程页在内存中的<strong>起始地址</strong></p><p>页号P的位数对应于进程的<strong>最大页面数</strong></p></li><li><p><strong>页内偏移量W</strong>：逻辑地址在页内的<strong>偏移量</strong>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>页内偏移量</mtext><mo>=</mo><mtext>逻辑地址</mtext></mrow><annotation encoding="application/x-tex">页内偏移量=逻辑地址%页面长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">页内偏移量</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">逻辑地址</span></span></span></span></p><p>页内偏移量W的位数对应于<strong>页面大小</strong></p></li></ul><blockquote><p>页式管理中地址是<strong>一维</strong>的，程序员只要给出<strong>一个逻辑地址助记符</strong>就可以自动计算出<strong>物理地址</strong></p></blockquote></li><li><p><strong>多级</strong>页表/页目录表：将页表<strong>拆分并离散存放</strong>至内存，并用页目录表统计</p><blockquote><p>单级页表需要整体<strong>连续存储</strong>至内存，不符合离散分配的思想</p></blockquote><ul><li><p>页目录表的表项：</p><p>页号：某级页号</p><p>块号：“页表块”存放到的内存块号</p><blockquote><p>多级页表的<strong>最高级页表</strong>也不能超出一页大小，否则违背了分级的初衷</p></blockquote></li><li><p>对应的<strong>逻辑地址结构</strong>：</p><p>页号：可被拆分成<strong>多级页号</strong></p><p>页内偏移量：与单级页表相同</p></li><li><p>多级页表的思想在虚拟存储技术中有所应用</p></li></ul></li><li><p><strong>快表</strong>：又称联想寄存器（TLB, Translation Look-aside Buffers），是一种<strong>高速缓存</strong>，用于存放最<strong>近访问过的若干页表项</strong>，以加速地址变换。相对而言，内存中的页表常称为<strong>慢表</strong></p><blockquote><p>单级页表记录了所有页的信息，没有考虑<strong>局部性原理</strong></p></blockquote><blockquote><p>快表具体的结构与算法参见计算机组成原理</p></blockquote></li></ul></li><li><p><u>地址变换机构</u></p><ul><li><p>页表寄存器（PTR）</p><ul><li>存放页表在内存中的<strong>起始地址F和页表长度M</strong></li><li>F和M会存放于PCB中，在进程执行时存入PTR</li></ul></li><li><p>地址变换过程</p><ol><li><p>根据逻辑地址算出<strong>页号P、页内偏移量W</strong></p></li><li><p>根据<strong>页号</strong>得到<strong>块号/进程页起始地址</strong></p><ol start="0"><li><p>（<strong>匹配快表</strong>：若命中快表表项，可直接得到<strong>进程页起始地址</strong>，若未命中则需<strong>访存</strong>）</p></li><li><p><strong>越界检查</strong>：将<strong>页号</strong>与PTR中的<strong>页表长度</strong>对比，检查是否合法</p></li><li><p><strong>索引计算</strong>：根据<strong>页表起始地址、页表项长度、页号</strong>计算出<strong>页表项地址</strong></p><blockquote><p>这也是<strong>数组</strong>索引访问的计算原理</p></blockquote></li><li><p><strong>得到始址</strong>：由页表项得到进程页所在<strong>内存号块</strong>，进而计算出<strong>进程页起始地址</strong></p></li><li><p>（<strong>更新快表</strong>：将页表项存入快表）</p></li></ol></li><li><p>根据<strong>进程页起始地址和页内偏移量</strong>计算出<strong>物理地址</strong></p></li></ol></li><li><p>页表与访存：</p><ul><li><p>在没有命中快表的情况下：n 级页表的访存次数为 n+1 次，前n次是查找页表，最后一次是访问数据</p><blockquote><p>不考虑多级快表</p></blockquote></li><li><p>在命中快表的情况下：只需一次访问内存数据（查询快表访问的是缓存）</p></li></ul></li></ul></li></ul><hr><h4 id="基本分段存储管理："><em>基本分段存储管理：</em></h4><ul><li><p><u>基本思想</u>：</p><ul><li><p>进程按<strong>逻辑</strong>关系划分为若干个大小可以不相等的<strong>段</strong>，每段都有一个<strong>段名和段号</strong>，从0开始编址</p><blockquote><p>编程更方便，程序可读性更高</p></blockquote></li><li><p>以段为单位分配内存，段内连续，各段之间可以离散</p></li></ul></li><li><p><u>段表与地址结构</u>：</p><ul><li><p>段表：操作系统为每个进程建立一张段映射表，记录各<strong>逻辑段在物理内存中存放位置</strong></p></li><li><p>段表项</p><ul><li>段号：进程逻辑段的段号，隐含的，相当于逻辑上的数组<strong>索引</strong></li><li>段长：逻辑段的长度。位数与<strong>段内地址</strong>位数相同。</li><li>逻辑段基址：逻辑段在物理内存中存放的<strong>起始位置</strong>。位数由物理内存<strong>存储单元个数</strong>决定</li></ul></li><li><p>逻辑地址结构：段号+段内地址</p><ul><li><p>段号：逻辑地址所在段的段号。段号=逻辑地址/最大段长</p><p>段号的位数对应于进程最多可以分几个段</p></li><li><p>段内地址：逻辑地址在段内的偏移量。段内地址=逻辑地址%最大段长</p><p><strong>段内地址</strong>位数决定了最大<strong>段长</strong></p></li></ul><blockquote><p>段式管理中地址是<strong>二维</strong>的，程序员要同时给出<strong>段名和段内地址</strong>才可以计算出<strong>物理地址</strong></p></blockquote></li></ul></li><li><p><u>地址变换机构</u>：</p><ul><li>段表寄存器：<ul><li>存放段表在内存中的<strong>起始地址F和段表长度M</strong></li><li>F和M会存放于PCB中，在进程执行时存入段表寄存器</li></ul></li><li>地址变换过程：<ol><li>根据逻辑地址算出<strong>段号、段内地址</strong></li><li>根据<strong>段号</strong>得到<strong>进程逻辑段起始地址</strong><ol><li><strong>越界检查</strong>：将<strong>段号</strong>与段表寄存器中的<strong>段长度</strong>对比，检查是否合法</li><li><strong>索引计算</strong>：根据段表起始地址、段表项长度、段号计算出<strong>段表项地址</strong></li><li><strong>越界检查</strong>：由段表项得到<strong>段长</strong>，检查<strong>段内地址</strong>是否合法</li><li>得到始址：由段表项<strong>进程逻辑段起始地址</strong></li></ol></li><li>根据<strong>进程逻辑段起始地址和段内地址</strong>计算出<strong>物理地址</strong></li></ol></li><li>段表与访存：<ul><li>一次访存查段表，一次访存目标数据</li><li>也可以引入快表减少访存</li></ul></li></ul></li><li><p><u>分段分页对比</u>：</p><ul><li>从地址空间的角度对比：<ul><li>页是信息的<strong>物理单位</strong>，对用户不可见，分页进程的地址空间是一维的。页长固定，由系统决定。</li><li>段是信息的<strong>逻辑单位</strong>，对用户可见，分段进程的地址空间是二维的。段长不固定，由程序员决定。</li><li>对于不同进程，系统总空间大小不变，但<strong>页表或段表的大小可能变化</strong>，所以进程地址空间可能变化</li></ul></li><li>从目的的角度对比：<ul><li>分页目的是实现<strong>离散分配</strong>，提高内存利用率，是系统管理的需要。没有外部碎片，会产生少量页内碎片。</li><li>分段目的是将进程划分为逻辑段，方便程序员<strong>编程</strong>。会产生外部碎片，且段长过大不方便分配</li></ul></li><li>从共享的角度对比：<ul><li>分段可以拆分逻辑模块，比分页更容易实现<strong>信息的共享和保护</strong>，更有利于<strong>动态链接</strong></li><li>分段可以灵活拆分<strong>可重入代码和不可重入代码</strong>，保证<strong>数据一致性</strong>，实现安全共享。分页则不够灵活。</li></ul></li></ul></li></ul><hr><h4 id="段页式存储管理："><em>段页式存储管理：</em></h4><ul><li><p><u>基本思想</u>：</p><ul><li>先将进程拆分成<strong>逻辑段</strong>，再将各<strong>逻辑段分页</strong>，也就是一段包含若干页。分段对用户可见，分页对用户不可见。</li><li>在<strong>用户进程</strong>这边，保留<strong>段的逻辑划分</strong>；在<strong>系统内存</strong>这边，保留<strong>页的管理方式</strong>。</li></ul></li><li><p><u>段表、页表与地址结构</u>：</p><ul><li><p>逻辑地址结构：</p><ul><li><p>段号：逻辑地址所在段的段号。段号=逻辑地址/最大段长</p><p>段号的位数对应于进程<strong>最多可以分几个段</strong></p><blockquote><p>保留分段存储管理的<strong>段号</strong>，将<strong>段内地址</strong>拆分成页号和页内偏移量。</p><p>段内地址=逻辑地址%最大段长</p></blockquote></li><li><p>(段内)页号：逻辑地址在<strong>段内所在页</strong>的页号。(段内)页号=段内地址/页面长度</p><p>(段内)页号的位数对应于<strong>每个段最多有多少页</strong></p></li><li><p>页内偏移量：逻辑地址在<strong>段内所在页</strong>中的偏移量。页内偏移量=段内地址%页面长度</p><p>页内偏移量的位数对应于<strong>页面大小</strong></p></li></ul><blockquote><p>段页式管理中地址是<strong>二维</strong>的，程序员要同时给出<strong>段名和段内地址</strong>才可以计算出<strong>物理地址</strong></p></blockquote></li><li><p>段表与页表结合：</p><ul><li><p>段表项：段表项的内容是<strong>页表信息</strong></p><p>段号：逻辑地址所在段号，隐含的，相当于逻辑上的数组索引</p><p>页表长度：逻辑段的页表的长度。位数与(段内)页号的位数相同</p><p>页表块号：逻辑段的页表实际存放到的内存块号，其位数由<strong>内存块的数量</strong>决定</p></li><li><p>页表项：页表变化不大，一个段对应一张页表，一个进程可以有多张页表</p><p>页号：逻辑段页号，隐含的，相当于逻辑上的数组<strong>索引</strong></p><p>块号：逻辑段页实际存放到的<strong>内存块号</strong>。其位数由<strong>内存块的数量</strong>决定</p></li></ul></li><li><p>段页表与访存</p></li></ul></li><li><p><u>地址变换机构</u>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">逻辑地址--&gt;段号</span><br><span class="line">逻辑地址--&gt;页号</span><br><span class="line">逻辑地址--&gt;页内偏移量</span><br><span class="line">段号--段表--&gt;页表--&gt;基址</span><br><span class="line">页号--页表--&gt;基址</span><br><span class="line">基址--&gt;物理地址</span><br><span class="line">页内偏移量--基址--&gt;物理地址</span><br></pre></td></tr></table></figure><ul><li>段表寄存器<ul><li>存放段表在内存中的<strong>起始地址F和段表长度M</strong></li><li>F和M会存放于PCB中，在进程执行时存入段表寄存器</li></ul></li><li>地址变换过程<ol><li>根据逻辑地址算出<strong>段号、页号、页内偏移量</strong></li><li>根据<strong>段号、页号</strong>得到<strong>进程逻辑段页起始地址</strong><ol><li><strong>段号越界检查</strong>：将<strong>段号</strong>与段表寄存器中的<strong>段长度</strong>对比，检查是否合法</li><li><strong>段表项索引计算</strong>：根据段表起始地址、段表项长度、段号计算出<strong>段表项地址</strong></li><li><strong>页号越界检查</strong>：由段表项得到<strong>页表长度</strong>，检查**(段内)页号**是否合法</li><li><strong>得到逻辑段页表始址</strong>：由段表项得到逻辑段页表所在<strong>内存块号</strong>，进而计算出逻辑段页表起始地址</li><li><strong>页表项索引计算</strong>：由逻辑<strong>段页表起始地址、页表项长度、逻辑段页号</strong>计算出<strong>页表项地址</strong></li><li><strong>得到逻辑段页始址</strong>：由页表项得到逻辑段页所在<strong>内存号块</strong>，进而计算出<strong>逻辑段页起始地址</strong></li></ol></li><li>根据<strong>进程逻辑段页起始地址和页内偏移量</strong>计算出<strong>物理地址</strong></li></ol></li><li>段页表与访存<ul><li>一次查段表，一次查页表，一次访问目标单元</li><li>可引入快表减少访存</li></ul></li></ul></li></ul><h3 id="3-4-覆盖交换和虚拟存储">3.4 覆盖交换和虚拟存储</h3><h4 id="覆盖和交换技术："><em>覆盖和交换技术：</em></h4><ul><li><p><u>覆盖技术</u>：</p><ul><li><p>基本思想：将程序分为多个<strong>段</strong>，<strong>常用的段常驻内存</strong>，不常用的段在需要时调入内存且<strong>互相覆盖</strong></p></li><li><p>实现方式：将内存分为固定区和覆盖区，并合理划分程序的<strong>调用结构</strong></p><ul><li><p><strong>固定区</strong>：常驻内存的段放在固定区，调入后直接程序结束才调出。</p><p>在调用结构中位于顶层的模块<strong>独占固定区</strong></p><blockquote><p><strong>可重入程序段</strong>可以固定在此，由多个进程共享，减少对程序段的调入调出</p></blockquote></li><li><p><strong>覆盖区</strong>：不常用的段在用到时调入覆盖区，用不到时调出</p><p>在调用结构中位于同一层次但不会同时调用的模块<strong>共享覆盖区</strong></p></li></ul></li><li><p>适用范围：</p><ul><li>单一连续</li><li>固定分区</li></ul></li><li><p>优缺点：</p><ul><li>优点：实现了内存扩充，提高内存利用率和运行效率</li><li>缺点：必须由程序员<strong>声明覆盖结构</strong>，操作系统完成自动覆盖，对用户不透明，增加编程负担</li></ul></li></ul></li><li><p><u>交换技术</u>：</p><ul><li><p>基本思想：<strong>进程的中级调度/内存调度</strong>，将内存中暂时无法运行的进程<strong>换至外存</strong>，把外存中具备运行条件的进程<strong>换入内存</strong></p></li><li><p>实现方式：</p><ul><li><p>磁盘分为文件区和对换区：</p><p><strong>文件区</strong>存放文件，追求<strong>存储空间的利用率</strong>，因而采用<strong>离散分配</strong>；</p><p><strong>对换区</strong>只占磁盘空间的小部分，用于存放换出的进程数据，追求<strong>换入换出速度</strong>，因而采用<strong>连续分配</strong></p><blockquote><p>如果换入换出速度太慢，覆盖和交换技术就失去了意义</p></blockquote></li><li><p>交换调度策略：</p><p><strong>交换时机</strong>：系统负荷大、内存空闲不足时，例如进程经常发生缺页现象时</p><p><strong>调度策略</strong>：可换出阻塞进程、优先级低的进程，为防止抖动，还可以考虑进程在内存驻中的留时间……</p></li></ul><blockquote><p>注：进程的<strong>PCB一定常驻内存</strong>，内存调度时不会被换出</p></blockquote></li><li><p>覆盖与交换的区别</p><ul><li>覆盖是在<strong>同一个进程</strong>中的</li><li>交换是在**不同进程(或作业)**中的</li></ul></li></ul></li></ul><hr><h4 id="虚拟内存的思想："><em>虚拟内存的思想：</em></h4><ul><li><p><u>传统存储管理方式的特点</u>：</p><ul><li><p><strong>一次性</strong>：作业必须<strong>一次性全部装入</strong>内存才开始运行</p><ul><li>容易导致<strong>大作业无法运行</strong></li><li>内存无法容纳太多作业，<strong>多道程序并发度下降</strong></li></ul></li><li><p><strong>驻留性</strong>：作业装入内存后会<strong>一起驻留直到运行结束</strong></p><ul><li><p>内存中会驻留许多暂时用不到的数据，<strong>降低内存的利用率</strong></p><blockquote><p>事实上只要访问一小部分数据就可以正常运行</p></blockquote></li></ul></li></ul></li><li><p><u>虚拟内存的定义和特征</u>:</p><ul><li><p>虚拟内存的概念：程序装入内存时，可以只装入运行<strong>需要用到的模块</strong>，暂时用不到的模块可以换出至外存，待需要时再调入内存，这样在用户看来就似乎有一个比实际内存更大的内存</p><blockquote><p>是内存在逻辑上的扩充，其基础是<strong>操作系统的虚拟性</strong>和<strong>程序的局部性</strong></p></blockquote></li><li><p>虚拟内存的特征：</p><ul><li><p><strong>多次</strong>性：允许作业分多次调入内存</p></li><li><p><strong>对换</strong>性：作业无需常驻内存，允许根据需求换入换出</p></li><li><p><strong>虚拟</strong>性：从逻辑上扩充了内存容量，最大容量由计算机的地址结构决定</p><blockquote><p>最大容量与主存和外存容量无直接联系</p></blockquote></li></ul></li></ul></li></ul><hr><h4 id="虚拟内存的实现："><em>虚拟内存的实现：</em></h4><blockquote><p>虚拟内存的要在<strong>离散分配</strong>方式的基础上实现，分页分段均可，下面以分页为例</p></blockquote><ul><li><p><u>请求调页机制</u>：</p><ul><li><p><u>页表机制</u></p><blockquote><p>在基本分页存储管理页表的基础上，添加四个新的字段</p></blockquote><ul><li><strong>状态位</strong>：是否已经调入内存</li><li><strong>访问字段</strong>：可记录最近被访问的次数，或上次访问的时间，供置换算法参考</li><li><strong>修改位</strong>：页面调入内存后是否被修改过</li><li><strong>外存地址</strong>：页面在外存中的存放位置</li></ul></li><li><p><u>缺页中断机构</u></p><ul><li><p>缺页中断的概念：进程当前指令<strong>访问的目标页未调入内存</strong>而产生的中断</p><blockquote><p>属于<strong>内中断</strong>中的故障（fault）</p><p>缺页不是越界错误</p></blockquote></li><li><p>工作流程：</p><ol><li>找到页表项后检查<strong>状态位</strong>，若页面未调入内存则产生<strong>缺页中断</strong>，阻塞当前进程</li><li>运行操作系统的<strong>缺页中断处理程序</strong>，将目标页面调入内存并更新<strong>页表</strong><ol><li>保留CPU现场</li><li>从外存中找到缺页</li><li>若内存中没有空闲块，则需要运行<strong>页面置换</strong>算法淘汰一个页面；若被调出的页面修改过，还需要<strong>写回外存</strong></li><li>CPU读入缺页，将缺页调入内存</li><li>更新页表和快表</li></ol></li><li><strong>唤醒</strong>因缺页中断阻塞的进程，放入<strong>就绪队列</strong>，让其重新查表</li></ol></li></ul></li><li><p><u>地址变换机构</u>：总体上与基本分页存储管理相同，增加了几个步骤</p><ul><li>请求调页：查页表项时若发现页不在内存，要产生缺页中断请求调页</li><li>页面置换：调入前若发现内存没有空闲块，需要进行页面置换</li><li>修改页表：调入缺页后修改页表，并即时增加或删除快表</li></ul></li></ul></li><li><p><u>页面置换算法</u></p><ul><li><p>最佳置换算法（OPT，Optimal）</p><ul><li>算法思想：每次淘汰<strong>之后最长时间内不再被访问</strong>的页面</li><li>算法实现：需要提前知道<strong>页面访问序列</strong>，淘汰时计算内存中各页面下一次出现的位置，最后一个出现的被淘汰</li><li>算法评价：可以保证最低的缺页率。但该算法无法实现，因为操作系统无法预判<strong>页面访问序列</strong></li></ul></li><li><p>先进先出置换算法（FIFO）</p><ul><li><p>算法思想：每次淘汰<strong>最早调入内存</strong>的页面</p></li><li><p>算法实现：将调入内存的页面按调入顺序排成队列，每次淘汰队头页面</p><blockquote><p>队列的最大长度取决于操作系统为进程分配了多少个内存块</p></blockquote></li><li><p>算法评价：实现简单；会产生 Belady 异常（四种算法中只有 FIFO 会这样），没考虑<strong>局部性原理</strong>，性能差</p><blockquote><p>Belady 异常：为进程分配的内存块数增加时，<strong>缺页次数不减反增</strong></p></blockquote></li></ul></li><li><p>最近最久未使用置换算法（LRU，least Recently Used）</p><ul><li><p>算法思想：每次淘汰最近最久未使用的页面</p></li><li><p>算法实现：用页表项的访问字段记录<strong>自上次被访问以来所经历的时间t</strong>，每次淘汰t值最大的页面</p><blockquote><p>做题时可以从当前访问页开始逆向检查访问序列，最后一个出现的就是要淘汰的</p></blockquote></li><li><p>算法评价：性能好；实现困难，需要<strong>排序</strong>，因而要专门的硬件支持，开销大</p><blockquote><p>性能最接近OPT</p></blockquote></li></ul></li><li><p>时钟置换算法/最近未用算法（NRU，Not Recently Used）/ CLOCK算法</p><ul><li><p>简单CLOCK算法的实现：</p><p>将内存中的页面链接成一个循环队列，某页被访问时，将其页表项的访问位置1；</p><p>需要淘汰页面时，从上一次淘汰的位置或其下一个位置开始，遍历队列循环检查访问位，若为0则直接换出，若为1则将其置为0；</p><p>这样最多两轮扫描，就可以淘汰一个页面</p></li><li><p>改进CLOCK算法的实现：</p><blockquote><p>思想：在近期访问情况相近的情况下，优先淘汰<strong>没有修改</strong>的页面，以减少IO次数</p></blockquote><p>将内存中的页面链接成一个循环队列，某页被访问时，将其页表项的访问位置1，某页被修改时，将其页表项的修改位置1，初始为0，用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mtext>访问位</mtext><mo separator="true">,</mo><mtext>修改位</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(访问位,修改位)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">访问位</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">修改位</span><span class="mclose">)</span></span></span></span>表示各页面状态。</p><p>需要淘汰页面时，从上一次淘汰的位置或其下一个位置开始，遍历队列循环检查<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mtext>访问位</mtext><mo separator="true">,</mo><mtext>修改位</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(访问位,修改位)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">访问位</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">修改位</span><span class="mclose">)</span></span></span></span>：</p><p>第一轮寻找第一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，找到则替换，不修改标志位；</p><p>第二轮寻找第一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，找到则替换，将扫描过的访问位置为0；</p><p>第三轮寻找第一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，找到则替换，不修改标志位；</p><p>第四轮寻找第一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，找到则替换。</p><p>这样最多四轮扫描，就可以淘汰一个页面</p></li><li><p>算法评价：开销小，性能不错</p></li></ul></li></ul></li><li><p><u>页面置换策略</u></p><ul><li><p><strong>驻留集</strong>：请求分页存储管理中给进程分配的物理块的集合</p><ul><li>在虚拟存储中，驻留集大小一般小于进程总大小</li><li>若驻留集太小，会导致缺页频繁；若驻留集太大，会降低多道程序并发度</li></ul></li><li><p>页面分配与置换方式</p><ul><li><strong>固定分配</strong>：进程运行期间驻留集大小不变</li><li><strong>可变分配</strong>：进程运行期间驻留集大小可变</li><li><strong>局部置换</strong>：进程缺页时只能置换属于自己的物理块（由操作系统分配的）</li><li><strong>全局置换</strong>：进程缺页时可以利用操作系统的空闲块，也可以窃取其他进程的物理块</li></ul></li><li><p>三种置换<strong>策略</strong></p><ul><li><p><strong>固定分配局部置换</strong></p><p>可以根据<strong>进程优先级</strong>等信息分配内存块数</p><blockquote><p>缺点：很难确定合理的分配数</p></blockquote></li><li><p><strong>可变分配全局置换</strong></p><p>操作系统维护一个<strong>空闲物理块队列</strong>，进程缺页时可分配。</p><p>空闲物理块不足时，只能窃取其他进程<strong>未锁定</strong>的物理块</p></li><li><p><strong>可变分配局部置换</strong></p><p>若进程频繁缺页，操作系统可以为该进程分配更多物理块，直至<strong>缺页率</strong>适当；</p><p>若进程几乎不缺页，操作系统可以剥夺该进程的物理块</p></li></ul></li><li><p>调入页面的<strong>时机</strong></p><ul><li><p>预调页：根据局部性原理，在进程首次调入时预测其他可能访问到的页面</p><blockquote><p>目前的技术预测成功率只有50%左右</p></blockquote><blockquote><p><strong>运行前</strong>调入</p></blockquote></li><li><p>请求调页：进程运行期间缺页时才调入，或操作系统检查到进程缺页率较高时调入</p><blockquote><p><strong>运行时</strong>调入</p></blockquote></li></ul></li><li><p>调入页面的<strong>地点</strong></p><ul><li><p>系统有足够<strong>对换区</strong>：提前将数据从文件区复制到对换区，内存与对换区之间调入调出页面</p><blockquote><p>保证调入调出速度快</p></blockquote></li><li><p>系统对换区不充足：不会被修改的数据直接从<strong>文件区</strong>调入内存，可能会修改的数据从对换区调入调出</p></li><li><p>UNIX方式：<strong>未使用过</strong>的页面都从文件区调入，<strong>使用过</strong>后从对换区调入调出</p></li></ul></li><li><p>抖动现象与工作集：</p><ul><li><p>抖动现象描述：刚换出内存的页面马上又要换入，或刚换入内存的页面马上又要换出</p><blockquote><p>所有页面转换算法都不能完全避免抖动</p></blockquote></li><li><p>抖动现象产生原因：驻留集小于工作集</p></li><li><p>工作集：在某段时间内，进程实际访问过的<strong>页面集合</strong></p><blockquote><p>可以通过“窗口尺寸”来确定一段时间，即从页面访问序列的当前位置向前看“窗口尺寸”个页面（包括多次访问相同的页面）。这符合局部性原理，也可以据此设计一种页面置换算法</p></blockquote></li><li><p>抖动现象解决方案：保证<strong>驻留集大于工作集</strong>，即增大驻留集或减小工作集</p></li></ul></li></ul></li></ul><h2 id="4-文件管理">4 文件管理</h2><h3 id="4-1-文件与目录概述">4.1 文件与目录概述</h3><h4 id="文件概述："><em>文件概述：</em></h4><ul><li><u>文件的概念</u>：文件就是一组<strong>有意义的信息/数据</strong>集合</li><li><u>文件的属性</u>：记录在**文件控制块（FCB）**中的文件属性信息<ul><li>文件名：用户创建文件时决定的文件名，主要为了<strong>方便用户找到文件</strong>。<strong>同一目录下不允许有重名文件</strong></li><li>标识符：<strong>操作系统</strong>用于区分各个文件的内部名称。一个系统内各文件标识符唯一</li><li>类型：指明文件的<strong>类型</strong></li><li>位置：文件存放的<strong>路径</strong>（让<strong>用户</strong>使用）；文件在<strong>外存中的地址</strong>（<strong>操作系统</strong>使用，对用户不可见）</li><li>大小：指明文件的<strong>大小</strong></li><li>时间相关：创建时间、上次修改时间</li><li>保护控制相关：文件所有者信息、保护信息（对文件进行保护的访问控制信息）</li></ul></li><li><u>文件的组织</u>：<ul><li><p><strong>无结构</strong>文件：由一些<strong>二进制或字符流</strong>组成，又称”<strong>流式</strong>文件“</p></li><li><p><strong>有结构</strong>文件：由一组<strong>相似的记录</strong>组成，又称”<strong>记录式</strong>文件“</p><ul><li><strong>数据项</strong>是文件系统中最基本的数据单位</li><li><strong>记录</strong>是一组相关数据项的集合，<strong>各记录间的组织问题</strong>就是<strong>文件的逻辑结构</strong>问题</li></ul></li><li><p><strong>文件之间的组织问题</strong>就是<strong>文件目录</strong>要探讨的问题</p></li></ul></li></ul><hr><h4 id="操作系统的文件管理概述："><em>操作系统的文件管理概述：</em></h4><ul><li><p><u>操作系统向上提供的<strong>API</strong></u>：</p><ul><li>创建文件：<code>create</code>系统调用，在<strong>外存</strong>中创建文件</li><li>读文件：<code>read</code>系统调用，将文件数据从<strong>外存</strong>读入<strong>内存</strong>，由<strong>CPU</strong>处理</li><li>写文件：<code>write</code>系统调用，将文件数据从<strong>内存</strong>写回<strong>外存</strong></li><li>删除文件：<code>delete</code>系统调用，将文件数据从<strong>外存</strong>中删除</li><li>打开文件：<code>open</code>系统调用，<strong>读/写文件之前</strong>需要做的操作</li><li>关闭文件：<code>close</code>系统调用，<strong>读/写文件之后</strong>需要做的操作</li></ul></li><li><p><u>操作系统向下对<strong>磁盘的管理</strong></u>：</p><ul><li><p>磁盘块的存储与管理</p><ul><li><p>操作以”<strong>块</strong>“为单位为<strong>文件</strong>分配存储空间，以”<strong>块</strong>“为单位划分<strong>外存</strong></p><blockquote><p>”<strong>块</strong>“的大小通常与内存页大小相同，通常为4KB</p></blockquote></li><li><p>文件也具有<strong>逻辑地址</strong>，包括<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mtext>逻辑块号</mtext><mo separator="true">,</mo><mtext>块内地址</mtext><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;逻辑块号,块内地址&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">逻辑块号</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">块内地址</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，访问外存时需要转换为<strong>物理地址</strong>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mtext>物理块号</mtext><mo separator="true">,</mo><mtext>块内地址</mtext><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;物理块号,块内地址&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">物理块号</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">块内地址</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span></p></li><li><p>文件在磁盘块上的存储问题就是<strong>文件的物理结构</strong>问题</p></li></ul></li></ul></li><li><p><u>文件共享与保护</u>：</p><ul><li>文件共享：使多个用户可以<strong>共享使用一个文件</strong></li><li>文件保护：如何保证不同的用户对文件有不同的<strong>操作权限</strong></li></ul></li></ul><hr><h4 id="文件目录："><em>文件目录：</em></h4><ul><li><p><u>文件目录的概念</u>：</p><ul><li>文件目录就是<strong>文件控制块</strong>的有序集合，其本身也是一种有结构文件</li><li>文件控制块（FCB）：FCB就是文件<strong>目录项</strong>，一个文件对应一个FCB，记录了各种文件信息<ul><li>基本信息：<strong>文件名</strong>、<strong>物理地址</strong>、结构、类型、…</li><li>存储控制信息：是否可读写、用户访问权限</li><li>使用信息：建立时间、修改时间</li></ul></li><li>目录的操作<ul><li><strong>搜索目录</strong>：搜索目录中的文件，即目录项FCB</li><li><strong>增加目录项</strong>：创建新文件时需要在所属目录创建目录项</li><li><strong>删除目录项</strong>：删除新文件时需要在所属目录删除目录项</li><li><strong>显示目录</strong>：显示目录内容，例如其中所有文件的属性</li><li><strong>修改目录</strong>：文件属性变化时需要修改相应目录项</li></ul></li></ul></li><li><p><u>目录结构</u>：</p><ul><li><p><strong>单级</strong>目录结构</p><ul><li>特点：整个系统只有一级目录表；实现<strong>按名存取</strong>；不允许任何文件重名</li><li>缺点：不适用于多用户操作系统</li></ul></li><li><p><strong>两级</strong>目录结构</p><ul><li>特点：分为<strong>主文件</strong>目录（MFD，Master File Directory）和<strong>用户文件</strong>目录（UFD，User File Directory）；主文件目录记录<strong>用户名</strong>及用户文件目录<strong>存储位置</strong>；用户文件目录记录该用户的文件FCB；允许不同用户的文件重名</li><li>优点：在目录上实现<strong>用户访问限制</strong></li><li>缺点：缺乏灵活性，用户不能对自己的文件<strong>分类</strong></li></ul></li><li><p><strong>多级/树形</strong>目录结构</p><ul><li><p>特点：</p><p>用<strong>斜杠分隔的文件路径</strong>标识文件，各级目录用斜杠隔开；</p><p><strong>绝对路径</strong>查找文件：从外存读入<strong>根目录表</strong>和其他涉及的<strong>目录表</strong>，需要多次磁盘I/O操作；</p><p><strong>相对路径</strong>查找文件：可以设置一个“<strong>当前目录</strong>”作为查找文件的起点，减少磁盘I/O操作</p><blockquote><p>为什么能减少？因为用户很可能<strong>连续访问同一目录</strong>的多个文件，此时<strong>不必再次调入上级目录</strong>就能直接访问</p></blockquote></li><li><p>优点：层次结构清晰，可以对文件灵活分类管理</p></li><li><p>缺点：不方便文件共享</p></li></ul></li><li><p><strong>无环图</strong>目录结构</p><ul><li>特点：在<strong>树形</strong>目录结构的基础上，可以让<strong>不同文件名指向同一个文件结点</strong>（有向无环图）；为每个文件结点设置<strong>共享计数器</strong>，减为0时才删除结点</li><li>优点：方便地实现多用户间的文件共享</li></ul></li></ul></li><li><p><u>索引结点</u>：</p><ul><li>每个文件对应一个<strong>索引结点</strong>，存放除<strong>文件名</strong>之外的描述信息（包括文件在外存中的<strong>存放位置</strong>）</li><li><strong>目录项</strong>只包含文件名、索引结点指针；目录项长度减少，占用的磁盘块减少，检索文件时磁盘I/O次数减少</li><li><strong>硬盘</strong>索引结点与<strong>内存</strong>索引结点<ul><li>硬盘索引结点：存放在<strong>外存</strong>中的索引结点，在通过<strong>目录项</strong>索引到时才<strong>调入内存</strong></li><li>内存索引结点：调入内存的索引结点，相比于硬盘索引结点，需要增加</li></ul></li></ul></li></ul><hr><h4 id="文件系统层次结构："><em>文件系统层次结构：</em></h4><blockquote><p>从“用户/应用程序”的调用开始，自顶向下介绍</p></blockquote><ul><li>用户接口：向上层用户提供功能接口，处理相关<strong>系统调用</strong>请求</li><li>文件目录系统：解析用户的文件路径，找到相应的<strong>FCB或索引结点</strong>。管理目录和目录项</li><li>存取控制系统：验证用户权限，完成<strong>文件保护</strong>相关功能</li><li>逻辑文件系统与文件信息缓冲区：将用户要访问的<strong>文件记录号</strong>转换为对应的<strong>逻辑地址</strong><ul><li>文件信息缓冲区可用于存放调入内存的索引表</li></ul></li><li>物理文件系统：将文件逻辑地址转换为<strong>物理地址</strong></li><li>辅助分配模块和设备管理模块<ul><li>辅助分配模块：负责分配和回收<strong>存储空间</strong></li><li>设备管理模块：与<strong>硬件</strong>直接交互，负责硬件设备相关的管理工作</li></ul></li></ul><h3 id="4-2-文件的结构">4.2 文件的结构</h3><h4 id="文件的逻辑结构："><em>文件的逻辑结构：</em></h4><ul><li><p><u>文件逻辑结构概述</u></p><ul><li>文件逻辑结构的含义：在<strong>用户</strong>看来文件的数据是如何组织的</li><li>文件逻辑结构的分类：<ul><li>无结构文件：由<strong>二进制或字符流</strong>组成，无明显逻辑结构</li><li>有结构文件：由<strong>记录</strong>组成，又称“记录式文件”，每条记录由若干<strong>数据项/字段</strong>组成。分为<strong>定长</strong>记录、<strong>可变长</strong>记录<ul><li><strong>顺序</strong>文件</li><li><strong>索引</strong>文件</li><li><strong>索引</strong>顺序</li></ul></li></ul></li></ul></li><li><p><u>顺序文件</u></p><ul><li><strong>逻辑结构</strong>定义：<ul><li><p>文件中的<strong>记录</strong>在逻辑上相邻，<strong>顺序排列</strong></p></li><li><p><strong>串</strong>结构：记录之间的顺序与关键字有关</p><blockquote><p>通常按照<strong>存入的时间</strong>决定记录的顺序</p></blockquote></li><li><p><strong>顺序</strong>结构：记录之间的顺序与关键字无关</p></li></ul></li><li><strong>物理存储</strong>方式：<ul><li><strong>链式</strong>存储：<strong>无法实现随机存取</strong>，只能从第一个记录依次查找</li><li><strong>顺序</strong>存储<ul><li><strong>可变长</strong>记录的顺序存储：<strong>无法实现随机存取</strong>，只能从第一个记录依次查找</li><li><strong>定长</strong>记录的顺序存储：<strong>可以实现随机存取</strong>；串结构无法根据关键字快速索引；顺序结构可以根据关键字<strong>快速索引</strong></li></ul></li></ul></li><li>特点：<ul><li><p>“顺序文件”一般指<strong>物理上也顺序存储</strong>的顺序文件</p></li><li><p>缺点：增删记录较麻烦</p><blockquote><p>如果是串结构不保证顺序，则增加会相对简单</p></blockquote></li></ul></li></ul></li><li><p><u>索引文件</u></p><ul><li><strong>逻辑结构</strong>定义：<ul><li>文件记录通过<strong>索引表</strong>组织起来，每个记录对应一个表项</li><li>索引表：一种<strong>定长记录的顺序文件</strong>，可以随机存取，按关键字排序还可以<strong>快速索引</strong>；表项中包括<strong>索引号</strong>（key）、<strong>记录长度</strong>、<strong>记录指针</strong>等信息，可以根据索引号快速查询表项</li></ul></li><li><strong>物理存储</strong>方式：<ul><li>由索引表项的<strong>指针</strong>指向<strong>逻辑文件记录</strong>，文件记录可以在物理上<strong>离散</strong>存放</li></ul></li><li>特点：<ul><li>主要用于对<strong>信息处理的及时性</strong>要求比较高的场合</li><li>可以用不同数据项为索引号（key）建立<strong>多张索引表</strong></li><li>方便<strong>增删</strong>，实现定长和可变长记录的<strong>随机存取</strong></li><li>缺点：索引表可能占用较大空间</li></ul></li></ul></li><li><p><u>索引顺序文件</u></p><ul><li><strong>逻辑</strong>结构定义：<ul><li>文件记录<strong>分组</strong>后通过<strong>索引表</strong>组织起来，每个记录对应一个表项组</li><li>索引表不必按关键字排序，顺序插入即可</li></ul></li><li><strong>物理</strong>存储方式：<ul><li>由索引表项的<strong>指针</strong>指向<strong>逻辑文件记录组</strong>，每组文件记录可以在物理上<strong>离散</strong>存放</li><li>每组内文件记录<strong>顺序</strong>存放</li></ul></li><li>特点：<ul><li>检索时先<strong>顺序查索引表</strong>找到分组，再<strong>顺序查找分组</strong>内记录</li><li>记录过多时可以建立多级索引表</li></ul></li></ul></li></ul><hr><h4 id="文件的物理结构："><em>文件的物理结构：</em></h4><ul><li><p><u>文件物理结构概述</u></p><ul><li>文件物理结构的含义：在<strong>操作系统</strong>看来文件的数据是如何存放在<strong>外存</strong>的，是操作系统对<strong>非空闲磁盘块</strong>的管理方式，也是<strong>文件分配方式</strong></li><li>文件物理结构的分类<ul><li>连续分配</li><li>链接分配<ul><li>隐式链接</li><li>显式链接</li></ul></li><li>索引分配</li></ul></li></ul></li><li><p><u>文件块与磁盘块</u></p><ul><li>磁盘块：<strong>磁盘</strong>中的所有存储单元以“块”为单位，称之为磁盘块<ul><li>磁盘块的大小与<strong>页面</strong>的大小相同</li><li>内存与磁盘间的<strong>数据交换</strong>也是以“块”为单位</li></ul></li><li>文件块：文件的<strong>逻辑地址空间</strong>以“块”为单位，称之为文件块<ul><li><p>文件的逻辑地址可以表示为：<code>(逻辑块号, 块内地址)</code></p></li><li><p>操作系统<strong>以块为单位</strong>为文件<strong>分配</strong>存储空间，负责实现文件逻辑地址到物理地址的映射</p><blockquote><p>“映射”本质是<strong>逻辑块号</strong>到<strong>物理块号</strong>的映射</p></blockquote></li></ul></li></ul></li><li><p><u>连续分配</u></p><ul><li>存储方式：每个文件在磁盘上占有<strong>一组连续的块</strong></li><li>访问方式<ul><li><p>目录项：记录<strong>起始块号</strong>与<strong>文件长度</strong></p></li><li><p>通过<code>物理块号=起始块号+逻辑块号</code>计算，支持顺序访问与随机访问</p><blockquote><p>当然还需要检查逻辑块号是否合法：<code>逻辑块号&lt;长度</code></p></blockquote></li></ul></li><li>优缺点<ul><li>优点：<strong>顺序存取</strong>速度最快；支持<strong>随机访问</strong></li><li>缺点：产生<strong>碎片</strong>，外存利用率低；不利于文件<strong>拓展</strong></li></ul></li></ul></li><li><p><u>链接分配-隐式链接</u></p><ul><li><p>存储方式：离散分配，每个磁盘块都有指向下一个磁盘块的指针</p><blockquote><p>这些<strong>指针对用户透明</strong></p></blockquote></li><li><p>访问方式</p><ul><li><p>目录项：记录<strong>起始</strong>块号与<strong>结束</strong>块号</p></li><li><p>从<strong>起始块号</strong>开始，将磁盘块<strong>读入内存</strong>，进而通过指针找到下一块并读入内存，直到结束</p><blockquote><p>读入i号逻辑块需要i+1次磁盘I/O（从0号块开始）</p></blockquote></li></ul></li><li><p>优缺点</p><ul><li>优点：不产生碎片，外存利用率高；方便文件拓展</li><li>缺点：只支持**顺序访问，**不能随机访问</li></ul></li></ul></li><li><p><u>链接分配-显式链接</u></p><ul><li>存储方式：离散分配，通过文件分配表(FAT)记录各<strong>磁盘块</strong>指向下一块的<strong>指针/块号</strong><ul><li><p>一个<strong>磁盘</strong>仅设置一张<strong>FAT</strong>，开机时FAT读入<strong>内存</strong>并<strong>常驻</strong></p></li><li><p>FAT表项：物理块号+下一块指针/块号</p><blockquote><p>FAT各表项物理上连续存储且表项长度相等，所以物理块号其实可以隐含</p></blockquote></li></ul></li><li>访问方式：<ul><li>目录项：记录<strong>起始块号</strong></li><li>从<strong>起始块号</strong>开始，查<strong>FAT</strong>得到下一磁盘块指针/块号，直到找到需要的块号或下一块号为-1</li></ul></li><li>优缺点：<ul><li><p>优点：支持顺序访问，也支持<strong>随机访问</strong>，相比于隐式连接访问速度更块；不会产生碎片；方便拓展</p><blockquote><p>注意，随机访问指的是<strong>访问第i块不需要依次访问前i-1块</strong>，只需要查询<strong>内存</strong>中的FAT即可</p></blockquote></li><li><p>缺点：FAT需要占用一定空间</p></li></ul></li></ul></li><li><p><u>索引分配</u></p><ul><li><p>存储方式：为每个文件建立<strong>索引表</strong></p><ul><li><p><strong>索引表</strong>记录文件各<strong>逻辑块</strong>对应的<strong>物理块</strong></p><ul><li><p>索引表存放的磁盘块称为<strong>索引块</strong></p></li><li><p>文件数据存放的磁盘块称为<strong>数据块</strong></p><blockquote><p>若文件过大，可以采用链接方案、多层索引、混合索引；</p><p>链接方案就是一级索引，索引表长度超过一个磁盘块大小则不得不链接存储</p><p>多层索引、混合索引的索引表长度不会超过一个磁盘块</p></blockquote></li></ul></li><li><p>多层索引：多级索引表</p><blockquote><p>会涉及到文件最大长度计算、访存次数计算的问题</p></blockquote></li><li><p>混合索引：顶级索引表中部分表项是<strong>直接地址索引</strong>，部分表项是<strong>一级间接</strong>索引、<strong>二级间接</strong>索引等</p><blockquote><p>会涉及到文件最大长度计算、访存次数计算的问题</p></blockquote></li></ul></li><li><p>访问方式：</p><ul><li>链接方案的目录项：记录**(顶级)索引块块号**</li><li>通过FCB找到各级索引表<strong>读入内存</strong>，查索引表得出逻辑块在外存中的磁盘块号</li></ul></li><li><p>优缺点：</p><ul><li>优点：支持随机访问，方便拓展；混合索引可以兼容大文件与小文件</li><li>缺点：索引表需要占用存储空间；对于大文件，链接方案可能需要多次读取索引块；对于小文件，多层索引依然需要读入各级索引表</li></ul></li></ul></li></ul><h3 id="4-3-文件的存取与操作">4.3 文件的存取与操作</h3><h4 id="文件存储空间管理："><em>文件存储空间管理：</em></h4><ul><li><p><u>存储空间划分与初始化</u></p><ul><li><p>存储空间划分：将<strong>物理磁盘</strong>划分成一个个<strong>文件卷</strong></p><ul><li>文件卷也叫逻辑卷、逻辑盘</li></ul><blockquote><p>有的文件系统也可以将多个物理磁盘组成一个文件卷</p></blockquote></li><li><p>存储空间初始化：将各个<strong>文件卷</strong>划分为<strong>目录区和文件区</strong></p><ul><li><p>目录区：存放文件目录信息（<strong>FCB、索引结点</strong>）、磁盘存储空间<strong>管理信息</strong>等</p><blockquote><p>管理信息包括空闲表、位示图、超级块等</p></blockquote></li><li><p>文件区：存放<strong>文件数据</strong></p></li></ul></li></ul></li><li><p><u>存储空间管理方法</u></p><ul><li><p>空闲表法</p><ul><li>记录与组织空闲磁盘块：用空闲盘块表每个空闲盘块区的<strong>起始盘块号和盘块数</strong><ul><li>表项：起始盘块号、盘块数</li></ul></li><li>分配磁盘块：使用<strong>动态分区分配算法</strong>，为文件分配<strong>连续</strong>的存储空间，并<strong>修改表项</strong></li><li>回收磁盘块：回收并根据前后空闲分区情况<strong>修改表项</strong></li><li>适用情况：连续分配</li></ul></li><li><p>空闲链表法-空闲盘块链</p><ul><li><strong>记录与组织</strong>空闲磁盘块：以<strong>盘块</strong>为单位组成链表<ul><li>空闲盘块中存储下一个空闲盘块的指针</li><li>操作系统保存着<strong>链头、链尾指针</strong></li></ul></li><li><strong>分配</strong>磁盘块：从<strong>链头</strong>开始摘下若干个盘块分配，并修改<strong>链头指针</strong></li><li><strong>回收</strong>磁盘块：将回收的盘块挂到<strong>链尾</strong>，并修改<strong>链尾指针</strong></li><li>适用情况：离散分配。为文件分配多个磁盘块时效率较低，要重复多次操作</li></ul></li><li><p>空闲链表法-空闲盘区链</p><ul><li><strong>记录与组织</strong>空闲磁盘块：以<strong>盘区</strong>为单位组成链表<ul><li>盘区由连续的空闲盘块组成</li><li>盘区的第一个盘块记录长度和指针</li><li>操作系统保存着<strong>链头、链尾指针</strong></li></ul></li><li><strong>分配</strong>磁盘块：使用<strong>动态分区分配算法</strong>，从<strong>链头</strong>检索合适的空闲盘区。若没有合适的盘区，可以分配不同盘区的盘块，并注意修改<strong>链指针和盘区大小</strong></li><li><strong>回收</strong>磁盘块：若回收区刚好与某一空闲区<strong>相邻</strong>，则<strong>合并</strong>；若<strong>无相邻</strong>，则将回收区作为单独的新空闲区挂到<strong>链尾</strong>。注意修改<strong>链指针和盘区大小</strong></li><li>适用情况：离散与连续分配均可。为文件分配多个磁盘块时效率更高</li></ul></li><li><p>位示图法</p><ul><li><p><strong>记录与组织</strong>磁盘块：</p><ul><li><p>用连续的“字”表示。一个“字”作为一<strong>行</strong>，“字”中的每个二进制位（一<strong>列</strong>）对应一个盘块，构成<strong>位示图</strong></p><blockquote><p>例如“0”代表空闲、“1”代表分配</p></blockquote></li><li><p>用<code>(字号, 位号)</code>对应<strong>盘块号</strong>，结合<strong>字长</strong>可以得出两者之间的数学关系</p></li></ul></li><li><p><strong>分配</strong>磁盘块：<strong>顺序扫描</strong>位示图，找到若干个<strong>空闲块</strong>的<code>(字号, 位号)</code>，算出<strong>盘块号</strong>，分配，并<strong>修改相应位</strong></p></li><li><p><strong>回收</strong>磁盘块：根据回收的<strong>盘块号</strong>计算<code>(字号, 位号)</code>，<strong>修改相应位</strong></p></li><li><p>适用情况：离散与连续分配均可</p></li></ul></li><li><p>成组链接法</p><ul><li><p><strong>记录与组织</strong>空闲磁盘块：</p><ul><li>空闲盘块以组为单位，可以不连续</li><li>每组盘块的<strong>第一块</strong>要记录下一组的空闲盘块数和各空闲盘块号（指针），其他盘块就是不记录信息的空闲块<ul><li>“第一个”这样的块就是<strong>超级块</strong></li><li>“最后一个”这样的块会将<strong>第一个空闲盘块号设为-1</strong>，代表没有再下一组了</li></ul></li></ul></li><li><p><strong>分配</strong>磁盘块：检查<strong>超级块指向的分组</strong>块数是否足够，足够则分配并修改信息，不足则先分配分组内所有块，并将<strong>分组第一块信息</strong>复制到<strong>超级块</strong>中，再从<strong>下一组</strong>中分配</p><blockquote><p>超级块就像一个<code>dummyHead</code></p></blockquote></li><li><p><strong>回收</strong>磁盘块：检查<strong>超级块指向的分组</strong>是否足够容纳，足够则插入该分组，不足则把回收的作为<strong>新分组</strong>，复制<strong>超级块</strong>内容至<strong>新分组第一盘块</strong>，并让超级块中记录新分组信息，直到回收所有块</p><blockquote><p>有点类似头插法</p></blockquote></li><li><p>适用：离散与连续分配均可</p></li></ul></li></ul></li></ul><hr><h4 id="文件基本操作："><em>文件基本操作：</em></h4><ul><li><p><u>创建文件</u></p><ul><li>参数：<ul><li>所需外存<strong>空间大小</strong></li><li>存放<strong>路径</strong></li><li>文件<strong>名</strong></li></ul></li><li>系统调用<code>create</code><ul><li>分配<strong>外存空间</strong></li><li>创建<strong>目录项</strong></li></ul></li></ul></li><li><p><u>删除文件</u></p><ul><li>参数：<ul><li>存放<strong>路径</strong></li><li>文件<strong>名</strong></li></ul></li><li>系统调用<code>delete</code>：<ol><li>找到目录项</li><li>回收<strong>外存空间</strong></li><li>删除目录项</li></ol></li></ul></li><li><p><u>打开文件</u></p><ul><li><p>参数：</p><ul><li>存放路径</li><li>文件名</li><li>对文件的操作类型</li></ul></li><li><p>系统调用<code>open</code>：</p><ul><li><p>目录项：找到<strong>目录项</strong>并复制进<strong>内存</strong>的打开文件表中，检查操作权限</p><blockquote><p>只复制<strong>目录项</strong>而不复制<strong>文件数据</strong></p></blockquote></li><li><p>打开文件表：</p><ul><li><p><strong>系统打开文件表</strong>中的打开计数器加1</p></li><li><p>返回<strong>用户打开文件表</strong>的索引号，用户使用该编号指明要操作的文件</p><blockquote><p>文件描述符</p></blockquote></li></ul></li></ul></li><li><p>打开文件表：</p><ul><li>系统的打开文件表<ul><li><strong>打开计数器</strong>记录此时有多少进程打开了此文件</li><li>方便系统实现某些文件管理功能</li></ul></li><li>用户进程的打开文件表<ul><li><strong>读写指针</strong>记录进程对文件读/写操作进行到的位置</li><li><strong>访问权限</strong>记录用户进程对文件的访问权限</li></ul></li></ul></li></ul></li><li><p><u>关闭文件</u></p><ul><li>参数：打开文件表的编号</li><li>系统调用<code>close</code><ul><li>删除用户进程<strong>打开文件表项</strong></li><li>回收该文件的进程<strong>内存空间</strong>等资源</li><li>系统打开文件表打开计数器减1，如果减到0则删除表项</li></ul></li></ul></li><li><p><u>读文件</u></p><ul><li><p>参数：</p><ul><li>打开文件表的<strong>编号</strong></li><li>读入的<strong>数据量</strong></li><li>读入到的<strong>内存位置</strong></li></ul></li><li><p>系统调用<code>read</code>：</p><ul><li><p>根据读写指针指向的<strong>外存</strong>空间<strong>读入</strong>指定数据，存放至指定<strong>内存</strong>位置</p><blockquote><p>从外存读入内存。如果所读数据文件不在内存，会产生中断（<strong>缺页中断</strong>），阻塞进程，直到所需数据从外存调入内存。</p></blockquote></li></ul></li></ul></li><li><p><u>写文件</u></p><ul><li><p>参数：</p><ul><li>打开文件表的<strong>编号</strong></li><li>写回的<strong>数据量</strong></li><li>被写回数据的<strong>内存位置</strong></li></ul></li><li><p>系统调用<code>write</code></p><ul><li><p>从<strong>内存</strong>指定位置<strong>读出</strong>指定数据，写回读写指针指向的<strong>外存</strong>空间</p><blockquote><p>从内存写回外存</p></blockquote></li></ul></li></ul></li></ul><hr><h4 id="文件共享与保护："><em>文件共享与保护：</em></h4><ul><li><p><u>文件共享</u></p><ul><li><p><strong>硬链接</strong>/基于<strong>索引结点</strong>的共享方式</p><ul><li><p>不同<strong>目录项</strong>指向同一个<strong>索引结点</strong>，索引结点上设置<strong>链接计数变量</strong></p></li><li><p>用户删除文件时只删除目录项，并将链接计数变量减1，若减为0则删除索引结点和文件数据</p><blockquote><p>否则会导致指针悬空</p></blockquote></li></ul></li><li><p><strong>软链接</strong>/基于<strong>符号链</strong>的共享方式</p><ul><li><p>创建<strong>Link类型文件</strong>来记录文件存放路径</p><blockquote><p>例如Windows的快捷方式</p></blockquote></li><li><p>源文件被删除会导致Link文件失效</p></li><li><p>可能涉及到查询多级目录，多次I/O操作</p></li></ul></li></ul></li><li><p><u>文件保护</u></p><ul><li><p>口令保护</p><ul><li>保护方式：为文件<strong>设置口令</strong>，用户访问时需要<strong>提供口令</strong>，系统验证是否正确</li><li>评价：开销小，但口令一般存放在<strong>FCB或索引结点</strong>中，不太安全</li></ul></li><li><p>加密保护</p><ul><li>保护方式：用密码<strong>加密</strong>文件，用户访问时需要<strong>提供密码</strong>才能<strong>解密</strong>文件</li><li>评价：安全性高，但加密解密需要一定开销</li></ul></li><li><p>访问控制</p><ul><li><p>保护方式：在<strong>FCB或索引结点</strong>中增加<strong>访问控制列表</strong>(Access-Control List, ACL)，记录各（组）用户对文件的<strong>访问权限</strong></p><blockquote><p>文件本身也有访问相关的属性，所以对一个文件的访问，常由<strong>用户访问权限和文件属性</strong>共同限制</p></blockquote></li><li><p>访问类型：</p><ul><li>读、写、删除</li><li>执行：将文件装入内存并执行</li><li>追加：在文件结尾添加新信息</li><li>列表清单：列出<strong>文件名和属性</strong>信息</li></ul></li><li><p>评价：灵活，可实现复杂文件保护功能</p></li></ul></li><li><p>存取控制矩阵</p><ul><li>行为所有文件，列为所有用户，表项为相关权限</li><li>优点：权限规定细致</li><li>缺点：过于繁琐，占用较多存储空间</li></ul></li></ul></li></ul><h3 id="4-4-磁盘的结构与管理">4.4 磁盘的结构与管理</h3><h4 id="磁盘的结构与读写："><em>磁盘的结构与读写：</em></h4><ul><li><p><u>磁盘结构</u></p><ul><li><p>磁盘与<strong>盘面</strong>：磁盘由表面涂有磁性物质的圆形盘片组成，用于记录二进制数据</p></li><li><p>磁道与<strong>柱面</strong>：</p><ul><li>盘面被划分成若干圆环，每个圆环就是一条<strong>磁道</strong></li><li>若干<strong>盘面垂直放置</strong>，同一铅锤线上（相对位置相同）的磁道构成一个<strong>柱面</strong></li></ul></li><li><p><strong>扇区</strong>与磁盘块</p><ul><li><p><strong>一个磁道</strong>被划分成若干扇区，一个扇区也是一个磁盘块</p></li><li><p>各扇区（包括不同磁道上的）存储的<strong>数据量相同</strong></p><blockquote><p>最内侧磁道扇区面积最小，数据<strong>密度</strong>最大</p></blockquote></li></ul></li></ul></li><li><p><u>磁盘读写</u></p><ul><li>磁盘的物理地址：<code>(柱面号, 盘面号, 扇区号)</code></li><li>磁盘的读写过程<ol><li>根据<strong>柱面</strong>号移动磁臂，将<strong>磁头</strong>移动到指定柱面</li><li>激活<strong>盘面</strong>对应磁头</li><li>磁盘旋转，指定<strong>扇区</strong>从磁头下划过时，完成读写</li></ol></li><li>地址结构的设计<ul><li>若采用<code>(盘面号, 柱面号, 扇区号)</code>，读取连续物理地址时，很可能经常<strong>启动磁头臂，切换柱面</strong>，效率较低</li><li>若采用<code>(柱面号, 盘面号, 扇区号)</code>，读取连续物理地址时，很可能经常切换<strong>盘面</strong>，但这<strong>不需要移动磁头臂</strong>，这需要激活相邻盘面的<strong>磁头</strong></li></ul></li></ul></li><li><p><u>磁盘分类</u></p><ul><li>按磁头是否可移动<ul><li>移动头/活动头磁盘：每个盘面只有一个磁头，磁臂可以来回伸缩带动磁头定位磁道</li><li>固定头磁盘：每个磁道均有一个磁头</li></ul></li><li>按磁盘片是否可更换<ul><li>固定盘磁盘</li><li>可换盘磁盘</li></ul></li></ul></li></ul><hr><h4 id="磁盘调度算法："><em>磁盘调度算法：</em></h4><ul><li><p><u>时间衡量指标</u></p><ul><li><p>寻找时间/寻道时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">T_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：在读/写数据前，启动磁臂，<strong>移动磁头到指定磁道</strong>所花的时间</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub><mo>=</mo><mi>s</mi><mo>+</mo><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">T_s=s+m\times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></p><ul><li>启动磁头臂耗时：s</li><li>移动磁盘耗时：匀速移动，每跨域一个磁道耗时m，共需跨越n条磁道</li></ul><blockquote><p>现代硬盘s约为2ms，m*n约为0.2ms；</p><p>受磁盘调度算法影响，操作系统可以通过磁盘调度算法控制</p></blockquote></li><li><p>延迟时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">T_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<strong>旋转磁盘</strong>，使磁头定位到目标扇区所需时间</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>×</mo><mfrac><mn>1</mn><mi>r</mi></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_R=\frac12\times\frac1r=\frac1{2r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><ul><li>r：磁盘转速</li></ul><blockquote><p>硬盘典型转速为5400转/分或7200转/分；</p></blockquote></li><li><p>传输时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">T_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：对磁盘<strong>读写数据</strong>经历的时间</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>r</mi></mfrac><mo>×</mo><mfrac><mi>b</mi><mi>N</mi></mfrac><mo>=</mo><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_t=\frac1r\times\frac bN=\frac b{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><ul><li>b：此次读写的字节数</li><li>N：每个<strong>磁道</strong>上的字节数</li></ul><blockquote><p>转速r是<strong>硬件固有属性</strong>，操作系统不可控</p></blockquote></li><li><p>减少延迟时间的方法</p><ul><li>交替编号：编号相邻的扇区在<strong>物理上不相邻</strong><ul><li>原理：访问完一个扇区需要<strong>处理一段时间</strong>才能访问下一扇区，而磁盘是<strong>不停旋转</strong>的</li></ul></li><li>错位命名：相邻盘面扇区<strong>编号错位</strong><ul><li>原理：与“交替编号”原理相同。可以<strong>减少延迟时间</strong></li></ul></li></ul></li></ul></li><li><p><u>先来先服务(FCFS)</u></p><ul><li>思想：按访问请求到达的<strong>先后顺序</strong>进行处理</li><li>优点：<ul><li>公平</li><li>若磁道访问比较集中，性能尚可</li></ul></li><li>缺点：<ul><li>若磁道访问分散，则性能差，寻道时间长</li></ul></li></ul></li><li><p><u>最短寻找时间优先(SSTF)</u></p><ul><li><p>思想：每次都优先响应<strong>距离磁头最近</strong>的磁道访问请求</p><blockquote><p>贪心算法的思想</p></blockquote></li><li><p>优点：性能好，<strong>平均寻道时间较短</strong></p></li><li><p>缺点：</p><ul><li>可能导致<strong>饥饿</strong></li><li>磁头可能在小区域来回移动</li></ul></li></ul></li><li><p><u>扫描算法/电梯算法(SCAN)</u></p><ul><li><p>思想：只有<strong>磁头移动到最边缘</strong>才能改变磁头移动方向，移动途中响应请求</p><blockquote><p>为了防止SSTF中磁头在小区域来回移动的情况</p></blockquote></li><li><p>优点：</p><ul><li>性能好，<strong>平均寻道时间较短</strong></li><li>不会产生<strong>饥饿现象</strong></li></ul></li><li><p>缺点：</p><ul><li>只有到达最边缘才能改变磁头方向</li><li>对各位置磁道<strong>响应频率不均匀</strong></li></ul></li></ul></li><li><p><u>循环扫描算法(C-SCAN)</u></p><ul><li>思想：磁头移动到最边缘时<strong>立即返回另一边</strong>，返回途中不响应请求，移动途中响应请求</li><li>优点：基于SCAN，比SCAN响应各位置磁道更平均</li><li>缺点：<ul><li>只有到达最边缘才能改变磁头方向，且返回时必须返回到另一边缘</li><li>平均寻道时间比SCAN更长</li></ul></li></ul></li><li><p><u>LOOK算法</u></p><ul><li><p>思想：基于SCAN算法，只要在磁头移动方向上<strong>不再有请求</strong>，就立即改变磁头方向</p><blockquote><p>若题目中无特别说明，SCAN算法指的就是LOOK算法</p></blockquote></li><li><p>优点：基于SCAN算法，寻道时间进一步缩短</p></li></ul></li><li><p><u>C-LOOK算法</u></p><ul><li><p>思想：基于C-SCAN算法，只要在磁头移动方向上<strong>不再有请求</strong>，就立即改变磁头方向，且只需要<strong>返回到有磁道访问请求</strong>处</p><blockquote><p>若题目中无特别说明，C-SCAN算法指的就是C-LOOK算法</p></blockquote></li><li><p>优点：基于C-SCAN算法，寻道时间进一步缩短</p></li></ul></li></ul><hr><h4 id="磁盘的管理："><em>磁盘的管理：</em></h4><ul><li><p><u>磁盘初始化</u></p><ol><li><p>低级格式化/物理格式化：将磁盘和各个磁道划分为<strong>扇区</strong></p><ul><li><p>一个扇区可分为<strong>头、数据区域、尾</strong>三个部分</p></li><li><p>头和尾可存放<strong>扇区管理信息</strong></p><blockquote><p>扇区校验码等</p></blockquote></li></ul></li><li><p>磁盘分区：每个分区由若干柱面组成</p><blockquote><p>这是为了<strong>操作系统</strong>能将自己的数据结构记录在磁盘上</p></blockquote></li><li><p>逻辑格式化：建立<strong>文件系统</strong></p><ul><li><p>建立根目录文件</p></li><li><p>建立用于存储空间管理的数据结构</p><blockquote><p>位示图、空闲分区表等</p></blockquote></li></ul></li></ol></li><li><p><u>引导块的管理</u></p><ul><li><p><strong>初始化程序/自举程序</strong>：完成计算机启动时的初始化工作</p><ul><li>若将整个初始化程序存放于ROM中，则无法修改，灵活性差</li></ul></li><li><p><strong>引导块/启动块/启动分区</strong>：位于磁盘的固定位置，存放完整的初始化程序</p><ul><li><p>拥有启动分区的磁盘称为<strong>启动磁盘</strong>或<strong>系统磁盘</strong></p><blockquote><p>例如Windows中的C盘</p></blockquote></li></ul></li><li><p>自举装入程序：<strong>ROM</strong>中存放的较小的装入程序，计算机启动时运行，从而找到引导块，读入完整的<strong>自举程序</strong>到<strong>内存</strong>，完成初始化</p></li></ul></li><li><p><u>坏块的管理</u></p><ul><li><p>坏块的概念：无法正常使用的<strong>扇区</strong></p><ul><li>属于<strong>硬件故障</strong>，操作系统无法修复</li><li>应当将<strong>坏块标记</strong>，以免错误使用</li></ul></li><li><p>坏块的标记：</p><ul><li><p><strong>对操作系统不透明</strong>的方法：<strong>逻辑格式化</strong>时将坏块标记出来</p><blockquote><p>例如：在FAT上标明</p><p>适用于简单的磁盘</p></blockquote></li><li><p><strong>对操作系统透明</strong>的方法：<strong>物理格式化</strong>时，<strong>磁盘控制器</strong>就开始维护一个<strong>坏块链</strong>，并管理<strong>备用扇区</strong>，替换坏块</p><blockquote><p>磁盘控制器是是磁盘内部的硬件部件；</p><p>这种方式也叫<strong>扇区备用方案</strong>，适用于复杂磁盘</p></blockquote></li></ul></li></ul></li></ul><h2 id="5-设备管理">5 设备管理</h2><h3 id="5-1-I-O设备概述">5.1 I/O设备概述</h3><h4 id="I-O设备的概念："><em>I/O设备的概念：</em></h4><ul><li><p>将<strong>数据输入/输出</strong>计算机的外部设备</p><blockquote><p>UNIX系统将外部设备抽象为一种特殊的文件，用户可以使用与文件操作相同的方式对外部设备进行操作</p></blockquote></li><li><p>属于计算机中的硬件部件</p></li></ul><hr><h4 id="I-O设备的分类："><em>I/O设备的分类：</em></h4><ul><li><p><u>按<strong>使用特性</strong>分类</u></p><ul><li><p><strong>人机交互</strong>类外部设备</p><blockquote><p>如键盘、鼠标、打印机等；</p><p>数据传输速度慢</p></blockquote></li><li><p><strong>存储</strong>设备</p><blockquote><p>如移动硬盘、光盘等；</p><p>数据传输速度快</p></blockquote></li><li><p><strong>网络通信</strong>设备</p><blockquote><p>如调制解调器等；</p><p>数据传输速度介于二者之间</p></blockquote></li></ul></li><li><p><u>按<strong>传输速率</strong>分类</u></p><ul><li><p>低速设备</p><blockquote><p>如鼠标、键盘等；</p><p>传输速率为每秒几个到几百个字节</p></blockquote></li><li><p>中速设备</p><blockquote><p>如激光打印机等；</p><p>传输速率为每秒数千到上万个字节</p></blockquote></li><li><p>高速设备</p><blockquote><p>如磁盘等；</p><p>传输速率为每秒数千到千兆个字节</p></blockquote></li></ul></li><li><p><u>按<strong>信息交换</strong>的单位分类</u></p><ul><li><p>块设备</p><ul><li>传输速率较高</li><li>可寻址：可以随机读/写任一块</li></ul><blockquote><p>如磁盘等；</p><p>数据传输的<strong>基本单位是“块”</strong></p></blockquote></li><li><p>字符设备</p><ul><li>传输速率较低</li><li><strong>不可寻址</strong></li><li>在输入/输出时常采用<strong>中断</strong>驱动方式</li></ul><blockquote><p>如鼠标、键盘等；</p><p>数据传输的<strong>基本单位是字符或字节</strong></p></blockquote></li></ul></li></ul><h3 id="5-2-I-O控制">5.2 I/O控制</h3><h4 id="I-O控制器："><em>I/O控制器：</em></h4><ul><li><p><u>I/O设备的构成</u></p><ul><li><p>机械部件：用于<strong>执行具体I/O操作</strong>的部分</p><blockquote><p>例如鼠标和键盘的按钮、显示器的LED屏、移动硬盘的磁臂、移动硬盘的磁盘盘面等</p></blockquote></li><li><p><strong>电子部件/IO控制器/设备控制器</strong>：一块插入主板扩充槽的印刷电路板，操作系统通过电子部件间接控制机械部件</p></li></ul></li><li><p><u>I/O控制器主要功能(对外)</u></p><ul><li><p><strong>控制</strong>：接受和识别CPU发出的命令</p></li><li><p><strong>状态</strong>：向CPU报告设备的状态</p></li><li><p><strong>数据</strong>：数据交换</p></li><li><p><strong>地址</strong>：地址识别</p><ul><li>I/O控制器为上述各寄存器设置特定“地址”，通过CPU提供的地址判断要读/写的寄存器</li></ul></li></ul><blockquote><p>一个 I/O 控制器可以控制多个设备</p></blockquote></li><li><p><u>I/O控制器的内部组成与功能</u></p><ul><li><p>CPU与控制器的接口</p><ul><li><p>功能：在CPU与控制器之间传输信号</p></li><li><p>组成部分：</p><ul><li><p><strong>控制寄存器</strong>：存放命令和参数</p><blockquote><p>如CPU发来的read/write命令</p></blockquote></li><li><p><strong>状态寄存器</strong>：记录I/O设备当前状态</p><blockquote><p>如1表示空闲，0表示忙碌</p></blockquote></li><li><p><strong>数据寄存器</strong>：在输入/输出时暂存数据，CPU通过数据线取出和放入数据</p></li></ul><blockquote><p>不存在“地址寄存器”</p></blockquote></li></ul></li><li><p>I/O逻辑：</p><ul><li>功能：识别CPU发出的命令，并向设备发出命令，实现<strong>对设备的控制</strong></li><li>组成部分<ul><li><strong>地址线</strong>：CPU通过地址线指明要操作的<strong>设备</strong></li><li><strong>控制线</strong>：CPU通过控制线发出<strong>命令</strong></li></ul></li></ul></li><li><p>控制器与设备的接口</p><ul><li><p>功能：在控制器与设备之间<strong>传输信号</strong></p><blockquote><p>注意，该接口主要用于传输信号，实际用于控制设备的是 I/O 逻辑</p></blockquote></li><li><p>组成部件</p><ul><li><p><strong>数据</strong>部分：传送要输入/输出的数据</p></li><li><p><strong>状态</strong>部分：设备向控制器反馈状态</p><blockquote><p>忙碌或空闲</p></blockquote></li><li><p><strong>控制</strong>部分：控制器向设备发出控制信息</p></li></ul></li></ul></li></ul></li><li><p><u>两种寄存器编址方式</u></p><blockquote><p>一个I/O控制器可以控制多个设备。数据寄存器、控制寄存器、状态寄存器可以有多个，这些寄存器都要有相应的<strong>地址</strong></p></blockquote><ul><li><strong>内存映像I/O</strong><ul><li>编址方式：控制器中的寄存器与内存<strong>统一编址</strong></li><li>优点：可以采用<strong>对内存操作的指令</strong>来对控制器进行操作</li><li>缺点：占用内存地址空间</li></ul></li><li><strong>寄存器独立编址</strong><ul><li>编址方式：控制器中的寄存器独立编址</li><li>优点：不占用内存地址空间</li><li>缺点：需要设置<strong>专门的指令</strong>来操作控制器</li></ul></li></ul></li></ul><hr><h4 id="I-O控制方式："><em>I/O控制方式：</em></h4><blockquote><p>总体来说，I/O控制方式的发展过程就是要尽量<strong>减少CPU对I/O过程的干预</strong>，将CPU从I/O中解脱出来，以便高效处理数据任务</p></blockquote><ul><li><p><u>程序直接控制方式</u></p><ul><li><p>读写流程：轮询</p><blockquote><p>以读操作为例具体讲解。其他方式的读写流程可以类比</p></blockquote><ol><li><p>CPU向控制器发出读指令，设备启动，<strong>状态寄存器</strong>设为1</p></li><li><p>CPU轮询检查控制器状态，直到状态寄存器变为0</p></li><li><p>输入设备准备数据后将数据传给控制器，并报告状态</p><blockquote><p>这里的状态可能是正常，也可能是<strong>错误条件</strong></p></blockquote></li><li><p>控制器接收数据存入<strong>数据寄存器</strong>中，修改状态寄存器为0</p></li><li><p>CPU发现设备就绪，从数据寄存器中读取数据至<strong>寄存器</strong>，再存入<strong>内存</strong></p></li><li><p>如果还需要读取数据，CPU可以继续发出读指令</p></li></ol></li><li><p>CPU干预频率：极高</p><ul><li>一次I/O开始前、完成后需要CPU介入</li><li>一次I/O过程中CPU需要轮询</li></ul></li><li><p>数据传输</p><ul><li>单位：每次读/写<strong>一个字</strong></li><li>流向：<ul><li>读：I/O设备<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>CPU寄存器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>内存</li><li>写：内存<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>CPU寄存器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>I/O设备</li></ul></li></ul></li><li><p>评价</p><ul><li><p>优点：<strong>实现简单</strong>，在读/写指令后，加上实现轮询逻辑的一系列指令即可</p><blockquote><p>因此得名“程序直接控制方式”</p></blockquote></li><li><p>缺点：CPU和I/O设备<strong>串行</strong>工作，CPU需要轮询“忙等”，<strong>资源利用率低</strong></p></li></ul></li></ul></li><li><p><u>中断驱动方式</u></p><ul><li><p>读写流程：中断</p><ol><li><p>CPU发出I/O命令，<strong>阻塞</strong>等待I/O的进程，切换到其他进程执行其他命令</p></li><li><p>I/O完成后，<strong>控制器</strong>向CPU发出<strong>中断信号</strong></p></li><li><p>CPU检测到中断信号，保存进程现场，执行<strong>中断处理程序</strong></p><blockquote><p>CPU会在每条指令末尾检测中断信号；</p><p>中断处理过程需要保存、恢复进程运行环境，有一定开销，可能降低系统性能</p></blockquote></li><li><p>CPU、I/O控制器、主存交换数据</p></li><li><p>I/O结束后，CPU恢复等待I/O的进程</p></li></ol></li><li><p>CPU干预频率</p><ul><li>一次I/O开始前、完成后需要CPU介入</li><li>一次I/O过程中CPU可以切换到其他进程</li></ul></li><li><p>数据传输</p><ul><li>单位：每次读/写<strong>一个字</strong></li><li>流向：<ul><li>读：I/O设备<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>CPU寄存器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>内存</li><li>写：内存<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>CPU寄存器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>I/O设备</li></ul></li></ul></li><li><p>评价</p><ul><li>优点：I/O过程中CPU和I/O设备可<strong>并行工作</strong>，<strong>资源利用率提升</strong></li><li>缺点：频繁中断处理会消耗CPU较多时间</li></ul></li></ul></li><li><p><u>DMA方式</u></p><ul><li><p>DMA(Direct Memory Access)控制器：一种特殊的I/O控制器</p><ul><li>DR(Data Register)：暂存<strong>设备与内存</strong>之间传递的数据</li><li>MAR(Memory Address Register)：指明数据 <strong>在内存/存放到内存</strong> 中的位置</li><li>DC(Data Counter)：剩余要读/写的字节数</li><li>CR(Command Register)：存放CPU发来的<strong>I/O命令</strong>或<strong>设备状态</strong></li></ul></li><li><p>读写流程：</p><ol><li>CPU向DMA发出命令，阻塞I/O进程，切换到其他进程<ul><li>操作类型</li><li>数据量</li><li>内存地址</li><li>外部设备地址</li></ul></li><li>DMA准备好<strong>一块数据</strong>后，向CPU发出中断信号</li></ol></li><li><p>CPU干预频率</p><ul><li>一次I/O开始前、完成后需要CPU介入</li><li>一次I/O过程中CPU可以切换到其他进程</li></ul></li><li><p>数据传输</p><ul><li><p>单位：每次读/写<strong>一块或多块连续数据</strong></p><blockquote><p>如果要操作多块数据，则必须是<strong>连续的多块数据</strong>，离散的多块依然需要<strong>中断</strong></p></blockquote></li><li><p>流向：</p><ul><li>读：I/O设备<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>内存</li><li>写：内存器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>I/O设备</li></ul></li></ul></li><li><p>评价</p><ul><li>优点：数据传输<strong>以“块”为单位</strong>，CPU介入频率降低；内存与设备之间数据传输不需要经过CPU，提升数据传输率，提高CPU与I/O设备并行性。</li><li>缺点：CPU每发出一条I/O指令，只可以读写一个或多个连续块。如果要读写多个离散块，或要写入离散内存区域，CPU需要发出多条I/O指令，经历多次<strong>中断</strong>。</li></ul></li></ul></li><li><p><u>通道控制方式</u></p><ul><li><p>通道：也叫 I/O 处理机，一种硬件，可以识别CPU指令，并执行一系列<strong>通道指令</strong>，控制I/O控制器操作设备</p><blockquote><p>通道可以执行的指令很单一，且通道程序存放于内存中，与CPU共享内存，可以看成一个“简单版”CPU；</p><p>一个系统中可以有多个通道，一个通道可以控制多个I/O控制器，一个I/O控制器也可以控制多个I/O设备</p></blockquote></li><li><p>读写流程：</p><ol><li>CPU向通道发出I/O指令，指明<strong>通道程序</strong>在<strong>内存</strong>中的位置，指明<strong>要操作的设备</strong>，阻塞I/O进程，切换到其他进程</li><li>通道执行<strong>通道程序</strong><ul><li>操作类型</li><li>数据量</li><li>内存地址</li><li>外部设备地址</li></ul></li><li>通道执行完任务后，向CPU发出<strong>中断</strong>信号，CPU处理中断</li></ol></li><li><p>CPU干预频率：极低</p><ul><li>一次通道程序执行开始前、完成后需要CPU介入</li><li>一次通道程序执行过程中CPU可以切换到其他进程</li></ul></li><li><p>数据传输</p><ul><li>单位：每次读/写<strong>一组数据块</strong></li><li>流向：<ul><li>读：I/O设备器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>内存</li><li>写：内存器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rarr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>I/O设备</li></ul></li></ul></li><li><p>评价</p><ul><li><p>优点：CPU、通道、I/O设备可并行工作，资源利用率很高</p><blockquote><p>通道和中断技术结合能实现CPU与I/O的<strong>并行</strong>工作。通道可以独立于CPU运行，中断可以避免CPU轮询</p></blockquote></li><li><p>缺点：需要专门的通道硬件支持</p><blockquote><p>字节多路通道用作连接大量的低速或中速 I/O 设备</p></blockquote></li></ul></li></ul></li></ul><h3 id="5-3-I-O系统">5.3 I/O系统</h3><h4 id="I-O软件层次结构："><em>I/O软件层次结构：</em></h4><ul><li><p><u>用户层软件</u></p><ul><li>对上层的服务：实现与用户交互的接口，提供方便的<strong>库函数</strong></li><li>对下层的调用：将用户请求翻译成格式化的I/O请求，通过<strong>系统调用</strong>请求操作系统内核服务</li></ul></li><li><p><u>设备独立性软件/系统调用处理层</u></p><ul><li><p>对上层的服务：提供统一的系统调用接口，将系统调用参数翻译成设备操作命令；进行<strong>I/O调度</strong></p></li><li><p>对下层的封装：</p><ul><li><p><strong>设备保护</strong>：将设备看作特殊的文件，类似<strong>文件保护</strong></p></li><li><p><strong>差错处理</strong>：对设备的错误进行处理</p></li><li><p><strong>数据缓冲区管理</strong>：通过缓冲技术屏蔽设备之间数据交换单位和传输速度的差异</p></li><li><p><strong>设备分配与回收</strong>：对设备这种<strong>临界资源</strong>进行分配回收</p></li><li><p><strong>设备映射</strong>：通过<strong>逻辑设备表（LUT）</strong>，建立<strong>逻辑设备名与物理设备名</strong>的映射关系；根据设备类型调用相应的驱动程序</p><blockquote><p>逻辑设备表（LUT），也可称为<strong>设备映射表（DMT）</strong></p><p>LUT的字段：</p><ul><li>逻辑设备名：以<strong>文件路径</strong>的形式体现</li><li>物理设备名</li><li><strong>驱动程序入口地址</strong>，每种类型 I/O 设备都需要一个驱动程序</li></ul><p>LUT管理方式：</p><ul><li>各个操作系统只有一张</li><li>每个用户均有一张，存放于用户管理进程的PCB中</li></ul></blockquote></li></ul></li></ul></li><li><p><u>设备驱动程序 / 命令解释程序</u></p><blockquote><p>直接与硬件交互，进行与中断无关的操作</p></blockquote><ul><li><p>对上层的服务：解释并执行上层 <strong>I/O 命令</strong>，转化为特定的<strong>设备操作</strong></p></li><li><p>对下层的调用：控制硬件，执行符合硬件特性的驱动；设置设备寄存器，检查设备状态等</p><blockquote><p>驱动程序一般会以一个<strong>独立进程</strong>的方式存在。<strong>每类</strong>设备只需要<strong>一个</strong>驱动程序</p></blockquote></li></ul></li><li><p><u>中断处理程序</u></p><blockquote><p>直接与硬件交互，进行与中断有关的操作</p></blockquote><ul><li>对上层的服务：提供<strong>对中断的处理</strong></li><li>对下层的调用：接收控制器的<strong>中断信号</strong>，处理I/O数据</li></ul></li><li><p><u>硬件层</u>：参考“<strong>I/O控制</strong>”小节</p></li></ul><hr><h4 id="I-O核心子系统功能："><em>I/O核心子系统功能：</em></h4><blockquote><p>I/O核心子系统包括：</p><ul><li>设备独立性软件</li><li>设备驱动程序</li><li>中断处理程序</li></ul></blockquote><ul><li><p><u>I/O调度</u></p><ul><li><p>用某种<strong>算法</strong>确定一个<strong>处理I/O请求的顺序</strong></p><blockquote><p>例如：先来先服务、优先级算法、短作业优先算法等</p></blockquote></li></ul></li><li><p><u>设备保护</u></p><ul><li>操作系统提供<strong>文件保护</strong>功能，管理<strong>用户访问权限</strong></li><li>将<strong>设备</strong>看作特殊的<strong>文件</strong>，有对应的FCB</li></ul></li><li><p><u>假脱机技术 / SPOOLing 技术</u></p><ul><li><p><strong>脱机技术</strong></p><ul><li><p>工作方式：在<strong>外围控制机</strong>控制下，以<strong>磁带</strong>作为中介，<strong>设备</strong>与磁带数据交换，<strong>主机</strong>与磁带数据交换</p><blockquote><p>这个过程不需要主机/CPU的控制，所以叫“脱机”</p></blockquote></li><li><p>作用：缓解设备与CPU的速度矛盾，实现<strong>预输入、缓输出</strong></p></li></ul></li><li><p><strong>假脱机技术</strong>：用<strong>软件</strong>的方式模拟脱机技术</p><ul><li><p><strong>输入井与输出井</strong>：在<strong>磁盘</strong>中开辟出的两块存储区域，模拟<strong>脱机技术中的磁带</strong>，分别收容<strong>I/O设备输入与普通进程输出</strong>的数据</p><blockquote><p>有<strong>井管理程序</strong>的支持</p></blockquote></li><li><p><strong>输入进程与输出进程</strong>：模拟脱机输入输出时的<strong>外围控制机</strong>，协调**“井”和设备**</p><blockquote><p>所以，要实现 SPOOLing 技术，必须要有<strong>多道程序技术</strong>的支持；</p><p>所以，提高单机资源利用率的关键技术依然是<strong>多道程序设计技术</strong>；</p><p>注意这里是用<strong>多进程模拟外围计算机</strong>，而不需要真的外围计算机</p></blockquote></li><li><p><strong>输入缓冲区与输出缓冲区</strong>：<strong>内存</strong>中的缓冲区，由输入进程与输出进程管理，在<strong>输入输出设备</strong>与<strong>输入输出井</strong>之间缓冲</p><blockquote><p>输入输出进程配合缓冲区实现<strong>预输入和缓输出程序</strong>；</p><p>普通进程的输出先到<strong>输出井</strong>，再经<strong>输出缓冲区</strong>到输出设备，而输入设备的输入先经<strong>输入缓冲区</strong>再到<strong>输入井</strong></p></blockquote></li></ul></li><li><p><strong>作用</strong>：用 SPOOLing 技术可以将<strong>独占式</strong>设备改造成<strong>共享</strong>设备</p><blockquote><p>举例：共享打印机</p><ul><li>相关数据结构<ul><li><strong>输出井中的空闲缓冲区</strong>：存放用户要打印的数据</li><li><strong>假脱机文件队列</strong>：存放打印请求表（说明用户的打印数据<strong>存放位置</strong>等信息）</li></ul></li><li>工作流程<ol><li>用户进程提出打印请求</li><li>系统应答用户请求，为该进程分配<strong>输出井</strong>中的<strong>空闲缓冲区</strong>，并建立<strong>打印请求表</strong>，挂到假脱机文件队列上</li><li>打印机空闲时，取出一张打印请求表，将数据从输出井送往<strong>输出缓冲区</strong>，再<strong>输出</strong>到打印机，处理打印任务</li></ol></li><li>共享性的实现<ul><li>用输出井为每个打印进程分配<strong>存储区</strong>，相当于分配<strong>逻辑设备</strong>，实现共享性</li></ul></li></ul></blockquote></li></ul></li><li><p><u>设备的分配与回收</u></p><ul><li><p>设备<strong>固有属性</strong>/设备的独占式性与共享性</p><ul><li><p>独占式设备：只允许各个进程<strong>串行</strong>使用的设备</p><blockquote><p>例如：打印机、磁带机、扫描仪</p><p>分配独占设备可能引发死锁</p></blockquote></li><li><p>共享设备：一段时间内允许多个进程<strong>并发</strong>使用的设备</p><blockquote><p>例如：磁盘</p><p>往往是宏观上并行，微观上交替，注意是一段时间而不是同一时间。</p><p>分配共享设备不会引发死锁</p></blockquote></li><li><p>虚拟设备：采用 <strong>SPOOLing技术</strong> 将独占设备改造成虚拟的共享设备，允许<strong>多进程共享</strong></p><blockquote><p>把一个物理设备变成<strong>多个</strong>对应的<strong>逻辑</strong>设备</p></blockquote></li></ul></li><li><p>设备<strong>分配算法</strong>：与I/O调度算法类似，有先来先服务、优先级、短作业优先等等</p></li><li><p>设备<strong>安全性</strong>：</p><ul><li><p><strong>安全分配</strong>方式：为进程分配一个设备后就将其阻塞，直到I/O完成再唤醒</p><blockquote><p>一段时间内每个进程只能使用一个设备，破坏了“请求和保持”条件，但对一个进程来说，CPU和I/O设备只能串行工作</p></blockquote></li><li><p><strong>不安全分配</strong>方式：为进程分配一个设备后，进程可继续执行并发出新的I/O请求，只有某个I/O请求得不到满足时才将进程阻塞</p><blockquote><p>一个进程可同时使用多个设备，可以并发处理计算任务和I/O任务，但有可能发生死锁，需要死锁避免、死锁的检测和解除</p></blockquote></li></ul></li><li><p>设备独立性：</p><ul><li>概念：用户在<strong>编程</strong>时使用的设备与实际设备无关</li><li>优点：<ul><li>方便用户编程，便于程序移植，使程序运行不受具体机器环境的限制</li><li>可以提高分配的灵活性和设备的利用率</li></ul></li></ul></li><li><p>设备<strong>静态分配与动态分配</strong></p><ul><li><p>静态分配：进程运行前为其分配全部所需资源，运行结束后归还资源</p><blockquote><p>破坏“请求和保持”条件；<strong>独占设备</strong>常采用</p></blockquote></li><li><p>动态分配：进程运行过程中动态申请设备资源</p><blockquote><p><strong>共享设备</strong>常采用</p></blockquote></li></ul></li><li><p>设备分配管理中的<strong>数据结构</strong></p><ul><li><p>通道控制表（CHCT）：每个通道均有一张，记录其信息</p><ul><li><p>通道<strong>标识符</strong>：各通道的唯一ID</p></li><li><p>通道<strong>状态</strong>：忙碌、空闲、故障等</p></li><li><p>与通道连接的控制器表首址：通过该指针可以找到所有COCT</p><blockquote><p>系统中可以有多个通道，一个通道可控制多个I/O控制器，一个I/O控制器又可控制多个设备</p></blockquote></li><li><p>通道队列的指针：指向正在等待该通道的<strong>进程队列</strong>（由进程PCB组成）</p><blockquote><p>回顾：系统会根据阻塞原因不同，将进程PCB挂到不同的阻塞队列中。接下来的控制器队列和通道队列也同理</p></blockquote></li></ul></li><li><p><strong>控制器控制表</strong>（COCT）：每个I/O控制器均有一张，记录其信息</p><ul><li>控制器<strong>标识符</strong>：各I/O控制器的唯一ID</li><li>控制器<strong>状态</strong>：忙碌、空闲、故障等</li><li>指向<strong>通道控制表</strong>的指针</li><li><strong>控制器队列</strong>的指针：指向正在等待该I/O控制器的<strong>进程队列</strong>（由进程PCB组成）</li></ul></li><li><p><strong>设备控制表</strong>（DCT）：每个设备均有一张，记录设备情况</p><ul><li><p>设备<strong>类型</strong>：打印机、扫描仪、键盘等</p></li><li><p>设备<strong>标识符</strong>：即<strong>物理设备名</strong>，系统中每个设备的物理设备名唯一</p><blockquote><p>计算机系统为每台设备确定一个编号以便<strong>区分和识别</strong>设备，这个确定的编号称为设备的<strong>绝对号</strong></p></blockquote></li><li><p>设备<strong>状态</strong>：忙碌、空闲、故障等</p></li><li><p>指向<strong>控制器控制表</strong>的指针</p></li><li><p>重复执行次数或时间：重复多次I/O操作或一段时间或I/O仍然不成功，则认为I/O失败</p></li><li><p><strong>设备队列</strong>的指针：指向正在等待该设备的<strong>进程队列</strong>（由进程PCB组成）</p></li></ul></li><li><p>系统设备表（SDT）：记录系统中全部设备的情况，每个设备对应一个条目</p><ul><li><p>设备<strong>类型</strong></p></li><li><p>设备<strong>标识符</strong></p></li><li><p><strong>DCT</strong></p></li><li><p><strong>驱动程序入口</strong></p></li></ul></li></ul></li><li><p>设备<strong>分配流程</strong>及其改进</p><ol><li><p>根据进程请求的<strong>物理设备名</strong>查找<strong>SDT</strong></p><blockquote><p>使用<strong>物理设备名</strong>的缺点：</p><ul><li><strong>底层细节</strong>对用户不透明，编程不方便</li><li>若<strong>更换</strong>物理设备，则进程无法运行（因为把名写死了）</li><li>若设备正在忙碌，进程必须<strong>阻塞</strong>，无法使用<strong>同类型设备</strong>（因为把名写死了）</li></ul><p>改进：</p><ul><li>用户只需提供逻辑设备名或<strong>设备类型</strong></li><li>建立逻辑设备表（LUT），若在表中找到符合要求的设备可直接尝试分配</li></ul></blockquote></li><li><p>根据<strong>SDT</strong>找到<strong>DCT</strong>，若设备<strong>忙碌</strong>则将进程PCB挂到<strong>设备队列</strong>，不忙碌则分配设备</p><blockquote><p>改进：</p><ul><li>查找SDT中<strong>指定类型且空闲</strong>的设备，找到则分配，都忙碌则阻塞</li><li>分配成功后在逻辑设备表中<strong>新增表项</strong></li></ul></blockquote></li><li><p>根据DCT找到COCT，若I/O控制器<strong>忙碌</strong>则将进程PCB挂到<strong>控制器队列</strong>，不忙碌则分配设备</p></li><li><p>根据COCT找到CHCT，若通道<strong>忙碌</strong>则将进程PCB挂到<strong>通道队列</strong>，不忙碌则分配设备</p></li><li><p>只有设备、控制器、通道均分配成功，这次设备分配才算成功，然后可以启动I/O设备进行数据传输</p></li></ol></li></ul></li><li><p><u>缓冲区管理</u></p><ul><li><p>缓冲区概述</p><ul><li><p>概念：本节课中指的是<strong>内存缓冲区</strong>，是<strong>设备独立性软件</strong>负责管理好的缓冲区</p><blockquote><p>磁盘必须使用缓冲技术，鼠标、图形卡等也有必要使用缓冲技术</p></blockquote></li><li><p>特性：向缓冲区<strong>充入数据</strong>与从缓冲区<strong>取出数据</strong>的操作必须串行，禁止边充边取</p></li><li><p>作用：</p><ul><li>缓和CPU与I/O设备<strong>速度不匹配</strong>的矛盾</li><li>提高CPU与I/O设备之间并行性</li><li>减少CPU<strong>中断频率</strong></li><li>解决<strong>数据粒度不匹配</strong>问题</li></ul></li><li><p>工作框架：设备–(T)–缓冲区–(M)–工作区–©–处理</p><ul><li><strong>块设备</strong>：即慢速I/O设备</li><li><strong>缓冲区</strong>：位于<strong>内存</strong>中，与块设备进行<strong>数据输入/输出（T）</strong></li><li><strong>进程工作区</strong>：位于<strong>内存</strong>中，与缓冲区进行<strong>数据传送（M）</strong></li><li><strong>CPU</strong>：对进程工作区的数据进行<strong>处理（C）</strong></li></ul></li></ul></li><li><p><strong>单缓冲</strong></p><ul><li><p>策略：操作系统为本次请求读写的块设备在<strong>主存</strong>中分配<strong>一个缓冲区</strong></p><blockquote><p>若无特殊说明，一个缓冲区大小就是<strong>一块</strong></p></blockquote></li><li><p>处理<strong>一块数据</strong>的平均耗时：Max(C, T) + M</p><blockquote><p>分析问题的初始状态：工作区满、缓冲区空</p><p>一开始 C 和 T 就可以并行，但 M 要等 C 和 T 都结束才能进行，因为缓冲区不能边充边取，CPU 也不能边工作边取缓冲区中的数据，且缓冲区满后必须先等 CPU 取出再充入</p></blockquote><blockquote><p>如果不是平均时间，而是特定几块数据，则先计算<strong>从全空到达初始状态</strong>的时间，然后用<strong>平均</strong>时间计算除了最后一块外的所有块，最后一块从初始状态开始，<strong>不考虑下一块的读入</strong>，单独计算</p></blockquote></li><li><p>主机间通信时的应用：若两机配置单缓冲区，则同一时刻只能一方发送、一方接收</p></li></ul></li><li><p><strong>双缓冲</strong></p><ul><li><p>策略：操作系统为本次请求读写的块设备在<strong>主存</strong>中分配<strong>两个缓冲区</strong></p></li><li><p>处理<strong>一块数据</strong>的平均耗时：Max(T, C+M)</p><blockquote><p>分析问题的初始状态：工作区空，一个缓冲区满、另一个缓冲区空</p><p>一开始 M 和 T 可以并行，C 必须在 M 后，由于缓冲区不能边充边取，要回到初始状态，必须等 T 和 C+M 都结束</p></blockquote><blockquote><p>如果不是平均时间，而是特定几块数据，则先计算<strong>从全空到达初始状态</strong>的时间，然后用<strong>平均</strong>时间计算除了最后一块外的所有块，最后一块从初始状态开始，<strong>不考虑下一块的读入</strong>，单独计算</p></blockquote></li><li><p>主机间通信时的应用：若两机配置双缓冲区，则可以同时发送与接收</p></li></ul></li><li><p><strong>循环缓冲</strong>：多个缓冲区链接成<strong>循环队列</strong>，in 指针指向第一个空缓冲区，out 指针指向第一个满缓冲区</p></li><li><p><strong>缓冲池</strong></p><ul><li>三个队列：<ul><li>空缓冲队列：存储<strong>空缓冲区</strong></li><li>输入队列：存储存放了<strong>输入数据</strong>的缓冲区</li><li>输出队列：存储存放了<strong>输出数据</strong>的缓冲区</li></ul></li><li>四种工作缓冲区<ul><li>收容输入（hin）：<strong>输入进程输入</strong>时会从<strong>空缓冲队列</strong>中摘下缓冲区置于此，接收完输入后再挂到<strong>输入队列</strong>中</li><li>提取输入（sin）：<strong>计算进程取得输入</strong>时会从<strong>输入队列</strong>中摘下缓冲区置于此，提取输入后再挂回<strong>空缓冲队列</strong></li><li>收容输出（hout）：<strong>计算进程产生输出</strong>时会从<strong>空缓冲队列</strong>中摘下缓冲区置于此，接收完输出后再挂到<strong>输出队列</strong>中</li><li>提取输出（sout）：<strong>输出进程输出</strong>时会从<strong>输出队列</strong>中摘下缓冲区置于此，提取输出后再挂回<strong>空缓冲队列</strong></li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Computer Theory </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Operation System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx</title>
      <link href="/posts/a477be03.html"/>
      <url>/posts/a477be03.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Overview">1 Overview</h2><h3 id="1-1-Conceptual-Framework">1.1 Conceptual Framework</h3><ul><li>目前有4种比较有名的版本：nginx开源、nginx商业、OpenResty、Tengine</li></ul><h3 id="1-2-Install-Simple-Use">1.2 Install &amp; Simple Use</h3><ul><li><p>运行nginx主目录下的<code>sbin/nginx</code>即可启动、终止、关闭、重新加载配置</p><blockquote><p>nginx默认运行在80端口</p></blockquote></li></ul><p>目录结构：</p><ul><li>sbin：存放可执行程序<strong>nginx</strong></li><li>conf：存放<strong>配置文件</strong></li><li>html：存放页面和其他<strong>静态资源</strong></li><li>logs：存放<strong>日志</strong>，包括访问日志、错误日志和nginx主进程id号</li><li>*_temp：存放运行过程中的<strong>临时文件</strong></li></ul><h3 id="1-3-基本运行原理">1.3 基本运行原理</h3><ul><li>Master作为<strong>主进程</strong>，调度Worker子进程</li><li>Worker<strong>子进程响应用户请求</strong>，根据<strong>配置文件</strong>寻找资源</li></ul><h2 id="2-Configuration-Virtual-Host">2 Configuration &amp; Virtual Host</h2><h3 id="2-1-最小配置">2.1 最小配置</h3><ul><li><strong>业务（worker）进程数</strong>和<strong>单业务进程可接受连接数</strong></li><li><strong>http模块</strong><ul><li><strong>mime类型</strong>配置</li><li><strong>sendfile</strong>配置</li><li><strong>keepalive_timeout</strong>配置</li><li><strong>server模块</strong>配置<strong>虚拟主机</strong>，包括端口号、域名/主机名、资源映射等</li></ul></li></ul><h2 id="3-Reverse-Proxy-Load-Balancing">3 Reverse Proxy &amp; Load Balancing</h2>]]></content>
      
      
      <categories>
          
          <category> Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用抽象和具体的思维总结计算机知识</title>
      <link href="/posts/594cff7c.html"/>
      <url>/posts/594cff7c.html</url>
      
        <content type="html"><![CDATA[<p><strong>抽象与具体相结合</strong>是人认识事物的重要方式。</p><p>计算机领域的知识纷繁复杂，<code>操作系统</code>这样庞大的学科能称作是一门知识，<code>Git</code>这样零碎的技术也算是一种知识。</p><p>为了加深对这些知识的<strong>宏观理解</strong>，我们有必要借助<u><strong>抽象与具体相结合</strong></u>的方式来整理它们。</p><p>但是，计算机学科之间总会有<strong>交叉影响</strong>，这就导致我们难以找到一种分类方式将它们划分得“泾渭分明”。</p><p>因此，下文给出的分类之间依然存在着交叉的现象。不过我们不必太在乎这一点，因为我们总结知识的目标是加深对它们的理解，<strong>提升思维层面的认知</strong>，所以只要找到<u>适合自己思维方式</u>的分类即可。</p><blockquote><p>注意，下文罗列出的知识只是我本人学习过的，并不具有全面性。</p><p>标题中，以“<strong>理论</strong>”结尾的代表“<strong>抽象</strong>”，以“<strong>应用</strong>”结尾的代表“<strong>具体</strong>”。</p></blockquote><h3 id="1-计算机基础理论">1 计算机基础理论</h3><ul><li>计算机组成原理与体系结构</li><li>数据结构</li><li>操作系统</li><li>编译原理</li><li>计算机网络</li></ul><h3 id="2-软件开发基础理论">2 软件开发基础理论</h3><ul><li>软件工程</li><li>数据库系统</li><li>设计模式</li><li>多线程与高并发理论</li><li>大数据与分布式系统</li></ul><h3 id="3-计算机理论的应用">3 计算机理论的应用</h3><h4 id="3-1-操作系统理论的应用">3.1 操作系统理论的应用</h4><ul><li>Linux</li></ul><h4 id="3-3-计算机网络的应用">3.3 计算机网络的应用</h4><ul><li>AJAX</li><li>Java Servlet</li><li>Tomcat</li><li>Nginx</li><li>Netty</li><li>gRPC</li></ul><h3 id="4-软件开发理论的应用">4 软件开发理论的应用</h3><h4 id="4-1-软件工程理论的应用">4.1 软件工程理论的应用</h4><ul><li>Maven</li><li>Gradle</li><li>Git</li><li>Docker</li></ul><h4 id="4-2-数据库理论的应用">4.2 数据库理论的应用</h4><ul><li>MySQL</li><li>Redis</li><li>RocksDB</li><li>MongoDB</li></ul><h4 id="4-3-设计模式的应用">4.3 设计模式的应用</h4><ul><li>Spring</li><li>MyBatis</li><li>Vue</li><li>uniapp</li></ul><h4 id="4-4-多线程与高并发理论的应用">4.4 多线程与高并发理论的应用</h4><ul><li>Java并发编程</li></ul><h4 id="4-5大数据与分布式系统理论的应用">4.5大数据与分布式系统理论的应用</h4><ul><li>Hadoop</li><li>Spark</li><li>Kubernetes</li></ul>]]></content>
      
      
      <categories>
          
          <category> Life Sharing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Life Sharing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">认识事物的基本方法：抽象与具体</span><br><span class="line">解决问题的基本方法：分而治之</span><br><span class="line">提升自我的基本方法：反思（思维局限、盲目自信...）</span><br><span class="line">平衡心态的基本方法：找到合适的度</span><br><span class="line">保持乐观的基本方法：承认过去，面向未来</span><br></pre></td></tr></table></figure><p>工科学习思维：</p><ul><li><u>深入理解</u><strong>是什么、有什么用、怎么用</strong></li><li>在有必要时<u>简单了解</u><strong>为什么</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life Sharing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life Sharing </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>About Me</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>✍️ Hello Everyone! I’m Sun Duo, a <strong>junior undergraduate</strong>, majoring in <em><strong>Computer Science</strong></em>, attending college at <strong>Harbin Institiude of Technology, Shenzhen</strong>.</p><p>✍️ 大家伙好呀！俺叫孙铎，是一名<strong>大三混混</strong>，专业是<em><strong>修电脑</strong></em>，就读于<strong>哈(hǎ)工大（深圳）</strong></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/categorybar.css"/>
      <url>/css/categorybar.css</url>
      
        <content type="html"><![CDATA[#categoryBar {    width: 100% !important;}ul.categoryBar-list {    margin: 5px 5px 0 5px !important;    padding: 0 !important;}li.categoryBar-list-item {    font-weight: bold;    display: inline-block;    height: 180px !important;    margin: 5px 0.5% 0 0.5% !important;    background-image: linear-gradient(rgba(0,0,0,0.4) 25%, rgba(16,16,16,0) 100%);    border-radius: 10px;    padding: 25px 0 25px 25px !important;    box-shadow: rgba(50,50,50,0.3) 50px 50px 50px 50px inset;    overflow: hidden;    background-size: 100% !important;    background-position: center !important;}li.categoryBar-list-item:hover {    background-size: 110% !important;    box-shadow: inset 500px 50px 50px 50px rgba(50,50,50,0.6);}li.categoryBar-list-item:hover span.categoryBar-list-descr {    transition: all 0.5s;    transform: translate(-100%, 0);}a.categoryBar-list-link {    color: #fff !important;    font-size: 20px !important;}a.categoryBar-list-link::before {    content: '|' !important;    color: #fff !important;    font-size: 20px !important;}a.categoryBar-list-link:after {    content: '';    position: relative;    width: 0;    bottom: 0;    display: block;    height: 3px;    border-radius: 3px;    background-color: #fff;}a.categoryBar-list-link:hover:after {    width: 90%;    left: 1%;    transition: all 0.5s;}span.categoryBar-list-count {    display: block !important;    color: #fff !important;    font-size: 20px !important;}span.categoryBar-list-count::before {    content: '\f02d' !important;    padding-right: 15px !important;    display: inline-block;    font-weight: 600;    font-style: normal;    font-variant: normal;    font-family: 'Font Awesome 6 Free';    text-rendering: auto;    -webkit-font-smoothing: antialiased;}span.categoryBar-list-descr {    padding: 5px;    display: block !important;    color: #fff !important;    font-size: 20px !important;    position: relative;    right: -100%;}@media screen and (max-width: 650px) {    li.categoryBar-list-item {        width: 48% !important;        height: 150px !important;        margin: 5px 1% 0 1% !important;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* fonts */@font-face {    font-family: Candyhome;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);    font-display: swap;    font-weight: lighter;}/*@font-face {  font-family: 'ZhuZiAYuanJWD';  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);  font-display: swap;  font-weight: lighter;}*/body {    font-family: 'Candyhome', 'Microsoft YaHei', sans-serif;}article#article-container {    font-family: 'Times New Roman', simsun, fangsong;    font-size: 125%; /* for times new roman */}div.toc-content {    font-family: 'Times New Roman', simsun, fangsong;    /*font-style: italic;*/    font-weight: bold;    font-size: 105%; /* for times new roman */}/*div#menus {  font-family: 'Candyhome';}h1#site-title {  font-family: 'Candyhome';  font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {  font-family: Candyhome;}.iconfont {  font-family: 'iconfont' !important;  font-size: 3em;  !* 可以定义图标大小 *!  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}*//* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}.icon-zhongbiao::before {    color: #f7c768;}/* bilibli番剧插件 *//*#article-container .bangumi-tab.bangumi-active {  background: var(--anzhiyu-theme);  color: var(--anzhiyu-ahoverbg);  border-radius: 10px;}a.bangumi-tab:hover {  text-decoration: none !important;}.bangumi-button:hover {  background: var(--anzhiyu-theme) !important;  border-radius: 10px !important;  color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {  text-decoration: none !important;}.bangumi-button {  padding: 5px 10px !important;}a.bangumi-tab {  padding: 5px 10px !important;}svg.icon.faa-tada {  font-size: 1.1em;}.bangumi-info-item {  border-right: 1px solid #f2b94b;}.bangumi-info-item span{  color: #f2b94b;}.bangumi-info-item em{  color: #f2b94b;}*//* 解决artitalk的图标问题 */#uploadSource > svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {    background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme='dark'] #recent-posts > .recent-post-item {    background: #121212;}[data-theme='dark'] .card-widget {    background: #121212 !important;}[data-theme='dark'] div#post {    background: #121212 !important;}[data-theme='dark'] div#tag {    background: #121212 !important;}[data-theme='dark'] div#archive {    background: #121212 !important;}[data-theme='dark'] div#page {    background: #121212 !important;}[data-theme='dark'] div#category {    background: #121212 !important;}[data-theme='dark'] div#category {    background: transparent !important;}/* 一图流 *//* 页脚透明 */#footer {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside > div > button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {    width: 10px;    height: 10px;}::-webkit-scrollbar-thumb {    background-color: #57b2d3;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #425aef;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* 鼠标图标 */body, i, time, span, div {    cursor: url('/img/x1.cur'), auto;}a, a i, a time, a span, a div,[type='button']:not(:disabled),[type='reset']:not(:disabled),[type='submit']:not(:disabled),button:not(:disabled),button:not(:disabled) i,button:not(:disabled) div,button:not(:disabled) span {    cursor: url('/img/x2.cur'), auto !important;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #425aef;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}/* post toc */.item-headline {    font-size: 95%;}.toc-percentage {    font-size: 90%;}.toc-content {    font-size: 95%;}/* post toc *//* snackbar text center */.snackbar-container {    font-family: 'Candyhome', serif;    display: flex;    justify-content: center;    align-items: center;}/* footer */#you-pai-cloud {    display: flex;    justify-content: center;    align-items: center}.cdn-icon {    margin-left: 8px;    margin-right: 8px}/* footer *//* electric-clock *//*span.card-clock-location, span.card-clock-windDir {    font-family: 'Candyhome', serif;}*//* electric-clock *//* swiper *//*main.layout#content-inner {    display: flex;    align-items: center;}*//*main.layout#content-inner div.swiper_container_card {    display: none;}*/#home-top {    margin: auto;    width: 76%;}/* pagination */#pagination {    width: 100%;    margin: auto;}span.space {    color: #00c4b6;}/* pagination *//* hexo-butterfly-article-double-row */div#recent-posts > .recent-post-item > .recent-post-info > .content {    display: -webkit-box;    overflow: hidden;    text-overflow: ellipsis;    -webkit-line-clamp: 2;    -webkit-box-orient: vertical;    margin-bottom: 15px;    font-size: 85%;}#recent-posts > .recent-post-item > .recent-post-info {    text-align: center;}div#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {    margin-bottom: 0;    font-size: 70%;}/* swiper */a.blog-slider__button {    display: none;}div.blog-slider {    min-height: 200px;    margin-bottom: 0;}/* aside card */div#aside-content .card-info .card-info-data {    display: none;}div.sidebar-site-data.site-data.is-center {    display: none;}/* post */#post {    padding: 30px 50px;}/* category card*//*a.categoryBar-list-link {    font-size: 50% !important;}*/#categoryBar {    /*overflow-x: scroll;*/    margin-bottom: 10px;}/*#categoryBar::-webkit-scrollbar {    display: unset !important;    width: 10px;    height: 10px;}#categoryBar::-webkit-scrollbar-thumb {    background-color: red !important;    border-radius: 2em;}*//*#categoryBar::-webkit-scrollbar-corner {    background-color: transparent;}#categoryBar::-moz-selection {    color: #fff;    background-color: #425aef;}*/#categoryBar ul li a, #categoryBar ul li span{    font-size: 18px !important;}#categoryBar ul li a::before{    content: '' !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/footer.js"/>
      <url>/js/footer.js</url>
      
        <content type="html"><![CDATA[var now = new Date;function createtime() {    var t = new Date("09/10/2022 00:00:00");    now.setTime(now.getTime() + 250);    var e = (now - t) / 1e3 / 60 / 60 / 24, a = Math.floor(e), n = (now - t) / 1e3 / 60 / 60 - 24 * a,        r = Math.floor(n);    1 == String(r).length && (r = "0" + r);    var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r, i = Math.floor(s);    1 == String(i).length && (i = "0" + i);    var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i, l = Math.round(o);    1 == String(l).length && (l = "0" + l);    let g = "";    g = `<span class='textTip'>本站居然运行了 ${a} 天</span>        <span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span>         <i class='fas fa-heartbeat' style='color:red'></i>`    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = g)}setInterval((() => {    createtime()}), 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/pwa/manifest.json"/>
      <url>/pwa/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"SunDocker's Personal Blog","short_name":"SunDocker","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Links</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/swiper_init.js"/>
      <url>/js/swiper_init.js</url>
      
        <content type="html"><![CDATA[var swiper = new Swiper('.blog-slider', {    passiveListeners: true,    spaceBetween: 30,    effect: 'fade',    loop: true,    autoplay: {        disableOnInteraction: true,        delay: 3000    },    mousewheel: true,    // autoHeight: true,    pagination: {        el: '.blog-slider__pagination',        clickable: true,    }});var comtainer = document.getElementById('swiper_container');if (comtainer !== null) {    comtainer.onmouseenter = function () {        swiper.autoplay.stop();    };    comtainer.onmouseleave = function () {        swiper.autoplay.start();    }} else {}const randomDiv = document.querySelector("#random-hover div");randomDiv.innerText = "Hang around"]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
